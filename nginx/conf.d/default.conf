upstream reverse_api_public {
    server api_public:20000;
    # server other:8889 weight=3;
    keepalive 32;
}

server {
    listen       443 ssl;
    server_name  localhost;

    client_max_body_size 20M;

    ssl_certificate           /etc/nginx/ssl/openssl/cert.pem;
    ssl_certificate_key       /etc/nginx/ssl/openssl/key.pem;
    ssl_protocols             TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers               'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    location / {
        proxy_pass http://reverse_api_public;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Nginx-Proxy true;

        proxy_cache_bypass $http_upgrade; # Tránh cache cho kết nối websocket.
        proxy_redirect off;
    }

    server_tokens off;
}

server {
    listen        80;
    listen        [::]:80;
    server_name   localhost;
    return        301 https://$host$request_uri;
}
