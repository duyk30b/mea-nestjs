/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ([
/* 0 */,
/* 1 */
/***/ ((module) => {

module.exports = require("@fastify/cors");

/***/ }),
/* 2 */
/***/ ((module) => {

module.exports = require("@fastify/helmet");

/***/ }),
/* 3 */
/***/ ((module) => {

module.exports = require("@nestjs/common");

/***/ }),
/* 4 */
/***/ ((module) => {

module.exports = require("@nestjs/core");

/***/ }),
/* 5 */
/***/ ((module) => {

module.exports = require("@nestjs/platform-fastify");

/***/ }),
/* 6 */
/***/ ((module) => {

module.exports = require("@nestjs/swagger");

/***/ }),
/* 7 */
/***/ ((module) => {

module.exports = require("fastify-multer");

/***/ }),
/* 8 */
/***/ ((module) => {

module.exports = require("request-ip");

/***/ }),
/* 9 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServerExceptionFilter = exports.BusinessException = exports.ValidationException = void 0;
const common_1 = __webpack_require__(3);
const throttler_1 = __webpack_require__(10);
const nestjs_i18n_1 = __webpack_require__(11);
const rxjs_1 = __webpack_require__(12);
const url = __webpack_require__(13);
class ValidationException extends Error {
    constructor(validationErrors = []) {
        const getMessageError = (validate) => {
            return validate
                .map((i) => {
                if (i.constraints)
                    return Object.values(i.constraints).join('. ');
                if (i.children)
                    return getMessageError(i.children);
                return '---------';
            })
                .join('. ');
        };
        const msg = getMessageError(validationErrors);
        super(msg);
        this.errors = validationErrors;
    }
}
exports.ValidationException = ValidationException;
class BusinessException extends Error {
    constructor(message, args = {}, statusCode = common_1.HttpStatus.BAD_REQUEST) {
        super(message);
        this.statusCode = statusCode;
        this.args = args;
    }
    static create(options) {
        const { message, args, statusCode, details } = options;
        const exception = new BusinessException(message, args, statusCode);
        exception.details = details;
        return exception;
    }
}
exports.BusinessException = BusinessException;
let ServerExceptionFilter = class ServerExceptionFilter {
    catch(exception, host) {
        var _a, _b, _c;
        let statusCode = common_1.HttpStatus.INTERNAL_SERVER_ERROR;
        let { message } = exception;
        const { stack } = exception;
        let details = undefined;
        common_1.Logger.error(stack);
        const errors = exception.errors || [];
        const i18n = nestjs_i18n_1.I18nContext.current(host);
        switch (exception['constructor'].name) {
            case ValidationException.name: {
                statusCode = common_1.HttpStatus.UNPROCESSABLE_ENTITY;
                break;
            }
            case BusinessException.name: {
                const businessException = exception;
                message = i18n.translate(exception.message, {
                    args: businessException.args,
                });
                statusCode = businessException.statusCode;
                details = businessException.details;
                break;
            }
            case throttler_1.ThrottlerException.name: {
                statusCode = common_1.HttpStatus.TOO_MANY_REQUESTS;
                message = i18n.translate('common.TooManyRequests');
                break;
            }
            case common_1.NotFoundException.name: {
                statusCode = common_1.HttpStatus.NOT_FOUND;
                break;
            }
            case common_1.ForbiddenException.name: {
                statusCode = common_1.HttpStatus.FORBIDDEN;
                message = i18n.translate('common.Forbidden');
                break;
            }
        }
        const [req, res] = host.getArgs();
        if (host.getType() === 'http') {
            const ctx = host.switchToHttp();
            const response = ctx.getResponse();
            const request = ctx.getRequest();
            const { external } = request.raw;
            const { originalUrl, method, body } = request;
            const urlParse = url.parse(originalUrl, true);
            const basicExternal = {
                ip: external.ip,
                browser: external.browser,
                mobile: external.mobile,
                uid: external.uid,
                oid: external.oid,
                username: (_a = external.user) === null || _a === void 0 ? void 0 : _a.username,
                phone: (_b = external.organization) === null || _b === void 0 ? void 0 : _b.phone,
                email: (_c = external.organization) === null || _c === void 0 ? void 0 : _c.email,
            };
            const logMessage = JSON.stringify({
                statusCode,
                message,
                type: '[HTTP]',
                method,
                path: urlParse.pathname,
                query: urlParse.query,
                errors,
                body,
                external: basicExternal,
            });
            if (statusCode === common_1.HttpStatus.UNPROCESSABLE_ENTITY) {
                common_1.Logger.warn(logMessage, exception.name);
            }
            else if (statusCode === common_1.HttpStatus.NOT_FOUND) {
                common_1.Logger.debug(logMessage, exception.name);
            }
            else {
                common_1.Logger.error(logMessage, exception.name);
            }
            return response.code(statusCode).send({
                statusCode,
                errors,
                message,
                details,
                path: originalUrl,
                time: new Date().toISOString(),
            });
        }
        else if (host.getType() === 'rpc') {
            if (res.constructor.name === 'NatsContext') {
                const response = res;
                const info = {
                    statusCode,
                    message,
                    errors,
                    details: {
                        subject: response.getSubject(),
                        request: req,
                        stack,
                    },
                };
                return (0, rxjs_1.from)([info]);
            }
            else if (res.constructor.name === 'KafkaContext') {
                const response = res;
                const info = {
                    statusCode,
                    message,
                    errors,
                    details: {
                        topic: response.getTopic(),
                        partition: response.getPartition(),
                        offset: response.getMessage().offset,
                        request: req,
                    },
                };
                return (0, rxjs_1.from)([info]);
            }
        }
    }
};
exports.ServerExceptionFilter = ServerExceptionFilter;
exports.ServerExceptionFilter = ServerExceptionFilter = __decorate([
    (0, common_1.Catch)(Error)
], ServerExceptionFilter);


/***/ }),
/* 10 */
/***/ ((module) => {

module.exports = require("@nestjs/throttler");

/***/ }),
/* 11 */
/***/ ((module) => {

module.exports = require("nestjs-i18n");

/***/ }),
/* 12 */
/***/ ((module) => {

module.exports = require("rxjs");

/***/ }),
/* 13 */
/***/ ((module) => {

module.exports = require("url");

/***/ }),
/* 14 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RootGuard = exports.IsRoot = exports.ROOT_GUARD = void 0;
const common_1 = __webpack_require__(3);
const core_1 = __webpack_require__(4);
const exception_filter_1 = __webpack_require__(9);
exports.ROOT_GUARD = 'ROOT_GUARD';
const IsRoot = () => (0, common_1.SetMetadata)(exports.ROOT_GUARD, true);
exports.IsRoot = IsRoot;
let RootGuard = class RootGuard {
    constructor(reflector) {
        this.reflector = reflector;
    }
    async canActivate(context) {
        const requireRoot = this.reflector.getAllAndOverride(exports.ROOT_GUARD, [
            context.getHandler(),
            context.getClass(),
        ]);
        if (!requireRoot)
            return true;
        const request = context.switchToHttp().getRequest();
        const { external } = request.raw;
        if (!external.uid
            || !external.oid
            || !external.user
            || !external.organization
            || !!external.user.deletedAt
            || !external.organization.isActive) {
            throw new exception_filter_1.BusinessException(external.error, {}, common_1.HttpStatus.UNAUTHORIZED);
        }
        return external.oid === 1;
    }
};
exports.RootGuard = RootGuard;
exports.RootGuard = RootGuard = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof core_1.Reflector !== "undefined" && core_1.Reflector) === "function" ? _a : Object])
], RootGuard);


/***/ }),
/* 15 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UserGuard = exports.IsUser = exports.USER_GUARD = void 0;
const common_1 = __webpack_require__(3);
const core_1 = __webpack_require__(4);
const exception_filter_1 = __webpack_require__(9);
exports.USER_GUARD = 'USER_GUARD';
const IsUser = () => (0, common_1.SetMetadata)(exports.USER_GUARD, true);
exports.IsUser = IsUser;
let UserGuard = class UserGuard {
    constructor(reflector) {
        this.reflector = reflector;
    }
    async canActivate(context) {
        const requireUser = this.reflector.getAllAndOverride(exports.USER_GUARD, [
            context.getHandler(),
            context.getClass(),
        ]);
        if (!requireUser)
            return true;
        const request = context.switchToHttp().getRequest();
        const { external } = request.raw;
        if (external.error) {
            throw new exception_filter_1.BusinessException(external.error, {}, common_1.HttpStatus.UNAUTHORIZED);
        }
        if (!external.uid
            || !external.oid
            || !external.user
            || !external.organization
            || !!external.user.deletedAt
            || !external.organization.isActive) {
            throw new exception_filter_1.BusinessException('error.Token.AccessTokenExpired', {}, common_1.HttpStatus.UNAUTHORIZED);
        }
        return true;
    }
};
exports.UserGuard = UserGuard;
exports.UserGuard = UserGuard = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof core_1.Reflector !== "undefined" && core_1.Reflector) === "function" ? _a : Object])
], UserGuard);


/***/ }),
/* 16 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AccessLogInterceptor = void 0;
const common_1 = __webpack_require__(3);
const rxjs_1 = __webpack_require__(12);
const operators_1 = __webpack_require__(17);
const url = __webpack_require__(13);
const exception_filter_1 = __webpack_require__(9);
let AccessLogInterceptor = class AccessLogInterceptor {
    constructor(logger = new common_1.Logger('ACCESS_LOG')) {
        this.logger = logger;
    }
    intercept(context, next) {
        var _a, _b, _c;
        const createTime = new Date();
        const className = context.getClass().name;
        const funcName = context.getHandler().name;
        const [req, res] = context.getArgs();
        const showData = true;
        const message = {};
        if (context.getType() === 'http') {
            const ctx = context.switchToHttp();
            const request = ctx.getRequest();
            const { external } = request.raw;
            const basicExternal = {
                ip: external.ip,
                browser: external.browser,
                mobile: external.mobile,
                uid: external.uid,
                oid: external.oid,
                username: (_a = external.user) === null || _a === void 0 ? void 0 : _a.username,
                phone: (_b = external.organization) === null || _b === void 0 ? void 0 : _b.phone,
                email: (_c = external.organization) === null || _c === void 0 ? void 0 : _c.email,
            };
            const urlParse = url.parse(request.originalUrl, true);
            if (basicExternal.oid) {
                message.OID = basicExternal.oid;
            }
            message.type = '[API]';
            message.method = request.method;
            message.url = `${request.protocol}://${request.raw.hostname}${urlParse.pathname}`;
            message.query = urlParse.query;
            message.className = className;
            message.funcName = funcName;
            message.external = basicExternal;
            if (showData) {
                message.body = request.body;
            }
        }
        else if (context.getType() === 'rpc') {
            if (res.constructor.name === 'NatsContext') {
                const response = res;
                message.type = '[NATS]';
                message.subject = response.getSubject();
                message.className = className;
                message.funcName = funcName;
                if (showData) {
                    message.request = req;
                }
            }
            if (res.constructor.name === 'KafkaContext') {
                const response = res;
                message.type = '[KAFKA]';
                message.topic = response.getTopic();
                message.partition = response.getPartition();
                message.offset = response.getMessage().offset;
                message.className = className;
                message.funcName = funcName;
                if (showData) {
                    message.request = req;
                }
                message.topicInfo = {
                    topic: response.getTopic(),
                    partition: response.getPartition(),
                    offset: response.getMessage().offset,
                };
            }
        }
        return next.handle().pipe((0, operators_1.catchError)((err) => {
            message.errorMessage = err.message;
            message.time = `${Date.now() - createTime.getTime()}ms`;
            if (err instanceof exception_filter_1.ValidationException) {
                message.errors = err.errors;
                this.logger.warn(JSON.stringify(message));
            }
            else {
                this.logger.error(JSON.stringify(message));
            }
            return (0, rxjs_1.throwError)(() => err);
        }), (0, operators_1.tap)((xx) => {
            message.time = `${Date.now() - createTime.getTime()}ms`;
            this.logger.log(JSON.stringify(message));
        }));
    }
};
exports.AccessLogInterceptor = AccessLogInterceptor;
exports.AccessLogInterceptor = AccessLogInterceptor = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [Object])
], AccessLogInterceptor);


/***/ }),
/* 17 */
/***/ ((module) => {

module.exports = require("rxjs/operators");

/***/ }),
/* 18 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TimeoutInterceptor = void 0;
const common_1 = __webpack_require__(3);
const rxjs_1 = __webpack_require__(12);
const operators_1 = __webpack_require__(17);
let TimeoutInterceptor = class TimeoutInterceptor {
    intercept(context, next) {
        return next.handle().pipe((0, operators_1.timeout)(10000), (0, operators_1.catchError)((err) => {
            if (err instanceof rxjs_1.TimeoutError) {
                return (0, rxjs_1.throwError)(() => new common_1.RequestTimeoutException());
            }
            return (0, rxjs_1.throwError)(() => err);
        }));
    }
};
exports.TimeoutInterceptor = TimeoutInterceptor;
exports.TimeoutInterceptor = TimeoutInterceptor = __decorate([
    (0, common_1.Injectable)()
], TimeoutInterceptor);


/***/ }),
/* 19 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TransformResponseInterceptor = void 0;
const common_1 = __webpack_require__(3);
const nestjs_i18n_1 = __webpack_require__(11);
const operators_1 = __webpack_require__(17);
let TransformResponseInterceptor = class TransformResponseInterceptor {
    intercept(context, next) {
        const i18n = nestjs_i18n_1.I18nContext.current();
        return next.handle().pipe((0, operators_1.map)((response) => ({
            success: (response === null || response === void 0 ? void 0 : response.success) != null ? response === null || response === void 0 ? void 0 : response.success : true,
            message: i18n.translate((response === null || response === void 0 ? void 0 : response.message) || 'common.Success', {
                args: (response === null || response === void 0 ? void 0 : response.args) || {},
            }),
            time: new Date().toISOString(),
            meta: response === null || response === void 0 ? void 0 : response.meta,
            data: response === null || response === void 0 ? void 0 : response.data,
        })));
    }
};
exports.TransformResponseInterceptor = TransformResponseInterceptor;
exports.TransformResponseInterceptor = TransformResponseInterceptor = __decorate([
    (0, common_1.Injectable)()
], TransformResponseInterceptor);


/***/ }),
/* 20 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EmailConfig = exports.GlobalConfig = void 0;
const config_1 = __webpack_require__(21);
exports.GlobalConfig = (0, config_1.registerAs)('global', () => ({
    NODE_VERSION: process.versions.node,
    NODE_ENV: process.env.NODE_ENV,
    DOMAIN_FRONT_END: process.env.DOMAIN_FRONT_END,
    DOMAIN_BACK_END: process.env.DOMAIN_BACK_END,
    API_PUBLIC_HOST: process.env.API_PUBLIC_HOST || 'localhost',
    API_PUBLIC_PORT: Number(process.env.API_PUBLIC_PORT || 20000),
    FILE_SERVICE_HOST: process.env.FILE_SERVICE_HOST || 'localhost',
    FILE_SERVICE_PORT: Number(process.env.FILE_SERVICE_PORT || 20000),
    SQL_TYPE: process.env.SQL_TYPE,
    SQL_HOST: process.env.SQL_HOST,
    SQL_PORT: process.env.SQL_PORT,
    SQL_DATABASE: process.env.SQL_DATABASE,
}));
exports.EmailConfig = (0, config_1.registerAs)('email', () => ({
    name: process.env.EMAIL_NAME || 'medihome',
    host: process.env.EMAIL_HOST || 'smtp.gmail.com',
    port: +process.env.EMAIL_PORT || 465,
    user: process.env.EMAIL_USER || 'medihome.vn@gmail.com',
    password: process.env.EMAIL_PASSWORD,
    from: process.env.EMAIL_ADDRESS || 'medihome.vn@gmail.com',
    subject_prefix: process.env.EMAIL_SUBJECT_PREFIX || '【medihome】',
}));


/***/ }),
/* 21 */
/***/ ((module) => {

module.exports = require("@nestjs/config");

/***/ }),
/* 22 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AppModule = void 0;
const common_1 = __webpack_require__(3);
const config_1 = __webpack_require__(21);
const core_1 = __webpack_require__(4);
const throttler_1 = __webpack_require__(10);
const nestjs_i18n_1 = __webpack_require__(11);
const path = __webpack_require__(23);
const cache_data_module_1 = __webpack_require__(24);
const permission_guard_1 = __webpack_require__(87);
const jwt_extend_module_1 = __webpack_require__(88);
const detect_client_middleware_1 = __webpack_require__(92);
const repository_module_1 = __webpack_require__(93);
const sql_module_1 = __webpack_require__(154);
const google_driver_module_1 = __webpack_require__(156);
const auth_module_1 = __webpack_require__(161);
const api_root_module_1 = __webpack_require__(188);
const api_module_1 = __webpack_require__(219);
const app_controller_1 = __webpack_require__(502);
const app_service_1 = __webpack_require__(503);
const email_module_1 = __webpack_require__(163);
const health_module_1 = __webpack_require__(504);
const image_manager_module_1 = __webpack_require__(509);
const event_listener_module_1 = __webpack_require__(510);
const socket_module_1 = __webpack_require__(515);
let AppModule = class AppModule {
    configure(consumer) {
        consumer.apply(nestjs_i18n_1.I18nMiddleware).forRoutes('*');
        consumer.apply(detect_client_middleware_1.DetectClientMiddleware).forRoutes('*');
    }
};
exports.AppModule = AppModule;
exports.AppModule = AppModule = __decorate([
    (0, common_1.Module)({
        imports: [
            config_1.ConfigModule.forRoot({
                envFilePath: [`.env.${process.env.NODE_ENV || 'local'}`, '.env'],
                isGlobal: true,
            }),
            throttler_1.ThrottlerModule.forRoot([{ ttl: 5000, limit: 5 }]),
            nestjs_i18n_1.I18nModule.forRoot({
                fallbackLanguage: 'vi',
                loader: nestjs_i18n_1.I18nJsonLoader,
                loaderOptions: {
                    path: path.join(__dirname, '../../../assets/i18n/'),
                    watch: true,
                },
                resolvers: [new nestjs_i18n_1.QueryResolver(['lang', 'l']), new nestjs_i18n_1.HeaderResolver(['x-lang'])],
                typesOutputPath: path.join(__dirname, '../../../assets/generated/i18n.generated.ts'),
            }),
            sql_module_1.SqlModule,
            repository_module_1.RepositoryModule,
            jwt_extend_module_1.JwtExtendModule,
            google_driver_module_1.GoogleDriverModule,
            health_module_1.HealthModule,
            email_module_1.EmailModule,
            image_manager_module_1.ImageManagerModule,
            event_listener_module_1.EventListenerModule,
            socket_module_1.SocketModule,
            cache_data_module_1.CacheDataModule,
            auth_module_1.AuthModule,
            api_module_1.ApiModule,
            api_root_module_1.ApiRootModule,
        ],
        controllers: [app_controller_1.AppController],
        providers: [
            {
                provide: core_1.APP_GUARD,
                useClass: throttler_1.ThrottlerGuard,
            },
            {
                provide: core_1.APP_GUARD,
                useClass: permission_guard_1.PermissionGuard,
            },
            app_service_1.AppService,
        ],
    })
], AppModule);


/***/ }),
/* 23 */
/***/ ((module) => {

module.exports = require("path");

/***/ }),
/* 24 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CacheDataModule = void 0;
const common_1 = __webpack_require__(3);
const redis_module_1 = __webpack_require__(25);
const cache_data_service_1 = __webpack_require__(30);
const cache_token_service_1 = __webpack_require__(86);
let CacheDataModule = class CacheDataModule {
};
exports.CacheDataModule = CacheDataModule;
exports.CacheDataModule = CacheDataModule = __decorate([
    (0, common_1.Global)(),
    (0, common_1.Module)({
        imports: [redis_module_1.RedisModule],
        providers: [cache_data_service_1.CacheDataService, cache_token_service_1.CacheTokenService],
        exports: [cache_data_service_1.CacheDataService, cache_token_service_1.CacheTokenService],
    })
], CacheDataModule);


/***/ }),
/* 25 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RedisModule = void 0;
const common_1 = __webpack_require__(3);
const config_1 = __webpack_require__(21);
const redis_config_1 = __webpack_require__(26);
const redis_controller_1 = __webpack_require__(27);
const redis_service_1 = __webpack_require__(28);
let RedisModule = class RedisModule {
};
exports.RedisModule = RedisModule;
exports.RedisModule = RedisModule = __decorate([
    (0, common_1.Global)(),
    (0, common_1.Module)({
        imports: [config_1.ConfigModule.forFeature(redis_config_1.RedisConfig)],
        controllers: [redis_controller_1.RedisController],
        providers: [redis_service_1.RedisService],
        exports: [redis_service_1.RedisService],
    })
], RedisModule);


/***/ }),
/* 26 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RedisConfig = void 0;
const config_1 = __webpack_require__(21);
exports.RedisConfig = (0, config_1.registerAs)('redis', () => ({
    host: process.env.REDIS_HOST,
    port: Number(process.env.REDIS_PORT),
    password: process.env.REDIS_PASSWORD,
    db: process.env.REDIS_DB || '0',
}));


/***/ }),
/* 27 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RedisController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const redis_service_1 = __webpack_require__(28);
let RedisController = class RedisController {
    constructor(redisService) {
        this.redisService = redisService;
    }
    async get({ key }) {
        const value = await this.redisService.get(key);
        return { data: { key, value } };
    }
    async getKeys({ pattern }) {
        const keys = await this.redisService.getKeys(pattern + '*');
        return { data: { keys } };
    }
    async set(body) {
        const { key, value, milliseconds } = body;
        await this.redisService.set(key, value, { datetime: new Date(Date.now() + milliseconds) });
        return { data: { key, value } };
    }
    async del(key) {
        await this.redisService.del(key);
        return { data: { key } };
    }
};
exports.RedisController = RedisController;
__decorate([
    (0, common_1.Get)('get/:key'),
    (0, swagger_1.ApiParam)({ name: 'key', example: 'demo', required: true }),
    __param(0, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], RedisController.prototype, "get", null);
__decorate([
    (0, common_1.Get)('get-keys'),
    (0, swagger_1.ApiQuery)({ name: 'pattern', example: 'TOKEN_', required: true }),
    __param(0, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], RedisController.prototype, "getKeys", null);
__decorate([
    (0, common_1.Post)('set'),
    (0, swagger_1.ApiBody)({
        schema: {
            type: 'object',
            properties: {
                key: { type: 'string', example: 'demo' },
                value: { type: 'string', example: 'hah hah hah' },
                milliseconds: { type: 'number', example: 10000 },
            },
        },
    }),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], RedisController.prototype, "set", null);
__decorate([
    (0, common_1.Delete)('del/:key'),
    (0, swagger_1.ApiParam)({ name: 'key', example: 'demo', required: true }),
    __param(0, (0, common_1.Param)('key')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], RedisController.prototype, "del", null);
exports.RedisController = RedisController = __decorate([
    (0, swagger_1.ApiTags)('Redis'),
    (0, common_1.Controller)('redis'),
    __metadata("design:paramtypes", [typeof (_a = typeof redis_service_1.RedisService !== "undefined" && redis_service_1.RedisService) === "function" ? _a : Object])
], RedisController);


/***/ }),
/* 28 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var RedisService_1;
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RedisService = void 0;
const common_1 = __webpack_require__(3);
const config_1 = __webpack_require__(21);
const redis_1 = __webpack_require__(29);
const redis_config_1 = __webpack_require__(26);
let RedisService = RedisService_1 = class RedisService {
    constructor(redisConfig) {
        this.redisConfig = redisConfig;
        this.logger = new common_1.Logger(RedisService_1.name);
    }
    async onModuleInit() {
        try {
            this.redisClient = (0, redis_1.createClient)({
                url: `redis://${this.redisConfig.host}:${this.redisConfig.port}`,
                password: this.redisConfig.password,
            });
            await this.redisClient.connect();
            this.logger.log('Redis connection established');
        }
        catch (error) {
            this.logger.error('Redis connection error', error);
        }
    }
    async onModuleDestroy() {
        if (this.redisClient) {
            await this.redisClient.quit();
        }
    }
    async get(key) {
        try {
            return await this.redisClient.get(key);
        }
        catch (error) {
            this.logger.error(`Error getting key ${key}`, error);
            throw error;
        }
    }
    async getKeys(pattern) {
        const keys = [];
        let cursor = 0;
        do {
            const scanResult = await this.redisClient.scan(cursor, { MATCH: pattern, COUNT: 1 });
            cursor = scanResult.cursor;
            keys.push(...scanResult.keys);
        } while (cursor !== 0);
        return keys;
    }
    async set(key, value, TTL) {
        try {
            const a = new Date();
            if (TTL && TTL.milliseconds) {
                await this.redisClient.set(key, value, { PX: TTL.milliseconds });
            }
            else if (TTL && TTL.datetime) {
                await this.redisClient.set(key, value, { PXAT: TTL.datetime.getTime() });
            }
            else {
                await this.redisClient.set(key, value);
            }
        }
        catch (error) {
            this.logger.error(`Error setting key ${key}`, error);
            throw error;
        }
    }
    async del(key) {
        try {
            await this.redisClient.del(key);
        }
        catch (error) {
            this.logger.error(`Error deleting key ${key}`, error);
            throw error;
        }
    }
};
exports.RedisService = RedisService;
exports.RedisService = RedisService = RedisService_1 = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, common_1.Inject)(redis_config_1.RedisConfig.KEY)),
    __metadata("design:paramtypes", [typeof (_a = typeof config_1.ConfigType !== "undefined" && config_1.ConfigType) === "function" ? _a : Object])
], RedisService);


/***/ }),
/* 29 */
/***/ ((module) => {

module.exports = require("redis");

/***/ }),
/* 30 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CacheDataService = void 0;
const common_1 = __webpack_require__(3);
const setting_entity_1 = __webpack_require__(31);
const organization_repository_1 = __webpack_require__(34);
const permission_repository_1 = __webpack_require__(80);
const role_repository_1 = __webpack_require__(81);
const setting_repository_1 = __webpack_require__(82);
const user_role_repository_1 = __webpack_require__(83);
const user_repository_1 = __webpack_require__(84);
const object_helper_1 = __webpack_require__(85);
let CacheDataService = class CacheDataService {
    constructor(organizationRepository, settingRepository, userRepository, roleRepository, userRoleRepository, permissionRepository) {
        this.organizationRepository = organizationRepository;
        this.settingRepository = settingRepository;
        this.userRepository = userRepository;
        this.roleRepository = roleRepository;
        this.userRoleRepository = userRoleRepository;
        this.permissionRepository = permissionRepository;
        this.orgCache = {};
        this.permissionAllMap = null;
    }
    async getOrganization(oid) {
        var _a, _b, _c;
        if (!oid)
            return null;
        if (!this.orgCache[oid])
            this.orgCache[oid] = {};
        if (!this.orgCache[oid].organization) {
            const organization = await this.organizationRepository.findOne({
                relation: { logoImage: true },
                condition: { id: oid },
            });
            try {
                organization.dataVersionParse = JSON.parse(organization.dataVersion);
                (_a = organization.dataVersionParse).product || (_a.product = 0);
                (_b = organization.dataVersionParse).batch || (_b.batch = 0);
                (_c = organization.dataVersionParse).customer || (_c.customer = 0);
            }
            catch (error) {
                organization.dataVersionParse = { product: 0, batch: 0, customer: 0 };
            }
            this.orgCache[oid].organization = organization;
        }
        return this.orgCache[oid].organization;
    }
    async getSettingMap(oid) {
        if (!this.orgCache[oid])
            this.orgCache[oid] = {};
        if (!this.orgCache[oid].settingMapMap) {
            this.orgCache[oid].settingMapMap = {};
            const settingList = await this.settingRepository.findManyBy({ oid });
            settingList.forEach((i) => {
                const data = i.data ? JSON.parse(i.data) : i.data;
                if (i.key === setting_entity_1.SettingKey.GOOGLE_DRIVER && (data === null || data === void 0 ? void 0 : data.refreshToken)) {
                    data.refreshToken = data.refreshToken.slice(0, 20) + '...';
                }
                this.orgCache[oid].settingMapMap[i.key] = data;
            });
        }
        return this.orgCache[oid].settingMapMap;
    }
    async getEmailGoogleDriver(oid) {
        const settingMap = await this.getSettingMap(oid);
        const { email } = (settingMap === null || settingMap === void 0 ? void 0 : settingMap[setting_entity_1.SettingKey.GOOGLE_DRIVER]) || { email: '' };
        if (!email) {
            const settingMapROOT = await this.getSettingMap(1);
            const ggROOT = (settingMapROOT === null || settingMapROOT === void 0 ? void 0 : settingMapROOT[setting_entity_1.SettingKey.GOOGLE_DRIVER]) || { email: '' };
            return ggROOT.email;
        }
        return email;
    }
    async getSettingAllowNegativeQuantity(oid) {
        const settingMap = await this.getSettingMap(oid);
        const { allowNegativeQuantity } = (settingMap === null || settingMap === void 0 ? void 0 : settingMap[setting_entity_1.SettingKey.SYSTEM_SETTING]) || {};
        return !!allowNegativeQuantity;
    }
    async getUser(oid, uid) {
        if (!oid || !uid)
            return null;
        if (!this.orgCache[oid])
            this.orgCache[oid] = {};
        if (!this.orgCache[oid].userMap)
            this.orgCache[oid].userMap = {};
        if (!this.orgCache[oid].userMap[uid]) {
            this.orgCache[oid].userMap[uid] = await this.userRepository.findOneBy({ oid, id: uid });
        }
        return this.orgCache[oid].userMap[uid];
    }
    async getRole(oid, rid) {
        if (!oid || !rid)
            return null;
        if (!this.orgCache[oid])
            this.orgCache[oid] = {};
        if (!this.orgCache[oid].roleMap)
            this.orgCache[oid].roleMap = {};
        if (!this.orgCache[oid].roleMap[rid]) {
            this.orgCache[oid].roleMap[rid] = await this.roleRepository.findOneBy({ oid, id: rid });
        }
        return this.orgCache[oid].roleMap[rid];
    }
    async getRoleList(oid, uid) {
        if (!this.orgCache[oid].userRoleList) {
            this.orgCache[oid].userRoleList = await this.userRoleRepository.findManyBy({ oid });
        }
        const roleIdList = this.orgCache[oid].userRoleList
            .filter((i) => i.userId === uid)
            .map((i) => i.roleId);
        const result = [];
        for (let i = 0; i < roleIdList.length; i++) {
            const role = await this.getRole(oid, roleIdList[i]);
            result.push(role);
        }
        return result;
    }
    async getPermissionIdsByUserId(oid, uid) {
        if (!oid || !uid)
            return null;
        if (!this.orgCache[oid])
            this.orgCache[oid] = {};
        const user = await this.getUser(oid, uid);
        const organization = await this.getOrganization(oid);
        const organizationPermissionIds = JSON.parse(organization.permissionIds);
        let permissionIds = [];
        if (user.isAdmin) {
            permissionIds = organizationPermissionIds;
        }
        else {
            const roleList = await this.getRoleList(oid, uid);
            for (let i = 0; i < roleList.length; i++) {
                const currentPermissionIds = JSON.parse(roleList[i].permissionIds || '[]');
                permissionIds = permissionIds.concat(currentPermissionIds);
            }
            permissionIds = (0, object_helper_1.uniqueArray)(permissionIds);
        }
        return permissionIds;
    }
    async getPermissionAllMap() {
        if (!this.permissionAllMap) {
            const permissionAll = await this.permissionRepository.findManyBy({});
            this.permissionAllMap = (0, object_helper_1.arrayToKeyValue)(permissionAll, 'id');
        }
        return this.permissionAllMap;
    }
    async getPermissionAllList() {
        const map = await this.getPermissionAllMap();
        return Object.values(map);
    }
    updateOrganizationInfo(organization) {
        var _a, _b, _c;
        const oid = organization.id;
        if (!this.orgCache[oid])
            this.orgCache[oid] = {};
        try {
            organization.dataVersionParse = JSON.parse(organization.dataVersion);
            (_a = organization.dataVersionParse).product || (_a.product = 0);
            (_b = organization.dataVersionParse).batch || (_b.batch = 0);
            (_c = organization.dataVersionParse).customer || (_c.customer = 0);
        }
        catch (error) {
            organization.dataVersionParse = { product: 0, batch: 0, customer: 0 };
        }
        this.orgCache[oid].organization = organization;
    }
    clearUserAndRole(oid) {
        if (!this.orgCache[oid])
            this.orgCache[oid] = {};
        this.orgCache[oid].userMap = {};
        this.orgCache[oid].roleMap = {};
        this.orgCache[oid].userRoleList = null;
    }
    clearOrganization(oid) {
        if (!this.orgCache[oid])
            this.orgCache[oid] = {};
        this.orgCache[oid].organization = null;
    }
    clearSettingMap(oid) {
        if (!this.orgCache[oid])
            this.orgCache[oid] = {};
        this.orgCache[oid].settingMapMap = null;
    }
    async reloadPermissionAll() {
        this.permissionAllMap = null;
        await this.getPermissionAllMap();
    }
    async reloadSettingMap(oid) {
        this.clearSettingMap(oid);
        await this.getSettingMap(oid);
    }
};
exports.CacheDataService = CacheDataService;
exports.CacheDataService = CacheDataService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof organization_repository_1.OrganizationRepository !== "undefined" && organization_repository_1.OrganizationRepository) === "function" ? _a : Object, typeof (_b = typeof setting_repository_1.SettingRepository !== "undefined" && setting_repository_1.SettingRepository) === "function" ? _b : Object, typeof (_c = typeof user_repository_1.UserRepository !== "undefined" && user_repository_1.UserRepository) === "function" ? _c : Object, typeof (_d = typeof role_repository_1.RoleRepository !== "undefined" && role_repository_1.RoleRepository) === "function" ? _d : Object, typeof (_e = typeof user_role_repository_1.UserRoleRepository !== "undefined" && user_role_repository_1.UserRoleRepository) === "function" ? _e : Object, typeof (_f = typeof permission_repository_1.PermissionRepository !== "undefined" && permission_repository_1.PermissionRepository) === "function" ? _f : Object])
], CacheDataService);


/***/ }),
/* 31 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Setting_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SettingKey = void 0;
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
var SettingKey;
(function (SettingKey) {
    SettingKey["ROOT_SETTING"] = "ROOT_SETTING";
    SettingKey["SYSTEM_SETTING"] = "SYSTEM_SETTING";
    SettingKey["GOOGLE_DRIVER"] = "GOOGLE_DRIVER";
})(SettingKey || (exports.SettingKey = SettingKey = {}));
let Setting = Setting_1 = class Setting {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new Setting_1();
        Object.assign(entity, raw);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => Setting_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Exclude)(),
    __metadata("design:type", Number)
], Setting.prototype, "oid", void 0);
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Setting.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Setting.prototype, "key", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Setting.prototype, "data", void 0);
Setting = Setting_1 = __decorate([
    (0, typeorm_1.Entity)('Setting'),
    (0, typeorm_1.Index)('IDX_Setting__oid_key', ['oid', 'key'], { unique: true })
], Setting);
exports["default"] = Setting;


/***/ }),
/* 32 */
/***/ ((module) => {

module.exports = require("class-transformer");

/***/ }),
/* 33 */
/***/ ((module) => {

module.exports = require("typeorm");

/***/ }),
/* 34 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OrganizationRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let OrganizationRepository = class OrganizationRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(organizationRepository) {
        super(organizationRepository);
        this.organizationRepository = organizationRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.Organization.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.Organization.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.Organization.fromRaws(raws);
    }
};
exports.OrganizationRepository = OrganizationRepository;
exports.OrganizationRepository = OrganizationRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectRepository)(entities_1.Organization)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _a : Object])
], OrganizationRepository);


/***/ }),
/* 35 */
/***/ ((module) => {

module.exports = require("@nestjs/typeorm");

/***/ }),
/* 36 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Warehouse = exports.User = exports.Ticket = exports.TicketUser = exports.TicketSurcharge = exports.TicketRadiology = exports.TicketProduct = exports.TicketProcedure = exports.TicketLaboratory = exports.TicketExpense = exports.TicketAttribute = exports.Setting = exports.Role = exports.Receipt = exports.ReceiptItem = exports.Radiology = exports.RadiologyGroup = exports.Product = exports.ProductMovement = exports.ProductGroup = exports.Procedure = exports.ProcedureGroup = exports.PrintHtml = exports.PrescriptionSample = exports.Permission = exports.Organization = exports.Laboratory = exports.LaboratoryKit = exports.LaboratoryGroup = exports.Image = exports.Distributor = exports.DistributorPayment = exports.Customer = exports.CustomerSource = exports.CustomerPayment = exports.Batch = exports.BatchMovement = exports.Appointment = void 0;
var appointment_entity_1 = __webpack_require__(37);
Object.defineProperty(exports, "Appointment", ({ enumerable: true, get: function () { return appointment_entity_1.default; } }));
var batch_movement_entity_1 = __webpack_require__(42);
Object.defineProperty(exports, "BatchMovement", ({ enumerable: true, get: function () { return batch_movement_entity_1.default; } }));
var batch_entity_1 = __webpack_require__(43);
Object.defineProperty(exports, "Batch", ({ enumerable: true, get: function () { return batch_entity_1.default; } }));
var customer_payment_entity_1 = __webpack_require__(51);
Object.defineProperty(exports, "CustomerPayment", ({ enumerable: true, get: function () { return customer_payment_entity_1.default; } }));
var customer_source_entity_1 = __webpack_require__(39);
Object.defineProperty(exports, "CustomerSource", ({ enumerable: true, get: function () { return customer_source_entity_1.default; } }));
var customer_entity_1 = __webpack_require__(40);
Object.defineProperty(exports, "Customer", ({ enumerable: true, get: function () { return customer_entity_1.default; } }));
var distributor_payment_entity_1 = __webpack_require__(48);
Object.defineProperty(exports, "DistributorPayment", ({ enumerable: true, get: function () { return distributor_payment_entity_1.default; } }));
var distributor_entity_1 = __webpack_require__(46);
Object.defineProperty(exports, "Distributor", ({ enumerable: true, get: function () { return distributor_entity_1.default; } }));
var image_entity_1 = __webpack_require__(71);
Object.defineProperty(exports, "Image", ({ enumerable: true, get: function () { return image_entity_1.default; } }));
var laboratory_group_entity_1 = __webpack_require__(56);
Object.defineProperty(exports, "LaboratoryGroup", ({ enumerable: true, get: function () { return laboratory_group_entity_1.default; } }));
var laboratory_kit_entity_1 = __webpack_require__(72);
Object.defineProperty(exports, "LaboratoryKit", ({ enumerable: true, get: function () { return laboratory_kit_entity_1.default; } }));
var laboratory_entity_1 = __webpack_require__(55);
Object.defineProperty(exports, "Laboratory", ({ enumerable: true, get: function () { return laboratory_entity_1.default; } }));
var organization_entity_1 = __webpack_require__(70);
Object.defineProperty(exports, "Organization", ({ enumerable: true, get: function () { return organization_entity_1.default; } }));
var permission_entity_1 = __webpack_require__(73);
Object.defineProperty(exports, "Permission", ({ enumerable: true, get: function () { return permission_entity_1.default; } }));
var prescription_sample_entity_1 = __webpack_require__(74);
Object.defineProperty(exports, "PrescriptionSample", ({ enumerable: true, get: function () { return prescription_sample_entity_1.default; } }));
var print_html_entity_1 = __webpack_require__(57);
Object.defineProperty(exports, "PrintHtml", ({ enumerable: true, get: function () { return print_html_entity_1.default; } }));
var procedure_group_entity_1 = __webpack_require__(60);
Object.defineProperty(exports, "ProcedureGroup", ({ enumerable: true, get: function () { return procedure_group_entity_1.default; } }));
var procedure_entity_1 = __webpack_require__(59);
Object.defineProperty(exports, "Procedure", ({ enumerable: true, get: function () { return procedure_entity_1.default; } }));
var product_group_entity_1 = __webpack_require__(45);
Object.defineProperty(exports, "ProductGroup", ({ enumerable: true, get: function () { return product_group_entity_1.default; } }));
var product_movement_entity_1 = __webpack_require__(75);
Object.defineProperty(exports, "ProductMovement", ({ enumerable: true, get: function () { return product_movement_entity_1.default; } }));
var product_entity_1 = __webpack_require__(44);
Object.defineProperty(exports, "Product", ({ enumerable: true, get: function () { return product_entity_1.default; } }));
var radiology_group_entity_1 = __webpack_require__(64);
Object.defineProperty(exports, "RadiologyGroup", ({ enumerable: true, get: function () { return radiology_group_entity_1.default; } }));
var radiology_entity_1 = __webpack_require__(63);
Object.defineProperty(exports, "Radiology", ({ enumerable: true, get: function () { return radiology_entity_1.default; } }));
var receipt_item_entity_1 = __webpack_require__(49);
Object.defineProperty(exports, "ReceiptItem", ({ enumerable: true, get: function () { return receipt_item_entity_1.default; } }));
var receipt_entity_1 = __webpack_require__(47);
Object.defineProperty(exports, "Receipt", ({ enumerable: true, get: function () { return receipt_entity_1.default; } }));
var role_entity_1 = __webpack_require__(67);
Object.defineProperty(exports, "Role", ({ enumerable: true, get: function () { return role_entity_1.default; } }));
var setting_entity_1 = __webpack_require__(31);
Object.defineProperty(exports, "Setting", ({ enumerable: true, get: function () { return setting_entity_1.default; } }));
var ticket_attribute_entity_1 = __webpack_require__(52);
Object.defineProperty(exports, "TicketAttribute", ({ enumerable: true, get: function () { return ticket_attribute_entity_1.default; } }));
var ticket_expense_entity_1 = __webpack_require__(53);
Object.defineProperty(exports, "TicketExpense", ({ enumerable: true, get: function () { return ticket_expense_entity_1.default; } }));
var ticket_laboratory_entity_1 = __webpack_require__(54);
Object.defineProperty(exports, "TicketLaboratory", ({ enumerable: true, get: function () { return ticket_laboratory_entity_1.default; } }));
var ticket_procedure_entity_1 = __webpack_require__(58);
Object.defineProperty(exports, "TicketProcedure", ({ enumerable: true, get: function () { return ticket_procedure_entity_1.default; } }));
var ticket_product_entity_1 = __webpack_require__(61);
Object.defineProperty(exports, "TicketProduct", ({ enumerable: true, get: function () { return ticket_product_entity_1.default; } }));
var ticket_radiology_entity_1 = __webpack_require__(62);
Object.defineProperty(exports, "TicketRadiology", ({ enumerable: true, get: function () { return ticket_radiology_entity_1.default; } }));
var ticket_surcharge_entity_1 = __webpack_require__(65);
Object.defineProperty(exports, "TicketSurcharge", ({ enumerable: true, get: function () { return ticket_surcharge_entity_1.default; } }));
var ticket_user_entity_1 = __webpack_require__(66);
Object.defineProperty(exports, "TicketUser", ({ enumerable: true, get: function () { return ticket_user_entity_1.default; } }));
var ticket_entity_1 = __webpack_require__(50);
Object.defineProperty(exports, "Ticket", ({ enumerable: true, get: function () { return ticket_entity_1.default; } }));
var user_entity_1 = __webpack_require__(69);
Object.defineProperty(exports, "User", ({ enumerable: true, get: function () { return user_entity_1.default; } }));
var warehouse_entity_1 = __webpack_require__(76);
Object.defineProperty(exports, "Warehouse", ({ enumerable: true, get: function () { return warehouse_entity_1.default; } }));


/***/ }),
/* 37 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Appointment_1;
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AppointmentStatus = void 0;
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const customer_source_entity_1 = __webpack_require__(39);
const customer_entity_1 = __webpack_require__(40);
var AppointmentStatus;
(function (AppointmentStatus) {
    AppointmentStatus[AppointmentStatus["Waiting"] = 1] = "Waiting";
    AppointmentStatus[AppointmentStatus["Confirm"] = 2] = "Confirm";
    AppointmentStatus[AppointmentStatus["Completed"] = 3] = "Completed";
    AppointmentStatus[AppointmentStatus["Cancelled"] = 4] = "Cancelled";
})(AppointmentStatus || (exports.AppointmentStatus = AppointmentStatus = {}));
let Appointment = Appointment_1 = class Appointment extends base_entity_1.BaseEntity {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new Appointment_1();
        Object.assign(entity, raw);
        entity.registeredAt = raw.registeredAt == null ? raw.registeredAt : Number(raw.registeredAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => Appointment_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Appointment.prototype, "customerId", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Appointment.prototype, "customerSourceId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, default: '' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Appointment.prototype, "reason", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Appointment.prototype, "registeredAt", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Appointment.prototype, "fromTicketId", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Appointment.prototype, "toTicketId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Appointment.prototype, "cancelReason", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: AppointmentStatus.Waiting }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Appointment.prototype, "appointmentStatus", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)((type) => customer_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'customerId', referencedColumnName: 'id' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof customer_entity_1.default !== "undefined" && customer_entity_1.default) === "function" ? _a : Object)
], Appointment.prototype, "customer", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)((type) => customer_source_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'customerSourceId', referencedColumnName: 'id' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_b = typeof customer_source_entity_1.default !== "undefined" && customer_source_entity_1.default) === "function" ? _b : Object)
], Appointment.prototype, "customerSource", void 0);
Appointment = Appointment_1 = __decorate([
    (0, typeorm_1.Entity)('Appointment'),
    (0, typeorm_1.Index)('IDX_Appointment__fromTicketId', ['fromTicketId'])
], Appointment);
exports["default"] = Appointment;


/***/ }),
/* 38 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BaseEntity = void 0;
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
class BaseEntity {
}
exports.BaseEntity = BaseEntity;
__decorate([
    (0, typeorm_1.Column)({ name: 'oid' }),
    (0, class_transformer_1.Exclude)(),
    __metadata("design:type", Number)
], BaseEntity.prototype, "oid", void 0);
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)({ name: 'id' }),
    (0, class_transformer_1.Expose)({ name: 'id' }),
    __metadata("design:type", Number)
], BaseEntity.prototype, "id", void 0);


/***/ }),
/* 39 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var CustomerSource_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
let CustomerSource = CustomerSource_1 = class CustomerSource {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new CustomerSource_1();
        Object.assign(entity, raw);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => CustomerSource_1.fromRaw(i));
    }
};
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], CustomerSource.prototype, "oid", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], CustomerSource.prototype, "id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    __metadata("design:type", String)
], CustomerSource.prototype, "name", void 0);
CustomerSource = CustomerSource_1 = __decorate([
    (0, typeorm_1.Entity)('CustomerSource')
], CustomerSource);
exports["default"] = CustomerSource;


/***/ }),
/* 40 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Customer_1;
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const variable_1 = __webpack_require__(41);
let Customer = Customer_1 = class Customer extends base_entity_1.BaseEntity {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new Customer_1();
        Object.assign(entity, raw);
        entity.birthday = raw.birthday == null ? raw.birthday : Number(raw.birthday);
        entity.debt = Number(raw.debt);
        entity.updatedAt = raw.updatedAt == null ? raw.updatedAt : Number(raw.updatedAt);
        entity.deletedAt = raw.deletedAt == null ? raw.deletedAt : Number(raw.deletedAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => Customer_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Customer.prototype, "fullName", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Customer.prototype, "customerSourceId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'char', length: 10, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Customer.prototype, "phone", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Customer.prototype, "birthday", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Customer.prototype, "yearOfBirth", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof variable_1.EGender !== "undefined" && variable_1.EGender) === "function" ? _a : Object)
], Customer.prototype, "gender", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Customer.prototype, "addressProvince", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Customer.prototype, "addressDistrict", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Customer.prototype, "addressWard", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Customer.prototype, "addressStreet", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Customer.prototype, "relative", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Customer.prototype, "healthHistory", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Customer.prototype, "debt", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Customer.prototype, "note", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Customer.prototype, "isActive", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: () => '(EXTRACT(epoch FROM now()) * (1000))',
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Customer.prototype, "updatedAt", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Customer.prototype, "deletedAt", void 0);
Customer = Customer_1 = __decorate([
    (0, typeorm_1.Entity)('Customer')
], Customer);
exports["default"] = Customer;


/***/ }),
/* 41 */
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AttributeLayoutType = exports.AttributeInputType = exports.DeliveryStatus = exports.VoucherType = exports.ReceiptStatus = exports.PaymentType = exports.DiscountType = exports.EOrder = exports.ERole = exports.EGender = void 0;
var EGender;
(function (EGender) {
    EGender[EGender["Female"] = 0] = "Female";
    EGender[EGender["Male"] = 1] = "Male";
})(EGender || (exports.EGender = EGender = {}));
var ERole;
(function (ERole) {
    ERole[ERole["Root"] = 0] = "Root";
    ERole[ERole["Admin"] = 1] = "Admin";
    ERole[ERole["User"] = 2] = "User";
})(ERole || (exports.ERole = ERole = {}));
var EOrder;
(function (EOrder) {
    EOrder[EOrder["ASC"] = 0] = "ASC";
    EOrder[EOrder["DESC"] = 1] = "DESC";
})(EOrder || (exports.EOrder = EOrder = {}));
var DiscountType;
(function (DiscountType) {
    DiscountType["Percent"] = "%";
    DiscountType["VND"] = "VN\u0110";
})(DiscountType || (exports.DiscountType = DiscountType = {}));
var PaymentType;
(function (PaymentType) {
    PaymentType[PaymentType["Prepayment"] = 1] = "Prepayment";
    PaymentType[PaymentType["ReceiveRefund"] = 2] = "ReceiveRefund";
    PaymentType[PaymentType["Close"] = 3] = "Close";
    PaymentType[PaymentType["PayDebt"] = 4] = "PayDebt";
    PaymentType[PaymentType["Reopen"] = 5] = "Reopen";
})(PaymentType || (exports.PaymentType = PaymentType = {}));
var ReceiptStatus;
(function (ReceiptStatus) {
    ReceiptStatus[ReceiptStatus["Cancelled"] = -1] = "Cancelled";
    ReceiptStatus[ReceiptStatus["Draft"] = 0] = "Draft";
    ReceiptStatus[ReceiptStatus["Prepayment"] = 1] = "Prepayment";
    ReceiptStatus[ReceiptStatus["Debt"] = 2] = "Debt";
    ReceiptStatus[ReceiptStatus["Success"] = 3] = "Success";
})(ReceiptStatus || (exports.ReceiptStatus = ReceiptStatus = {}));
var VoucherType;
(function (VoucherType) {
    VoucherType[VoucherType["Receipt"] = 1] = "Receipt";
    VoucherType[VoucherType["Ticket"] = 2] = "Ticket";
})(VoucherType || (exports.VoucherType = VoucherType = {}));
var DeliveryStatus;
(function (DeliveryStatus) {
    DeliveryStatus[DeliveryStatus["NoStock"] = 1] = "NoStock";
    DeliveryStatus[DeliveryStatus["Pending"] = 2] = "Pending";
    DeliveryStatus[DeliveryStatus["Delivered"] = 3] = "Delivered";
})(DeliveryStatus || (exports.DeliveryStatus = DeliveryStatus = {}));
var AttributeInputType;
(function (AttributeInputType) {
    AttributeInputType["InputText"] = "InputText";
    AttributeInputType["InputNumber"] = "InputNumber";
    AttributeInputType["InputDate"] = "InputDate";
    AttributeInputType["Select"] = "Select";
})(AttributeInputType || (exports.AttributeInputType = AttributeInputType = {}));
var AttributeLayoutType;
(function (AttributeLayoutType) {
    AttributeLayoutType["Table"] = "B\u1EA3ng";
    AttributeLayoutType["InputAndLabelTop"] = "Input v\u00E0 Nh\u00E3n b\u00EAn tr\u00EAn";
    AttributeLayoutType["InputAndLabelLeft"] = "Input v\u00E0 Nh\u00E3n b\u00EAn tr\u00E1i";
})(AttributeLayoutType || (exports.AttributeLayoutType = AttributeLayoutType = {}));


/***/ }),
/* 42 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const variable_1 = __webpack_require__(41);
const batch_entity_1 = __webpack_require__(43);
const customer_entity_1 = __webpack_require__(40);
const distributor_entity_1 = __webpack_require__(46);
const product_entity_1 = __webpack_require__(44);
const receipt_entity_1 = __webpack_require__(47);
const ticket_entity_1 = __webpack_require__(50);
let BatchMovement = class BatchMovement extends base_entity_1.BaseEntity {
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], BatchMovement.prototype, "productId", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], BatchMovement.prototype, "batchId", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], BatchMovement.prototype, "voucherId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof variable_1.VoucherType !== "undefined" && variable_1.VoucherType) === "function" ? _a : Object)
], BatchMovement.prototype, "voucherType", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], BatchMovement.prototype, "contactId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], BatchMovement.prototype, "isRefund", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], BatchMovement.prototype, "unitRate", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        default: 0,
        precision: 10,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], BatchMovement.prototype, "openQuantity", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        default: 0,
        precision: 10,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], BatchMovement.prototype, "quantity", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        default: 0,
        precision: 10,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], BatchMovement.prototype, "closeQuantity", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], BatchMovement.prototype, "actualPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], BatchMovement.prototype, "expectedPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], BatchMovement.prototype, "createdAt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => product_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'productId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_b = typeof product_entity_1.default !== "undefined" && product_entity_1.default) === "function" ? _b : Object)
], BatchMovement.prototype, "product", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => batch_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'batchId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_c = typeof batch_entity_1.default !== "undefined" && batch_entity_1.default) === "function" ? _c : Object)
], BatchMovement.prototype, "batch", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => ticket_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'contactId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_d = typeof distributor_entity_1.default !== "undefined" && distributor_entity_1.default) === "function" ? _d : Object)
], BatchMovement.prototype, "distributor", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => receipt_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'voucherId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_e = typeof receipt_entity_1.default !== "undefined" && receipt_entity_1.default) === "function" ? _e : Object)
], BatchMovement.prototype, "receipt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => ticket_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'contactId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_f = typeof customer_entity_1.default !== "undefined" && customer_entity_1.default) === "function" ? _f : Object)
], BatchMovement.prototype, "customer", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => ticket_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'voucherId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_g = typeof ticket_entity_1.default !== "undefined" && ticket_entity_1.default) === "function" ? _g : Object)
], BatchMovement.prototype, "ticket", void 0);
BatchMovement = __decorate([
    (0, typeorm_1.Index)('IDX_BatchMovement__oid_productId_batchId_createdAt', [
        'oid',
        'productId',
        'batchId',
        'createdAt',
    ]),
    (0, typeorm_1.Entity)('BatchMovement')
], BatchMovement);
exports["default"] = BatchMovement;


/***/ }),
/* 43 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Batch_1;
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const product_entity_1 = __webpack_require__(44);
let Batch = Batch_1 = class Batch extends base_entity_1.BaseEntity {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new Batch_1();
        Object.assign(entity, raw);
        entity.expiryDate = raw.expiryDate == null ? raw.expiryDate : Number(raw.expiryDate);
        entity.costPrice = Number(raw.costPrice);
        entity.wholesalePrice = Number(raw.wholesalePrice);
        entity.retailPrice = Number(raw.retailPrice);
        entity.quantity = Number(raw.quantity);
        entity.updatedAt = raw.updatedAt == null ? raw.updatedAt : Number(raw.updatedAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => Batch_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Batch.prototype, "productId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, default: '' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Batch.prototype, "lotNumber", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Batch.prototype, "expiryDate", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Batch.prototype, "costPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Batch.prototype, "wholesalePrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Batch.prototype, "retailPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        default: 0,
        precision: 10,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Batch.prototype, "quantity", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: () => '(EXTRACT(epoch FROM now()) * (1000))',
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Batch.prototype, "updatedAt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => product_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'productId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_a = typeof product_entity_1.default !== "undefined" && product_entity_1.default) === "function" ? _a : Object)
], Batch.prototype, "product", void 0);
Batch = Batch_1 = __decorate([
    (0, typeorm_1.Entity)('Batch'),
    (0, typeorm_1.Index)('IDX_Batch__oid_productId', ['oid', 'productId']),
    (0, typeorm_1.Index)('IDX_Batch__oid_updatedAt', ['oid', 'updatedAt'])
], Batch);
exports["default"] = Batch;


/***/ }),
/* 44 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Product_1;
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const batch_entity_1 = __webpack_require__(43);
const product_group_entity_1 = __webpack_require__(45);
let Product = Product_1 = class Product extends base_entity_1.BaseEntity {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new Product_1();
        Object.assign(entity, raw);
        entity.expiryDate = raw.expiryDate == null ? raw.expiryDate : Number(raw.expiryDate);
        entity.quantity = Number(raw.quantity);
        entity.costAmount = Number(raw.costAmount);
        entity.costPrice = Number(raw.costPrice);
        entity.wholesalePrice = Number(raw.wholesalePrice);
        entity.retailPrice = Number(raw.retailPrice);
        entity.updatedAt = raw.updatedAt == null ? raw.updatedAt : Number(raw.updatedAt);
        entity.deletedAt = raw.deletedAt == null ? raw.deletedAt : Number(raw.deletedAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => Product_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Product.prototype, "brandName", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Product.prototype, "substance", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, default: '' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Product.prototype, "lotNumber", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Product.prototype, "expiryDate", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        default: 0,
        precision: 10,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Product.prototype, "quantity", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Product.prototype, "costAmount", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Product.prototype, "costPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Product.prototype, "wholesalePrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Product.prototype, "retailPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 1, type: 'smallint' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Product.prototype, "hasManageQuantity", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0, type: 'smallint' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Product.prototype, "hasManageBatches", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ default: 0 }),
    __metadata("design:type", Number)
], Product.prototype, "productGroupId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', default: JSON.stringify([]) }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Product.prototype, "unit", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Product.prototype, "route", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Product.prototype, "source", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Product.prototype, "image", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Product.prototype, "hintUsage", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Product.prototype, "isActive", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: () => '(EXTRACT(epoch FROM now()) * (1000))',
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Product.prototype, "updatedAt", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Product.prototype, "deletedAt", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)((type) => product_group_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'productGroupId', referencedColumnName: 'id' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof product_group_entity_1.default !== "undefined" && product_group_entity_1.default) === "function" ? _a : Object)
], Product.prototype, "productGroup", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.OneToMany)(() => batch_entity_1.default, (batch) => batch.product),
    __metadata("design:type", Array)
], Product.prototype, "batchList", void 0);
Product = Product_1 = __decorate([
    (0, typeorm_1.Entity)('Product'),
    (0, typeorm_1.Index)('IDX_Product__oid_brandName', ['oid', 'brandName']),
    (0, typeorm_1.Index)('IDX_Product__oid_substance', ['oid', 'substance'])
], Product);
exports["default"] = Product;


/***/ }),
/* 45 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var ProductGroup_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
let ProductGroup = ProductGroup_1 = class ProductGroup {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new ProductGroup_1();
        Object.assign(entity, raw);
        entity.updatedAt = raw.updatedAt == null ? raw.updatedAt : Number(raw.updatedAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => ProductGroup_1.fromRaw(i));
    }
};
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], ProductGroup.prototype, "oid", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], ProductGroup.prototype, "id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    __metadata("design:type", String)
], ProductGroup.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: () => '(EXTRACT(epoch FROM now()) * (1000))',
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    __metadata("design:type", Number)
], ProductGroup.prototype, "updatedAt", void 0);
ProductGroup = ProductGroup_1 = __decorate([
    (0, typeorm_1.Entity)('ProductGroup')
], ProductGroup);
exports["default"] = ProductGroup;


/***/ }),
/* 46 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Distributor_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
let Distributor = Distributor_1 = class Distributor extends base_entity_1.BaseEntity {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new Distributor_1();
        Object.assign(entity, raw);
        entity.debt = Number(raw.debt);
        entity.updatedAt = raw.updatedAt == null ? raw.updatedAt : Number(raw.updatedAt);
        entity.deletedAt = raw.deletedAt == null ? raw.deletedAt : Number(raw.deletedAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => Distributor_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Distributor.prototype, "fullName", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'char', length: 10, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Distributor.prototype, "phone", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Distributor.prototype, "addressProvince", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Distributor.prototype, "addressDistrict", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Distributor.prototype, "addressWard", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Distributor.prototype, "addressStreet", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Distributor.prototype, "debt", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Distributor.prototype, "note", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Distributor.prototype, "isActive", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: () => '(EXTRACT(epoch FROM now()) * (1000))',
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Distributor.prototype, "updatedAt", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Distributor.prototype, "deletedAt", void 0);
Distributor = Distributor_1 = __decorate([
    (0, typeorm_1.Entity)('Distributor')
], Distributor);
exports["default"] = Distributor;


/***/ }),
/* 47 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Receipt_1;
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const variable_1 = __webpack_require__(41);
const distributor_payment_entity_1 = __webpack_require__(48);
const distributor_entity_1 = __webpack_require__(46);
const receipt_item_entity_1 = __webpack_require__(49);
let Receipt = Receipt_1 = class Receipt extends base_entity_1.BaseEntity {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new Receipt_1();
        Object.assign(entity, raw);
        entity.itemsActualMoney = Number(raw.itemsActualMoney);
        entity.discountMoney = Number(raw.discountMoney);
        entity.discountPercent = Number(raw.discountPercent);
        entity.surcharge = Number(raw.surcharge);
        entity.totalMoney = Number(raw.totalMoney);
        entity.paid = Number(raw.paid);
        entity.debt = Number(raw.debt);
        entity.startedAt = raw.startedAt == null ? raw.startedAt : Number(raw.startedAt);
        entity.endedAt = raw.endedAt == null ? raw.endedAt : Number(raw.endedAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => Receipt_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Receipt.prototype, "distributorId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof variable_1.ReceiptStatus !== "undefined" && variable_1.ReceiptStatus) === "function" ? _a : Object)
], Receipt.prototype, "status", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Receipt.prototype, "year", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Receipt.prototype, "month", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Receipt.prototype, "date", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Receipt.prototype, "itemsActualMoney", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Receipt.prototype, "discountMoney", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Receipt.prototype, "discountPercent", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, default: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_b = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _b : Object)
], Receipt.prototype, "discountType", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: 'surcharge',
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Receipt.prototype, "surcharge", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Receipt.prototype, "totalMoney", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: 'paid',
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Receipt.prototype, "paid", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: 'debt',
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Receipt.prototype, "debt", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Receipt.prototype, "note", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Receipt.prototype, "startedAt", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Receipt.prototype, "endedAt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.OneToMany)(() => receipt_item_entity_1.default, (receiptItem) => receiptItem.receipt),
    __metadata("design:type", Array)
], Receipt.prototype, "receiptItems", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => distributor_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'distributorId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_c = typeof distributor_entity_1.default !== "undefined" && distributor_entity_1.default) === "function" ? _c : Object)
], Receipt.prototype, "distributor", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.OneToMany)(() => distributor_payment_entity_1.default, (distributorPayment) => distributorPayment.receipt),
    __metadata("design:type", Array)
], Receipt.prototype, "distributorPayments", void 0);
Receipt = Receipt_1 = __decorate([
    (0, typeorm_1.Entity)('Receipt'),
    (0, typeorm_1.Index)('IDX_Receipt__oid_distributorId', ['oid', 'distributorId']),
    (0, typeorm_1.Index)('IDX_Receipt__oid_startedAt', ['oid', 'startedAt'])
], Receipt);
exports["default"] = Receipt;


/***/ }),
/* 48 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const variable_1 = __webpack_require__(41);
const receipt_entity_1 = __webpack_require__(47);
let DistributorPayment = class DistributorPayment extends base_entity_1.BaseEntity {
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], DistributorPayment.prototype, "distributorId", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], DistributorPayment.prototype, "receiptId", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], DistributorPayment.prototype, "createdAt", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof variable_1.PaymentType !== "undefined" && variable_1.PaymentType) === "function" ? _a : Object)
], DistributorPayment.prototype, "paymentType", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], DistributorPayment.prototype, "paid", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], DistributorPayment.prototype, "debit", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], DistributorPayment.prototype, "openDebt", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], DistributorPayment.prototype, "closeDebt", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], DistributorPayment.prototype, "note", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], DistributorPayment.prototype, "description", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => receipt_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'receiptId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_b = typeof receipt_entity_1.default !== "undefined" && receipt_entity_1.default) === "function" ? _b : Object)
], DistributorPayment.prototype, "receipt", void 0);
DistributorPayment = __decorate([
    (0, typeorm_1.Entity)('DistributorPayment'),
    (0, typeorm_1.Index)('IDX_DistributorPayment__oid_distributorId', ['oid', 'distributorId']),
    (0, typeorm_1.Index)('IDX_DistributorPayment__oid_receiptId', ['oid', 'receiptId'])
], DistributorPayment);
exports["default"] = DistributorPayment;


/***/ }),
/* 49 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var ReceiptItem_1;
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const batch_entity_1 = __webpack_require__(43);
const product_entity_1 = __webpack_require__(44);
const receipt_entity_1 = __webpack_require__(47);
let ReceiptItem = ReceiptItem_1 = class ReceiptItem extends base_entity_1.BaseEntity {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new ReceiptItem_1();
        Object.assign(entity, raw);
        entity.expiryDate = raw.expiryDate == null ? raw.expiryDate : Number(raw.expiryDate);
        entity.costPrice = Number(raw.costPrice);
        entity.wholesalePrice = Number(raw.wholesalePrice);
        entity.retailPrice = Number(raw.retailPrice);
        entity.quantity = Number(raw.quantity);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => ReceiptItem_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ReceiptItem.prototype, "receiptId", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ReceiptItem.prototype, "distributorId", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ReceiptItem.prototype, "productId", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ReceiptItem.prototype, "batchId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, default: '' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], ReceiptItem.prototype, "lotNumber", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ReceiptItem.prototype, "expiryDate", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ReceiptItem.prototype, "costPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ReceiptItem.prototype, "wholesalePrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ReceiptItem.prototype, "retailPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        default: 0,
        precision: 10,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ReceiptItem.prototype, "quantity", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ReceiptItem.prototype, "unitRate", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => receipt_entity_1.default, (receipt) => receipt.receiptItems, {
        createForeignKeyConstraints: false,
    }),
    (0, typeorm_1.JoinColumn)({ name: 'receiptId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_a = typeof receipt_entity_1.default !== "undefined" && receipt_entity_1.default) === "function" ? _a : Object)
], ReceiptItem.prototype, "receipt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => batch_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'batchId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_b = typeof batch_entity_1.default !== "undefined" && batch_entity_1.default) === "function" ? _b : Object)
], ReceiptItem.prototype, "batch", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => product_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'productId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_c = typeof product_entity_1.default !== "undefined" && product_entity_1.default) === "function" ? _c : Object)
], ReceiptItem.prototype, "product", void 0);
ReceiptItem = ReceiptItem_1 = __decorate([
    (0, typeorm_1.Entity)('ReceiptItem'),
    (0, typeorm_1.Index)('IDX_ReceiptItem__oid_batchId', ['oid', 'batchId']),
    (0, typeorm_1.Index)('IDX_ReceiptItem__oid_productId', ['oid', 'productId']),
    (0, typeorm_1.Index)('IDX_ReceiptItem__oid_receiptId', ['oid', 'receiptId'])
], ReceiptItem);
exports["default"] = ReceiptItem;


/***/ }),
/* 50 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Ticket_1;
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketStatus = exports.TicketType = void 0;
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const variable_1 = __webpack_require__(41);
const appointment_entity_1 = __webpack_require__(37);
const customer_payment_entity_1 = __webpack_require__(51);
const customer_source_entity_1 = __webpack_require__(39);
const customer_entity_1 = __webpack_require__(40);
const ticket_attribute_entity_1 = __webpack_require__(52);
const ticket_expense_entity_1 = __webpack_require__(53);
const ticket_laboratory_entity_1 = __webpack_require__(54);
const ticket_procedure_entity_1 = __webpack_require__(58);
const ticket_product_entity_1 = __webpack_require__(61);
const ticket_radiology_entity_1 = __webpack_require__(62);
const ticket_surcharge_entity_1 = __webpack_require__(65);
const ticket_user_entity_1 = __webpack_require__(66);
var TicketType;
(function (TicketType) {
    TicketType[TicketType["Order"] = 2] = "Order";
    TicketType[TicketType["Clinic"] = 3] = "Clinic";
    TicketType[TicketType["Spa"] = 4] = "Spa";
    TicketType[TicketType["Eye"] = 5] = "Eye";
    TicketType[TicketType["Obstetric"] = 6] = "Obstetric";
})(TicketType || (exports.TicketType = TicketType = {}));
var TicketStatus;
(function (TicketStatus) {
    TicketStatus[TicketStatus["Schedule"] = 1] = "Schedule";
    TicketStatus[TicketStatus["Draft"] = 2] = "Draft";
    TicketStatus[TicketStatus["Approved"] = 3] = "Approved";
    TicketStatus[TicketStatus["Executing"] = 4] = "Executing";
    TicketStatus[TicketStatus["Debt"] = 5] = "Debt";
    TicketStatus[TicketStatus["Completed"] = 6] = "Completed";
    TicketStatus[TicketStatus["Cancelled"] = 7] = "Cancelled";
})(TicketStatus || (exports.TicketStatus = TicketStatus = {}));
let Ticket = Ticket_1 = class Ticket extends base_entity_1.BaseEntity {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new Ticket_1();
        Object.assign(entity, raw);
        entity.totalCostAmount = Number(raw.totalCostAmount);
        entity.procedureMoney = Number(raw.procedureMoney);
        entity.productMoney = Number(raw.productMoney);
        entity.radiologyMoney = Number(raw.radiologyMoney);
        entity.laboratoryMoney = Number(raw.laboratoryMoney);
        entity.itemsActualMoney = Number(raw.itemsActualMoney);
        entity.itemsDiscount = Number(raw.itemsDiscount);
        entity.discountMoney = Number(raw.discountMoney);
        entity.discountPercent = Number(raw.discountPercent);
        entity.totalMoney = Number(raw.totalMoney);
        entity.profit = Number(raw.profit);
        entity.paid = Number(raw.paid);
        entity.debt = Number(raw.debt);
        entity.surcharge = Number(raw.surcharge);
        entity.expense = Number(raw.expense);
        entity.registeredAt = raw.registeredAt == null ? raw.registeredAt : Number(raw.registeredAt);
        entity.startedAt = raw.startedAt == null ? raw.startedAt : Number(raw.startedAt);
        entity.endedAt = raw.endedAt == null ? raw.endedAt : Number(raw.endedAt);
        entity.updatedAt = raw.updatedAt == null ? raw.updatedAt : Number(raw.updatedAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => Ticket_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "customerId", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "customerSourceId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: TicketType.Order }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "ticketType", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: TicketStatus.Draft }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "ticketStatus", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "year", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "month", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "date", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "dailyIndex", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "totalCostAmount", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "procedureMoney", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "productMoney", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "radiologyMoney", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "laboratoryMoney", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "itemsDiscount", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "itemsActualMoney", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "discountMoney", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        default: 0,
        precision: 7,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "discountPercent", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 25, default: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], Ticket.prototype, "discountType", void 0);
__decorate([
    (0, typeorm_1.Column)({
        default: 0,
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "surcharge", void 0);
__decorate([
    (0, typeorm_1.Column)({
        default: 0,
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "totalMoney", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "expense", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "profit", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "paid", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "debt", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 100, default: JSON.stringify([]) }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Ticket.prototype, "imageIds", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "registeredAt", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "startedAt", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "endedAt", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: () => '(EXTRACT(epoch FROM now()) * (1000))',
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Ticket.prototype, "updatedAt", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)((type) => customer_source_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'customerSourceId', referencedColumnName: 'id' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_b = typeof customer_source_entity_1.default !== "undefined" && customer_source_entity_1.default) === "function" ? _b : Object)
], Ticket.prototype, "customerSource", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)((type) => customer_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'customerId', referencedColumnName: 'id' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_c = typeof customer_entity_1.default !== "undefined" && customer_entity_1.default) === "function" ? _c : Object)
], Ticket.prototype, "customer", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => customer_payment_entity_1.default, (customerPayment) => customerPayment.ticket),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], Ticket.prototype, "customerPaymentList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_d = typeof appointment_entity_1.default !== "undefined" && appointment_entity_1.default) === "function" ? _d : Object)
], Ticket.prototype, "toAppointment", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => ticket_attribute_entity_1.default, (ticketAttribute) => ticketAttribute.ticket),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], Ticket.prototype, "ticketAttributeList", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => ticket_product_entity_1.default, (ticketProduct) => ticketProduct.ticket),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], Ticket.prototype, "ticketProductList", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => ticket_product_entity_1.default, (ticketProductConsumable) => ticketProductConsumable.ticket),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], Ticket.prototype, "ticketProductConsumableList", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => ticket_product_entity_1.default, (ticketProductPrescription) => ticketProductPrescription.ticket),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], Ticket.prototype, "ticketProductPrescriptionList", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => ticket_procedure_entity_1.default, (ticketProcedure) => ticketProcedure.ticket),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], Ticket.prototype, "ticketProcedureList", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => ticket_laboratory_entity_1.default, (ticketLaboratory) => ticketLaboratory.ticket),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], Ticket.prototype, "ticketLaboratoryList", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => ticket_radiology_entity_1.default, (ticketRadiology) => ticketRadiology.ticket),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], Ticket.prototype, "ticketRadiologyList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.OneToMany)(() => ticket_expense_entity_1.default, (ticketExpense) => ticketExpense.ticket),
    __metadata("design:type", Array)
], Ticket.prototype, "ticketExpenseList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.OneToMany)(() => ticket_surcharge_entity_1.default, (ticketSurcharge) => ticketSurcharge.ticket),
    __metadata("design:type", Array)
], Ticket.prototype, "ticketSurchargeList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.OneToMany)(() => ticket_user_entity_1.default, (ticketUser) => ticketUser.ticket),
    __metadata("design:type", Array)
], Ticket.prototype, "ticketUserList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], Ticket.prototype, "imageList", void 0);
Ticket = Ticket_1 = __decorate([
    (0, typeorm_1.Entity)('Ticket'),
    (0, typeorm_1.Index)('IDX_Ticket__oid_registeredAt', ['oid', 'registeredAt']),
    (0, typeorm_1.Index)('IDX_Ticket__oid_customerId', ['oid', 'customerId']),
    (0, typeorm_1.Index)('IDX_Ticket__oid_ticketStatus', ['oid', 'ticketStatus'])
], Ticket);
exports["default"] = Ticket;


/***/ }),
/* 51 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var CustomerPayment_1;
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const variable_1 = __webpack_require__(41);
const customer_entity_1 = __webpack_require__(40);
const ticket_entity_1 = __webpack_require__(50);
let CustomerPayment = CustomerPayment_1 = class CustomerPayment extends base_entity_1.BaseEntity {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new CustomerPayment_1();
        Object.assign(entity, raw);
        entity.createdAt = Number(raw.createdAt);
        entity.paid = Number(raw.paid);
        entity.debit = Number(raw.debit);
        entity.openDebt = Number(raw.openDebt);
        entity.closeDebt = Number(raw.closeDebt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => CustomerPayment_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], CustomerPayment.prototype, "customerId", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], CustomerPayment.prototype, "ticketId", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], CustomerPayment.prototype, "createdAt", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof variable_1.PaymentType !== "undefined" && variable_1.PaymentType) === "function" ? _a : Object)
], CustomerPayment.prototype, "paymentType", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: 'paid',
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)({ name: 'paid' }),
    __metadata("design:type", Number)
], CustomerPayment.prototype, "paid", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: 'debit',
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)({ name: 'debit' }),
    __metadata("design:type", Number)
], CustomerPayment.prototype, "debit", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], CustomerPayment.prototype, "openDebt", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], CustomerPayment.prototype, "closeDebt", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], CustomerPayment.prototype, "note", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], CustomerPayment.prototype, "description", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => customer_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'customerId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_b = typeof customer_entity_1.default !== "undefined" && customer_entity_1.default) === "function" ? _b : Object)
], CustomerPayment.prototype, "customer", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => ticket_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'ticketId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_c = typeof ticket_entity_1.default !== "undefined" && ticket_entity_1.default) === "function" ? _c : Object)
], CustomerPayment.prototype, "ticket", void 0);
CustomerPayment = CustomerPayment_1 = __decorate([
    (0, typeorm_1.Entity)('CustomerPayment'),
    (0, typeorm_1.Index)('IDX_CustomerPayment__oid_customerId', ['oid', 'customerId'])
], CustomerPayment);
exports["default"] = CustomerPayment;


/***/ }),
/* 52 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var TicketAttribute_1;
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const ticket_entity_1 = __webpack_require__(50);
let TicketAttribute = TicketAttribute_1 = class TicketAttribute extends base_entity_1.BaseEntity {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new TicketAttribute_1();
        Object.assign(entity, raw);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => TicketAttribute_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)({ name: 'oid' }),
    (0, class_transformer_1.Exclude)(),
    __metadata("design:type", Number)
], TicketAttribute.prototype, "oid", void 0);
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)({ name: 'id' }),
    (0, class_transformer_1.Expose)({ name: 'id' }),
    __metadata("design:type", Number)
], TicketAttribute.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)({}),
    __metadata("design:type", Number)
], TicketAttribute.prototype, "ticketId", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: false, type: 'varchar', length: 100 }),
    (0, class_transformer_1.Expose)({}),
    __metadata("design:type", String)
], TicketAttribute.prototype, "key", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', default: '' }),
    (0, class_transformer_1.Expose)({}),
    __metadata("design:type", String)
], TicketAttribute.prototype, "value", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => ticket_entity_1.default, (ticket) => ticket.ticketAttributeList, {
        createForeignKeyConstraints: false,
    }),
    (0, typeorm_1.JoinColumn)({ name: 'ticketId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_a = typeof ticket_entity_1.default !== "undefined" && ticket_entity_1.default) === "function" ? _a : Object)
], TicketAttribute.prototype, "ticket", void 0);
TicketAttribute = TicketAttribute_1 = __decorate([
    (0, typeorm_1.Entity)('TicketAttribute'),
    (0, typeorm_1.Index)('IDX_TicketAttribute__oid_ticketId', ['oid', 'ticketId'])
], TicketAttribute);
exports["default"] = TicketAttribute;


/***/ }),
/* 53 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const ticket_entity_1 = __webpack_require__(50);
let TicketExpense = class TicketExpense extends base_entity_1.BaseEntity {
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketExpense.prototype, "ticketId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], TicketExpense.prototype, "key", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], TicketExpense.prototype, "name", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketExpense.prototype, "money", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => ticket_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'ticketId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_a = typeof ticket_entity_1.default !== "undefined" && ticket_entity_1.default) === "function" ? _a : Object)
], TicketExpense.prototype, "ticket", void 0);
TicketExpense = __decorate([
    (0, typeorm_1.Entity)('TicketExpense'),
    (0, typeorm_1.Index)('IDX_TicketExpense__ticketId', ['oid', 'ticketId'])
], TicketExpense);
exports["default"] = TicketExpense;


/***/ }),
/* 54 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var TicketLaboratory_1;
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketLaboratoryStatus = void 0;
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const variable_1 = __webpack_require__(41);
const customer_entity_1 = __webpack_require__(40);
const laboratory_entity_1 = __webpack_require__(55);
const ticket_entity_1 = __webpack_require__(50);
var TicketLaboratoryStatus;
(function (TicketLaboratoryStatus) {
    TicketLaboratoryStatus[TicketLaboratoryStatus["Empty"] = 1] = "Empty";
    TicketLaboratoryStatus[TicketLaboratoryStatus["Pending"] = 2] = "Pending";
    TicketLaboratoryStatus[TicketLaboratoryStatus["Completed"] = 3] = "Completed";
})(TicketLaboratoryStatus || (exports.TicketLaboratoryStatus = TicketLaboratoryStatus = {}));
let TicketLaboratory = TicketLaboratory_1 = class TicketLaboratory extends base_entity_1.BaseEntity {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new TicketLaboratory_1();
        Object.assign(entity, raw);
        entity.expectedPrice = Number(raw.expectedPrice);
        entity.discountMoney = Number(raw.discountMoney);
        entity.discountPercent = Number(raw.discountPercent);
        entity.actualPrice = Number(raw.actualPrice);
        entity.startedAt = raw.startedAt == null ? raw.startedAt : Number(raw.startedAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => TicketLaboratory_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketLaboratory.prototype, "ticketId", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketLaboratory.prototype, "customerId", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketLaboratory.prototype, "laboratoryId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: TicketLaboratoryStatus.Pending }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketLaboratory.prototype, "status", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketLaboratory.prototype, "expectedPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketLaboratory.prototype, "discountMoney", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        default: 0,
        precision: 7,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketLaboratory.prototype, "discountPercent", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 25, default: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], TicketLaboratory.prototype, "discountType", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketLaboratory.prototype, "actualPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketLaboratory.prototype, "startedAt", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', default: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)({}),
    __metadata("design:type", String)
], TicketLaboratory.prototype, "result", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', default: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)({}),
    __metadata("design:type", String)
], TicketLaboratory.prototype, "attention", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => ticket_entity_1.default, (ticket) => ticket.ticketLaboratoryList, {
        createForeignKeyConstraints: false,
    }),
    (0, typeorm_1.JoinColumn)({ name: 'ticketId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_b = typeof ticket_entity_1.default !== "undefined" && ticket_entity_1.default) === "function" ? _b : Object)
], TicketLaboratory.prototype, "ticket", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => customer_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'customerId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_c = typeof customer_entity_1.default !== "undefined" && customer_entity_1.default) === "function" ? _c : Object)
], TicketLaboratory.prototype, "customer", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.OneToMany)(() => laboratory_entity_1.default, (laboratory) => laboratory.ticketLaboratory),
    __metadata("design:type", Array)
], TicketLaboratory.prototype, "laboratoryList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], TicketLaboratory.prototype, "ticketUserList", void 0);
TicketLaboratory = TicketLaboratory_1 = __decorate([
    (0, typeorm_1.Entity)('TicketLaboratory'),
    (0, typeorm_1.Index)('IDX_TicketLaboratory__oid_ticketId', ['oid', 'ticketId']),
    (0, typeorm_1.Index)('IDX_TicketLaboratory__oid_laboratoryId', ['oid', 'laboratoryId'])
], TicketLaboratory);
exports["default"] = TicketLaboratory;


/***/ }),
/* 55 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Laboratory_1;
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LaboratoryValueType = void 0;
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const laboratory_group_entity_1 = __webpack_require__(56);
const ticket_laboratory_entity_1 = __webpack_require__(54);
var LaboratoryValueType;
(function (LaboratoryValueType) {
    LaboratoryValueType[LaboratoryValueType["Number"] = 1] = "Number";
    LaboratoryValueType[LaboratoryValueType["String"] = 2] = "String";
    LaboratoryValueType[LaboratoryValueType["Options"] = 3] = "Options";
    LaboratoryValueType[LaboratoryValueType["Children"] = 4] = "Children";
})(LaboratoryValueType || (exports.LaboratoryValueType = LaboratoryValueType = {}));
let Laboratory = Laboratory_1 = class Laboratory {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new Laboratory_1();
        entity.price = Number(raw.price);
        entity.lowValue = Number(raw.lowValue);
        entity.highValue = Number(raw.highValue);
        Object.assign(entity, raw);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => Laboratory_1.fromRaw(i));
    }
};
__decorate([
    (0, class_transformer_1.Exclude)(),
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], Laboratory.prototype, "oid", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], Laboratory.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Laboratory.prototype, "priority", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Laboratory.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ default: 0 }),
    __metadata("design:type", Number)
], Laboratory.prototype, "laboratoryGroupId", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Laboratory.prototype, "price", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Laboratory.prototype, "level", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Laboratory.prototype, "parentId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'smallint', default: LaboratoryValueType.Number }),
    __metadata("design:type", Number)
], Laboratory.prototype, "valueType", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 25 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Laboratory.prototype, "unit", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        nullable: true,
        precision: 7,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Laboratory.prototype, "lowValue", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        nullable: true,
        precision: 7,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Laboratory.prototype, "highValue", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Laboratory.prototype, "options", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)((type) => laboratory_group_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'laboratoryGroupId', referencedColumnName: 'id' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof laboratory_group_entity_1.default !== "undefined" && laboratory_group_entity_1.default) === "function" ? _a : Object)
], Laboratory.prototype, "laboratoryGroup", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => ticket_laboratory_entity_1.default, (ticketLaboratory) => ticketLaboratory.laboratoryList, {
        createForeignKeyConstraints: false,
    }),
    (0, typeorm_1.JoinColumn)({ name: 'parentId', referencedColumnName: 'laboratoryId' }),
    __metadata("design:type", typeof (_b = typeof ticket_laboratory_entity_1.default !== "undefined" && ticket_laboratory_entity_1.default) === "function" ? _b : Object)
], Laboratory.prototype, "ticketLaboratory", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], Laboratory.prototype, "children", void 0);
Laboratory = Laboratory_1 = __decorate([
    (0, typeorm_1.Entity)('Laboratory'),
    (0, typeorm_1.Index)('IDX_Laboratory__oid_parentId', ['oid', 'parentId'])
], Laboratory);
exports["default"] = Laboratory;


/***/ }),
/* 56 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var LaboratoryGroup_1;
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const print_html_entity_1 = __webpack_require__(57);
let LaboratoryGroup = LaboratoryGroup_1 = class LaboratoryGroup {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new LaboratoryGroup_1();
        Object.assign(entity, raw);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => LaboratoryGroup_1.fromRaw(i));
    }
};
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], LaboratoryGroup.prototype, "oid", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], LaboratoryGroup.prototype, "id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    __metadata("design:type", String)
], LaboratoryGroup.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ default: 0 }),
    __metadata("design:type", Number)
], LaboratoryGroup.prototype, "printHtmlId", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)((type) => print_html_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'printHtmlId', referencedColumnName: 'id' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof print_html_entity_1.default !== "undefined" && print_html_entity_1.default) === "function" ? _a : Object)
], LaboratoryGroup.prototype, "printHtml", void 0);
LaboratoryGroup = LaboratoryGroup_1 = __decorate([
    (0, typeorm_1.Entity)('LaboratoryGroup')
], LaboratoryGroup);
exports["default"] = LaboratoryGroup;


/***/ }),
/* 57 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var PrintHtml_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
let PrintHtml = PrintHtml_1 = class PrintHtml {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new PrintHtml_1();
        Object.assign(entity, raw);
        entity.updatedAt = raw.updatedAt == null ? raw.updatedAt : Number(raw.updatedAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => PrintHtml_1.fromRaw(i));
    }
};
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], PrintHtml.prototype, "oid", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], PrintHtml.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], PrintHtml.prototype, "name", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', default: '' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], PrintHtml.prototype, "initVariable", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', default: '' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], PrintHtml.prototype, "dataExample", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], PrintHtml.prototype, "content", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: () => '(EXTRACT(epoch FROM now()) * (1000))',
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    __metadata("design:type", Number)
], PrintHtml.prototype, "updatedAt", void 0);
PrintHtml = PrintHtml_1 = __decorate([
    (0, typeorm_1.Entity)('PrintHtml')
], PrintHtml);
exports["default"] = PrintHtml;


/***/ }),
/* 58 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var TicketProcedure_1;
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketProcedureStatus = void 0;
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const variable_1 = __webpack_require__(41);
const customer_entity_1 = __webpack_require__(40);
const procedure_entity_1 = __webpack_require__(59);
const ticket_entity_1 = __webpack_require__(50);
var TicketProcedureStatus;
(function (TicketProcedureStatus) {
    TicketProcedureStatus[TicketProcedureStatus["Empty"] = 1] = "Empty";
    TicketProcedureStatus[TicketProcedureStatus["Pending"] = 2] = "Pending";
    TicketProcedureStatus[TicketProcedureStatus["Completed"] = 3] = "Completed";
})(TicketProcedureStatus || (exports.TicketProcedureStatus = TicketProcedureStatus = {}));
let TicketProcedure = TicketProcedure_1 = class TicketProcedure extends base_entity_1.BaseEntity {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new TicketProcedure_1();
        Object.assign(entity, raw);
        entity.expectedPrice = Number(raw.expectedPrice);
        entity.discountMoney = Number(raw.discountMoney);
        entity.discountPercent = Number(raw.discountPercent);
        entity.actualPrice = Number(raw.actualPrice);
        entity.startedAt = raw.startedAt == null ? raw.startedAt : Number(raw.startedAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => TicketProcedure_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProcedure.prototype, "ticketId", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProcedure.prototype, "customerId", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProcedure.prototype, "procedureId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: TicketProcedureStatus.Pending }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProcedure.prototype, "status", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProcedure.prototype, "quantity", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProcedure.prototype, "expectedPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProcedure.prototype, "discountMoney", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        default: 0,
        precision: 7,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProcedure.prototype, "discountPercent", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 25, default: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], TicketProcedure.prototype, "discountType", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProcedure.prototype, "actualPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProcedure.prototype, "startedAt", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', default: '' }),
    (0, class_transformer_1.Expose)({}),
    __metadata("design:type", String)
], TicketProcedure.prototype, "result", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 100, default: JSON.stringify([]) }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], TicketProcedure.prototype, "imageIds", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => ticket_entity_1.default, (ticket) => ticket.ticketProcedureList, {
        createForeignKeyConstraints: false,
    }),
    (0, typeorm_1.JoinColumn)({ name: 'ticketId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_b = typeof ticket_entity_1.default !== "undefined" && ticket_entity_1.default) === "function" ? _b : Object)
], TicketProcedure.prototype, "ticket", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => customer_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'customerId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_c = typeof customer_entity_1.default !== "undefined" && customer_entity_1.default) === "function" ? _c : Object)
], TicketProcedure.prototype, "customer", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => procedure_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'procedureId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_d = typeof procedure_entity_1.default !== "undefined" && procedure_entity_1.default) === "function" ? _d : Object)
], TicketProcedure.prototype, "procedure", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], TicketProcedure.prototype, "imageList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], TicketProcedure.prototype, "ticketUserList", void 0);
TicketProcedure = TicketProcedure_1 = __decorate([
    (0, typeorm_1.Entity)('TicketProcedure'),
    (0, typeorm_1.Index)('IDX_TicketProcedure__oid_ticketId', ['oid', 'ticketId']),
    (0, typeorm_1.Index)('IDX_TicketProcedure__oid_procedureId', ['oid', 'procedureId'])
], TicketProcedure);
exports["default"] = TicketProcedure;


/***/ }),
/* 59 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Procedure_1;
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProcedureType = void 0;
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const procedure_group_entity_1 = __webpack_require__(60);
var ProcedureType;
(function (ProcedureType) {
    ProcedureType[ProcedureType["Basic"] = 1] = "Basic";
    ProcedureType[ProcedureType["Regimen"] = 2] = "Regimen";
    ProcedureType[ProcedureType["Remedy"] = 3] = "Remedy";
})(ProcedureType || (exports.ProcedureType = ProcedureType = {}));
let Procedure = Procedure_1 = class Procedure {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new Procedure_1();
        Object.assign(entity, raw);
        entity.price = Number(raw.price);
        entity.updatedAt = raw.updatedAt == null ? raw.updatedAt : Number(raw.updatedAt);
        entity.deletedAt = raw.deletedAt == null ? raw.deletedAt : Number(raw.deletedAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => Procedure_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)({ name: 'oid' }),
    (0, class_transformer_1.Exclude)(),
    __metadata("design:type", Number)
], Procedure.prototype, "oid", void 0);
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)({ name: 'id' }),
    (0, class_transformer_1.Expose)({ name: 'id' }),
    __metadata("design:type", Number)
], Procedure.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Procedure.prototype, "name", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: ProcedureType.Basic }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Procedure.prototype, "procedureType", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Procedure.prototype, "quantityDefault", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Procedure.prototype, "gapHours", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ default: 0 }),
    __metadata("design:type", Number)
], Procedure.prototype, "procedureGroupId", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Procedure.prototype, "price", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', default: JSON.stringify([]) }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Procedure.prototype, "consumablesHint", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Procedure.prototype, "isActive", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: () => '(EXTRACT(epoch FROM now()) * (1000))',
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Procedure.prototype, "updatedAt", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Procedure.prototype, "deletedAt", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)((type) => procedure_group_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'procedureGroupId', referencedColumnName: 'id' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof procedure_group_entity_1.default !== "undefined" && procedure_group_entity_1.default) === "function" ? _a : Object)
], Procedure.prototype, "procedureGroup", void 0);
Procedure = Procedure_1 = __decorate([
    (0, typeorm_1.Entity)('Procedure')
], Procedure);
exports["default"] = Procedure;


/***/ }),
/* 60 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var ProcedureGroup_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
let ProcedureGroup = ProcedureGroup_1 = class ProcedureGroup {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new ProcedureGroup_1();
        Object.assign(entity, raw);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => ProcedureGroup_1.fromRaw(i));
    }
};
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], ProcedureGroup.prototype, "oid", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], ProcedureGroup.prototype, "id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    __metadata("design:type", String)
], ProcedureGroup.prototype, "name", void 0);
ProcedureGroup = ProcedureGroup_1 = __decorate([
    (0, typeorm_1.Entity)('ProcedureGroup')
], ProcedureGroup);
exports["default"] = ProcedureGroup;


/***/ }),
/* 61 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var TicketProduct_1;
var _a, _b, _c, _d, _e, _f;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketProductType = void 0;
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const variable_1 = __webpack_require__(41);
const batch_entity_1 = __webpack_require__(43);
const customer_entity_1 = __webpack_require__(40);
const product_entity_1 = __webpack_require__(44);
const ticket_entity_1 = __webpack_require__(50);
var TicketProductType;
(function (TicketProductType) {
    TicketProductType[TicketProductType["Prescription"] = 1] = "Prescription";
    TicketProductType[TicketProductType["Consumable"] = 2] = "Consumable";
})(TicketProductType || (exports.TicketProductType = TicketProductType = {}));
let TicketProduct = TicketProduct_1 = class TicketProduct extends base_entity_1.BaseEntity {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new TicketProduct_1();
        Object.assign(entity, raw);
        entity.quantity = Number(raw.quantity);
        entity.costAmount = Number(raw.costAmount);
        entity.expectedPrice = Number(raw.expectedPrice);
        entity.discountMoney = Number(raw.discountMoney);
        entity.discountPercent = Number(raw.discountPercent);
        entity.actualPrice = Number(raw.actualPrice);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => TicketProduct_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProduct.prototype, "ticketId", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProduct.prototype, "customerId", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProduct.prototype, "productId", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProduct.prototype, "batchId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: variable_1.DeliveryStatus.Pending }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof variable_1.DeliveryStatus !== "undefined" && variable_1.DeliveryStatus) === "function" ? _a : Object)
], TicketProduct.prototype, "deliveryStatus", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: TicketProductType.Prescription }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProduct.prototype, "type", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProduct.prototype, "unitRate", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProduct.prototype, "quantityPrescription", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        default: 0,
        precision: 10,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProduct.prototype, "quantity", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        default: 0,
        precision: 10,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProduct.prototype, "quantityReturn", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProduct.prototype, "costAmount", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProduct.prototype, "expectedPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProduct.prototype, "discountMoney", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        default: 0,
        precision: 7,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProduct.prototype, "discountPercent", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 25, default: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_b = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _b : Object)
], TicketProduct.prototype, "discountType", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketProduct.prototype, "actualPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], TicketProduct.prototype, "hintUsage", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => ticket_entity_1.default, (ticket) => ticket.ticketProductList, {
        createForeignKeyConstraints: false,
    }),
    (0, typeorm_1.JoinColumn)({ name: 'ticketId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_c = typeof ticket_entity_1.default !== "undefined" && ticket_entity_1.default) === "function" ? _c : Object)
], TicketProduct.prototype, "ticket", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => customer_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'customerId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_d = typeof customer_entity_1.default !== "undefined" && customer_entity_1.default) === "function" ? _d : Object)
], TicketProduct.prototype, "customer", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => product_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'productId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_e = typeof product_entity_1.default !== "undefined" && product_entity_1.default) === "function" ? _e : Object)
], TicketProduct.prototype, "product", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => batch_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'batchId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_f = typeof batch_entity_1.default !== "undefined" && batch_entity_1.default) === "function" ? _f : Object)
], TicketProduct.prototype, "batch", void 0);
TicketProduct = TicketProduct_1 = __decorate([
    (0, typeorm_1.Entity)('TicketProduct'),
    (0, typeorm_1.Index)('IDX_TicketProduct__oid_ticketId', ['oid', 'ticketId']),
    (0, typeorm_1.Index)('IDX_TicketProduct__oid_customerId', ['oid', 'customerId'])
], TicketProduct);
exports["default"] = TicketProduct;


/***/ }),
/* 62 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var TicketRadiology_1;
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketRadiologyStatus = void 0;
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const variable_1 = __webpack_require__(41);
const customer_entity_1 = __webpack_require__(40);
const radiology_entity_1 = __webpack_require__(63);
const ticket_entity_1 = __webpack_require__(50);
var TicketRadiologyStatus;
(function (TicketRadiologyStatus) {
    TicketRadiologyStatus[TicketRadiologyStatus["Empty"] = 1] = "Empty";
    TicketRadiologyStatus[TicketRadiologyStatus["Pending"] = 2] = "Pending";
    TicketRadiologyStatus[TicketRadiologyStatus["Completed"] = 3] = "Completed";
})(TicketRadiologyStatus || (exports.TicketRadiologyStatus = TicketRadiologyStatus = {}));
let TicketRadiology = TicketRadiology_1 = class TicketRadiology extends base_entity_1.BaseEntity {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new TicketRadiology_1();
        Object.assign(entity, raw);
        entity.expectedPrice = Number(raw.expectedPrice);
        entity.discountMoney = Number(raw.discountMoney);
        entity.discountPercent = Number(raw.discountPercent);
        entity.actualPrice = Number(raw.actualPrice);
        entity.startedAt = raw.startedAt == null ? raw.startedAt : Number(raw.startedAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => TicketRadiology_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketRadiology.prototype, "ticketId", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketRadiology.prototype, "customerId", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketRadiology.prototype, "radiologyId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: TicketRadiologyStatus.Pending }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketRadiology.prototype, "status", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketRadiology.prototype, "expectedPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketRadiology.prototype, "discountMoney", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        default: 0,
        precision: 7,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketRadiology.prototype, "discountPercent", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 25, default: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], TicketRadiology.prototype, "discountType", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketRadiology.prototype, "actualPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketRadiology.prototype, "startedAt", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', default: '' }),
    (0, class_transformer_1.Expose)({}),
    __metadata("design:type", String)
], TicketRadiology.prototype, "description", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', default: '' }),
    (0, class_transformer_1.Expose)({}),
    __metadata("design:type", String)
], TicketRadiology.prototype, "result", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 100, default: JSON.stringify([]) }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], TicketRadiology.prototype, "imageIds", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => ticket_entity_1.default, (ticket) => ticket.ticketRadiologyList, {
        createForeignKeyConstraints: false,
    }),
    (0, typeorm_1.JoinColumn)({ name: 'ticketId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_b = typeof ticket_entity_1.default !== "undefined" && ticket_entity_1.default) === "function" ? _b : Object)
], TicketRadiology.prototype, "ticket", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => customer_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'customerId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_c = typeof customer_entity_1.default !== "undefined" && customer_entity_1.default) === "function" ? _c : Object)
], TicketRadiology.prototype, "customer", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => radiology_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'radiologyId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_d = typeof radiology_entity_1.default !== "undefined" && radiology_entity_1.default) === "function" ? _d : Object)
], TicketRadiology.prototype, "radiology", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], TicketRadiology.prototype, "imageList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], TicketRadiology.prototype, "ticketUserList", void 0);
TicketRadiology = TicketRadiology_1 = __decorate([
    (0, typeorm_1.Entity)('TicketRadiology'),
    (0, typeorm_1.Index)('IDX_TicketRadiology__oid_ticketId', ['oid', 'ticketId']),
    (0, typeorm_1.Index)('IDX_TicketRadiology__oid_radiologyId', ['oid', 'radiologyId'])
], TicketRadiology);
exports["default"] = TicketRadiology;


/***/ }),
/* 63 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Radiology_1;
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const print_html_entity_1 = __webpack_require__(57);
const radiology_group_entity_1 = __webpack_require__(64);
let Radiology = Radiology_1 = class Radiology {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new Radiology_1();
        entity.price = Number(raw.price);
        entity.updatedAt = raw.updatedAt == null ? raw.updatedAt : Number(raw.updatedAt);
        entity.deletedAt = raw.deletedAt == null ? raw.deletedAt : Number(raw.deletedAt);
        Object.assign(entity, raw);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => Radiology_1.fromRaw(i));
    }
};
__decorate([
    (0, class_transformer_1.Exclude)(),
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], Radiology.prototype, "oid", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], Radiology.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Radiology.prototype, "priority", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Radiology.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ default: 0 }),
    __metadata("design:type", Number)
], Radiology.prototype, "radiologyGroupId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ default: 0 }),
    __metadata("design:type", Number)
], Radiology.prototype, "printHtmlId", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Radiology.prototype, "price", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, default: '' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Radiology.prototype, "requestNoteDefault", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Radiology.prototype, "descriptionDefault", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Radiology.prototype, "resultDefault", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: () => '(EXTRACT(epoch FROM now()) * (1000))',
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Radiology.prototype, "updatedAt", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Radiology.prototype, "deletedAt", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)((type) => radiology_group_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'radiologyGroupId', referencedColumnName: 'id' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof radiology_group_entity_1.default !== "undefined" && radiology_group_entity_1.default) === "function" ? _a : Object)
], Radiology.prototype, "radiologyGroup", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)((type) => print_html_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'printHtmlId', referencedColumnName: 'id' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_b = typeof print_html_entity_1.default !== "undefined" && print_html_entity_1.default) === "function" ? _b : Object)
], Radiology.prototype, "printHtml", void 0);
Radiology = Radiology_1 = __decorate([
    (0, typeorm_1.Entity)('Radiology')
], Radiology);
exports["default"] = Radiology;


/***/ }),
/* 64 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var RadiologyGroup_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
let RadiologyGroup = RadiologyGroup_1 = class RadiologyGroup {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new RadiologyGroup_1();
        Object.assign(entity, raw);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => RadiologyGroup_1.fromRaw(i));
    }
};
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], RadiologyGroup.prototype, "oid", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], RadiologyGroup.prototype, "id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    __metadata("design:type", String)
], RadiologyGroup.prototype, "name", void 0);
RadiologyGroup = RadiologyGroup_1 = __decorate([
    (0, typeorm_1.Entity)('RadiologyGroup')
], RadiologyGroup);
exports["default"] = RadiologyGroup;


/***/ }),
/* 65 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const ticket_entity_1 = __webpack_require__(50);
let TicketSurcharge = class TicketSurcharge extends base_entity_1.BaseEntity {
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketSurcharge.prototype, "ticketId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], TicketSurcharge.prototype, "key", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], TicketSurcharge.prototype, "name", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketSurcharge.prototype, "money", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => ticket_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'ticketId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_a = typeof ticket_entity_1.default !== "undefined" && ticket_entity_1.default) === "function" ? _a : Object)
], TicketSurcharge.prototype, "ticket", void 0);
TicketSurcharge = __decorate([
    (0, typeorm_1.Entity)('TicketSurcharge'),
    (0, typeorm_1.Index)('IDX_TicketSurcharge__ticketId', ['oid', 'ticketId'])
], TicketSurcharge);
exports["default"] = TicketSurcharge;


/***/ }),
/* 66 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var TicketUser_1;
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketUserReferenceType = void 0;
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const variable_1 = __webpack_require__(41);
const role_entity_1 = __webpack_require__(67);
const ticket_entity_1 = __webpack_require__(50);
const user_entity_1 = __webpack_require__(69);
var TicketUserReferenceType;
(function (TicketUserReferenceType) {
    TicketUserReferenceType[TicketUserReferenceType["Ticket"] = 1] = "Ticket";
    TicketUserReferenceType[TicketUserReferenceType["TicketProcedure"] = 2] = "TicketProcedure";
    TicketUserReferenceType[TicketUserReferenceType["TicketProduct"] = 3] = "TicketProduct";
    TicketUserReferenceType[TicketUserReferenceType["TicketRadiology"] = 4] = "TicketRadiology";
})(TicketUserReferenceType || (exports.TicketUserReferenceType = TicketUserReferenceType = {}));
let TicketUser = TicketUser_1 = class TicketUser extends base_entity_1.BaseEntity {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new TicketUser_1();
        Object.assign(entity, raw);
        entity.createdAt = Number(raw.createdAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => TicketUser_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketUser.prototype, "ticketId", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketUser.prototype, "userId", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketUser.prototype, "referenceId", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketUser.prototype, "referenceType", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketUser.prototype, "roleId", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketUser.prototype, "bolusMoney", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketUser.prototype, "bolusPercent", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 25, default: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], TicketUser.prototype, "bolusType", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], TicketUser.prototype, "createdAt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => ticket_entity_1.default, (ticket) => ticket.ticketUserList, {
        createForeignKeyConstraints: false,
    }),
    (0, typeorm_1.JoinColumn)({ name: 'ticketId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_b = typeof ticket_entity_1.default !== "undefined" && ticket_entity_1.default) === "function" ? _b : Object)
], TicketUser.prototype, "ticket", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => user_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'userId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_c = typeof user_entity_1.default !== "undefined" && user_entity_1.default) === "function" ? _c : Object)
], TicketUser.prototype, "user", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => role_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'roleId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_d = typeof role_entity_1.default !== "undefined" && role_entity_1.default) === "function" ? _d : Object)
], TicketUser.prototype, "role", void 0);
TicketUser = TicketUser_1 = __decorate([
    (0, typeorm_1.Entity)('TicketUser'),
    (0, typeorm_1.Index)('IDX_TicketUser__oid_ticketId', ['oid', 'ticketId']),
    (0, typeorm_1.Index)('IDX_TicketUser__oid_createdAt', ['oid', 'createdAt'])
], TicketUser);
exports["default"] = TicketUser;


/***/ }),
/* 67 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Role_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const user_role_entity_1 = __webpack_require__(68);
let Role = Role_1 = class Role {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new Role_1();
        Object.assign(entity, raw);
        entity.updatedAt = raw.updatedAt == null ? raw.updatedAt : Number(raw.updatedAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => Role_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Exclude)(),
    __metadata("design:type", Number)
], Role.prototype, "oid", void 0);
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Role.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Role.prototype, "name", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', default: '[]' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Role.prototype, "permissionIds", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Role.prototype, "isActive", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: () => '(EXTRACT(epoch FROM now()) * (1000))',
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Role.prototype, "updatedAt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.OneToMany)(() => user_role_entity_1.default, (userRole) => userRole.role),
    __metadata("design:type", Array)
], Role.prototype, "userRoleList", void 0);
Role = Role_1 = __decorate([
    (0, typeorm_1.Entity)('Role')
], Role);
exports["default"] = Role;


/***/ }),
/* 68 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var UserRole_1;
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const role_entity_1 = __webpack_require__(67);
const user_entity_1 = __webpack_require__(69);
let UserRole = UserRole_1 = class UserRole {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new UserRole_1();
        Object.assign(entity, raw);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => UserRole_1.fromRaw(i));
    }
};
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], UserRole.prototype, "oid", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], UserRole.prototype, "id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], UserRole.prototype, "userId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], UserRole.prototype, "roleId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => role_entity_1.default, (role) => role.userRoleList, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'roleId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_a = typeof role_entity_1.default !== "undefined" && role_entity_1.default) === "function" ? _a : Object)
], UserRole.prototype, "role", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => user_entity_1.default, (user) => user.userRoleList, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'userId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_b = typeof user_entity_1.default !== "undefined" && user_entity_1.default) === "function" ? _b : Object)
], UserRole.prototype, "user", void 0);
UserRole = UserRole_1 = __decorate([
    (0, typeorm_1.Entity)('UserRole')
], UserRole);
exports["default"] = UserRole;


/***/ }),
/* 69 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var User_1;
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UserGroup = void 0;
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const organization_entity_1 = __webpack_require__(70);
const user_role_entity_1 = __webpack_require__(68);
var UserGroup;
(function (UserGroup) {
    UserGroup["ROOT"] = "ROOT";
})(UserGroup || (exports.UserGroup = UserGroup = {}));
let User = User_1 = class User {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new User_1();
        Object.assign(entity, raw);
        entity.updatedAt = raw.updatedAt == null ? raw.updatedAt : Number(raw.updatedAt);
        entity.deletedAt = raw.deletedAt == null ? raw.deletedAt : Number(raw.deletedAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => User_1.fromRaw(i));
    }
};
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], User.prototype, "oid", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], User.prototype, "id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'char', length: 10, nullable: true }),
    __metadata("design:type", String)
], User.prototype, "phone", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    __metadata("design:type", String)
], User.prototype, "username", void 0);
__decorate([
    (0, class_transformer_1.Exclude)(),
    (0, typeorm_1.Column)({ name: 'hashPassword', type: 'varchar', length: 255 }),
    __metadata("design:type", String)
], User.prototype, "hashPassword", void 0);
__decorate([
    (0, class_transformer_1.Expose)({ groups: [UserGroup.ROOT] }),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    __metadata("design:type", String)
], User.prototype, "secret", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    __metadata("design:type", String)
], User.prototype, "fullName", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    __metadata("design:type", Number)
], User.prototype, "birthday", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'smallint', nullable: true }),
    __metadata("design:type", typeof (_a = typeof variable_1.EGender !== "undefined" && variable_1.EGender) === "function" ? _a : Object)
], User.prototype, "gender", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'smallint', default: 1 }),
    __metadata("design:type", Number)
], User.prototype, "isAdmin", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'smallint', default: 1 }),
    __metadata("design:type", Number)
], User.prototype, "isActive", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: () => '(EXTRACT(epoch FROM now()) * (1000))',
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    __metadata("design:type", Number)
], User.prototype, "updatedAt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    __metadata("design:type", Number)
], User.prototype, "deletedAt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => organization_entity_1.default, (organization) => organization.userList, {
        createForeignKeyConstraints: false,
    }),
    (0, typeorm_1.JoinColumn)({ name: 'oid', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_b = typeof organization_entity_1.default !== "undefined" && organization_entity_1.default) === "function" ? _b : Object)
], User.prototype, "organization", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.OneToMany)((type) => user_role_entity_1.default, (userRole) => userRole.user),
    __metadata("design:type", Array)
], User.prototype, "userRoleList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], User.prototype, "devices", void 0);
User = User_1 = __decorate([
    (0, typeorm_1.Entity)('User')
], User);
exports["default"] = User;


/***/ }),
/* 70 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Organization_1;
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const image_entity_1 = __webpack_require__(71);
const user_entity_1 = __webpack_require__(69);
let Organization = Organization_1 = class Organization {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new Organization_1();
        Object.assign(entity, raw);
        entity.createdAt = raw.createdAt == null ? raw.createdAt : Number(raw.createdAt);
        entity.updatedAt = raw.updatedAt == null ? raw.updatedAt : Number(raw.updatedAt);
        entity.deletedAt = raw.deletedAt == null ? raw.deletedAt : Number(raw.deletedAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => Organization_1.fromRaw(i));
    }
};
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], Organization.prototype, "id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'char', length: 10, nullable: false }),
    __metadata("design:type", String)
], Organization.prototype, "phone", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    __metadata("design:type", String)
], Organization.prototype, "email", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Organization.prototype, "emailVerify", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', default: JSON.stringify({}) }),
    __metadata("design:type", String)
], Organization.prototype, "dataVersion", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'smallint', default: 0 }),
    __metadata("design:type", Number)
], Organization.prototype, "level", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    __metadata("design:type", String)
], Organization.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ default: 0 }),
    __metadata("design:type", Number)
], Organization.prototype, "logoImageId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    __metadata("design:type", String)
], Organization.prototype, "addressProvince", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    __metadata("design:type", String)
], Organization.prototype, "addressDistrict", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    __metadata("design:type", String)
], Organization.prototype, "addressWard", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),
    __metadata("design:type", String)
], Organization.prototype, "addressStreet", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', default: '[]' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Organization.prototype, "permissionIds", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', default: '' }),
    (0, class_transformer_1.Expose)({}),
    __metadata("design:type", String)
], Organization.prototype, "note", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Organization.prototype, "expiryDate", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: () => '(EXTRACT(epoch FROM now()) * (1000))',
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    __metadata("design:type", Number)
], Organization.prototype, "createdAt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: () => '(EXTRACT(epoch FROM now()) * (1000))',
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    __metadata("design:type", Number)
], Organization.prototype, "updatedAt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    __metadata("design:type", Number)
], Organization.prototype, "deletedAt", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Organization.prototype, "isActive", void 0);
__decorate([
    (0, typeorm_1.OneToOne)(() => image_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'logoImageId', referencedColumnName: 'id' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof image_entity_1.default !== "undefined" && image_entity_1.default) === "function" ? _a : Object)
], Organization.prototype, "logoImage", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.OneToMany)(() => user_entity_1.default, (user) => user.organization),
    __metadata("design:type", Array)
], Organization.prototype, "userList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Object)
], Organization.prototype, "dataVersionParse", void 0);
Organization = Organization_1 = __decorate([
    (0, typeorm_1.Entity)('Organization'),
    (0, typeorm_1.Index)('IDX_Organization__phone', ['phone'], { unique: true }),
    (0, typeorm_1.Index)('IDX_Organization__email', ['email'], { unique: true })
], Organization);
exports["default"] = Organization;


/***/ }),
/* 71 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Image_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ImageHost = void 0;
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
var ImageHost;
(function (ImageHost) {
    ImageHost["GoogleDriver"] = "GoogleDriver";
})(ImageHost || (exports.ImageHost = ImageHost = {}));
let Image = Image_1 = class Image {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new Image_1();
        Object.assign(entity, raw);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => Image_1.fromRaw(i));
    }
};
__decorate([
    (0, class_transformer_1.Exclude)(),
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], Image.prototype, "oid", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], Image.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Image.prototype, "customerId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 50 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Image.prototype, "name", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 100 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Image.prototype, "mimeType", void 0);
__decorate([
    (0, typeorm_1.Column)({}),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Image.prototype, "size", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 50, default: ImageHost.GoogleDriver }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Image.prototype, "hostType", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 50 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Image.prototype, "hostAccount", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 50 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Image.prototype, "hostId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Image.prototype, "waitDelete", void 0);
Image = Image_1 = __decorate([
    (0, typeorm_1.Entity)('Image')
], Image);
exports["default"] = Image;


/***/ }),
/* 72 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var LaboratoryKit_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
let LaboratoryKit = LaboratoryKit_1 = class LaboratoryKit {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new LaboratoryKit_1();
        Object.assign(entity, raw);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => LaboratoryKit_1.fromRaw(i));
    }
};
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], LaboratoryKit.prototype, "oid", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], LaboratoryKit.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], LaboratoryKit.prototype, "priority", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    __metadata("design:type", String)
], LaboratoryKit.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'text', default: JSON.stringify([]) }),
    __metadata("design:type", String)
], LaboratoryKit.prototype, "laboratoryIds", void 0);
LaboratoryKit = LaboratoryKit_1 = __decorate([
    (0, typeorm_1.Entity)('LaboratoryKit')
], LaboratoryKit);
exports["default"] = LaboratoryKit;


/***/ }),
/* 73 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Permission_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PermissionId = void 0;
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
var PermissionId;
(function (PermissionId) {
    PermissionId[PermissionId["ORGANIZATION"] = 1] = "ORGANIZATION";
    PermissionId[PermissionId["ORGANIZATION_UPDATE_INFO"] = 100] = "ORGANIZATION_UPDATE_INFO";
    PermissionId[PermissionId["ORGANIZATION_SETTING_UPSERT"] = 101] = "ORGANIZATION_SETTING_UPSERT";
    PermissionId[PermissionId["ORGANIZATION_VERIFY_EMAIL"] = 102] = "ORGANIZATION_VERIFY_EMAIL";
    PermissionId[PermissionId["ROLE"] = 2] = "ROLE";
    PermissionId[PermissionId["ROLE_READ"] = 200] = "ROLE_READ";
    PermissionId[PermissionId["ROLE_CREATE"] = 201] = "ROLE_CREATE";
    PermissionId[PermissionId["ROLE_UPDATE"] = 202] = "ROLE_UPDATE";
    PermissionId[PermissionId["ROLE_DELETE"] = 203] = "ROLE_DELETE";
    PermissionId[PermissionId["USER"] = 3] = "USER";
    PermissionId[PermissionId["USER_READ"] = 300] = "USER_READ";
    PermissionId[PermissionId["USER_CREATE"] = 301] = "USER_CREATE";
    PermissionId[PermissionId["USER_UPDATE"] = 302] = "USER_UPDATE";
    PermissionId[PermissionId["USER_DELETE"] = 303] = "USER_DELETE";
    PermissionId[PermissionId["USER_DEVICE_LOGOUT"] = 304] = "USER_DEVICE_LOGOUT";
    PermissionId[PermissionId["STATISTIC"] = 4] = "STATISTIC";
    PermissionId[PermissionId["STATISTIC_PRODUCT"] = 400] = "STATISTIC_PRODUCT";
    PermissionId[PermissionId["STATISTIC_PROCEDURE"] = 401] = "STATISTIC_PROCEDURE";
    PermissionId[PermissionId["STATISTIC_CUSTOMER"] = 402] = "STATISTIC_CUSTOMER";
    PermissionId[PermissionId["STATISTIC_RECEIPT"] = 403] = "STATISTIC_RECEIPT";
    PermissionId[PermissionId["STATISTIC_TICKET"] = 404] = "STATISTIC_TICKET";
    PermissionId[PermissionId["MASTER_DATA"] = 5] = "MASTER_DATA";
    PermissionId[PermissionId["MASTER_DATA_WAREHOUSE"] = 501] = "MASTER_DATA_WAREHOUSE";
    PermissionId[PermissionId["MASTER_DATA_PROCEDURE"] = 502] = "MASTER_DATA_PROCEDURE";
    PermissionId[PermissionId["MASTER_DATA_LABORATORY"] = 503] = "MASTER_DATA_LABORATORY";
    PermissionId[PermissionId["MASTER_DATA_RADIOLOGY"] = 504] = "MASTER_DATA_RADIOLOGY";
    PermissionId[PermissionId["MASTER_DATA_TICKET_SOURCE"] = 505] = "MASTER_DATA_TICKET_SOURCE";
    PermissionId[PermissionId["MASTER_DATA_PRINT_HTML"] = 506] = "MASTER_DATA_PRINT_HTML";
    PermissionId[PermissionId["MASTER_DATA_PRESCRIPTION_SAMPLE"] = 507] = "MASTER_DATA_PRESCRIPTION_SAMPLE";
    PermissionId[PermissionId["PRODUCT"] = 6] = "PRODUCT";
    PermissionId[PermissionId["PRODUCT_READ"] = 600] = "PRODUCT_READ";
    PermissionId[PermissionId["PRODUCT_CREATE"] = 601] = "PRODUCT_CREATE";
    PermissionId[PermissionId["PRODUCT_UPDATE"] = 602] = "PRODUCT_UPDATE";
    PermissionId[PermissionId["PRODUCT_DELETE"] = 603] = "PRODUCT_DELETE";
    PermissionId[PermissionId["PRODUCT_DOWNLOAD_EXCEL"] = 604] = "PRODUCT_DOWNLOAD_EXCEL";
    PermissionId[PermissionId["BATCH_READ"] = 610] = "BATCH_READ";
    PermissionId[PermissionId["BATCH_CREATE"] = 611] = "BATCH_CREATE";
    PermissionId[PermissionId["BATCH_UPDATE"] = 612] = "BATCH_UPDATE";
    PermissionId[PermissionId["BATCH_DELETE"] = 613] = "BATCH_DELETE";
    PermissionId[PermissionId["READ_COST_PRICE"] = 614] = "READ_COST_PRICE";
    PermissionId[PermissionId["READ_MOVEMENT"] = 620] = "READ_MOVEMENT";
    PermissionId[PermissionId["DISTRIBUTOR"] = 7] = "DISTRIBUTOR";
    PermissionId[PermissionId["DISTRIBUTOR_READ"] = 700] = "DISTRIBUTOR_READ";
    PermissionId[PermissionId["DISTRIBUTOR_CREATE"] = 701] = "DISTRIBUTOR_CREATE";
    PermissionId[PermissionId["DISTRIBUTOR_UPDATE"] = 702] = "DISTRIBUTOR_UPDATE";
    PermissionId[PermissionId["DISTRIBUTOR_DELETE"] = 703] = "DISTRIBUTOR_DELETE";
    PermissionId[PermissionId["DISTRIBUTOR_PAYMENT_READ"] = 710] = "DISTRIBUTOR_PAYMENT_READ";
    PermissionId[PermissionId["DISTRIBUTOR_PAYMENT_PAY_DEBT"] = 711] = "DISTRIBUTOR_PAYMENT_PAY_DEBT";
    PermissionId[PermissionId["CUSTOMER"] = 8] = "CUSTOMER";
    PermissionId[PermissionId["CUSTOMER_READ"] = 800] = "CUSTOMER_READ";
    PermissionId[PermissionId["CUSTOMER_CREATE"] = 801] = "CUSTOMER_CREATE";
    PermissionId[PermissionId["CUSTOMER_UPDATE"] = 802] = "CUSTOMER_UPDATE";
    PermissionId[PermissionId["CUSTOMER_DELETE"] = 803] = "CUSTOMER_DELETE";
    PermissionId[PermissionId["CUSTOMER_DOWNLOAD_EXCEL"] = 804] = "CUSTOMER_DOWNLOAD_EXCEL";
    PermissionId[PermissionId["CUSTOMER_PAYMENT_READ"] = 810] = "CUSTOMER_PAYMENT_READ";
    PermissionId[PermissionId["CUSTOMER_PAY_DEBT"] = 811] = "CUSTOMER_PAY_DEBT";
    PermissionId[PermissionId["RECEIPT"] = 9] = "RECEIPT";
    PermissionId[PermissionId["RECEIPT_READ"] = 900] = "RECEIPT_READ";
    PermissionId[PermissionId["RECEIPT_CREATE_DRAFT"] = 901] = "RECEIPT_CREATE_DRAFT";
    PermissionId[PermissionId["RECEIPT_UPDATE_DRAFT_PREPAYMENT"] = 902] = "RECEIPT_UPDATE_DRAFT_PREPAYMENT";
    PermissionId[PermissionId["RECEIPT_DESTROY_DRAFT"] = 903] = "RECEIPT_DESTROY_DRAFT";
    PermissionId[PermissionId["RECEIPT_PAYMENT"] = 904] = "RECEIPT_PAYMENT";
    PermissionId[PermissionId["RECEIPT_REFUND_PAYMENT"] = 905] = "RECEIPT_REFUND_PAYMENT";
    PermissionId[PermissionId["RECEIPT_PAY_DEBT"] = 906] = "RECEIPT_PAY_DEBT";
    PermissionId[PermissionId["RECEIPT_SEND_PRODUCT"] = 907] = "RECEIPT_SEND_PRODUCT";
    PermissionId[PermissionId["RECEIPT_CANCEL"] = 908] = "RECEIPT_CANCEL";
    PermissionId[PermissionId["APPOINTMENT"] = 10] = "APPOINTMENT";
    PermissionId[PermissionId["APPOINTMENT_READ"] = 1000] = "APPOINTMENT_READ";
    PermissionId[PermissionId["APPOINTMENT_CREATE"] = 1001] = "APPOINTMENT_CREATE";
    PermissionId[PermissionId["APPOINTMENT_UPDATE"] = 1002] = "APPOINTMENT_UPDATE";
    PermissionId[PermissionId["APPOINTMENT_DELETE"] = 1003] = "APPOINTMENT_DELETE";
    PermissionId[PermissionId["APPOINTMENT_REGISTER_TICKET"] = 1004] = "APPOINTMENT_REGISTER_TICKET";
    PermissionId[PermissionId["TICKET_PROCEDURE_RESULT"] = 11] = "TICKET_PROCEDURE_RESULT";
    PermissionId[PermissionId["TICKET_LABORATORY_RESULT"] = 12] = "TICKET_LABORATORY_RESULT";
    PermissionId[PermissionId["TICKET_RADIOLOGY_RESULT"] = 13] = "TICKET_RADIOLOGY_RESULT";
    PermissionId[PermissionId["TICKET_ORDER"] = 50] = "TICKET_ORDER";
    PermissionId[PermissionId["TICKET_ORDER_READ"] = 5000] = "TICKET_ORDER_READ";
    PermissionId[PermissionId["TICKET_ORDER_CREATE_DRAFT"] = 5001] = "TICKET_ORDER_CREATE_DRAFT";
    PermissionId[PermissionId["TICKET_ORDER_UPDATE_DRAFT_APPROVED"] = 5002] = "TICKET_ORDER_UPDATE_DRAFT_APPROVED";
    PermissionId[PermissionId["TICKET_ORDER_DESTROY_DRAFT"] = 5003] = "TICKET_ORDER_DESTROY_DRAFT";
    PermissionId[PermissionId["TICKET_ORDER_CREATE_DEBT_SUCCESS"] = 5004] = "TICKET_ORDER_CREATE_DEBT_SUCCESS";
    PermissionId[PermissionId["TICKET_ORDER_UPDATE_DEBT_SUCCESS"] = 5005] = "TICKET_ORDER_UPDATE_DEBT_SUCCESS";
    PermissionId[PermissionId["TICKET_ORDER_PREPAYMENT"] = 5006] = "TICKET_ORDER_PREPAYMENT";
    PermissionId[PermissionId["TICKET_ORDER_REFUND_OVERPAID"] = 5007] = "TICKET_ORDER_REFUND_OVERPAID";
    PermissionId[PermissionId["TICKET_ORDER_SEND_PRODUCT"] = 5008] = "TICKET_ORDER_SEND_PRODUCT";
    PermissionId[PermissionId["TICKET_ORDER_RETURN_PRODUCT"] = 5009] = "TICKET_ORDER_RETURN_PRODUCT";
    PermissionId[PermissionId["TICKET_ORDER_PAYMENT_AND_CLOSE"] = 5010] = "TICKET_ORDER_PAYMENT_AND_CLOSE";
    PermissionId[PermissionId["TICKET_ORDER_PAY_DEBT"] = 5011] = "TICKET_ORDER_PAY_DEBT";
    PermissionId[PermissionId["TICKET_ORDER_REOPEN"] = 5012] = "TICKET_ORDER_REOPEN";
    PermissionId[PermissionId["TICKET_ORDER_CANCEL"] = 5013] = "TICKET_ORDER_CANCEL";
    PermissionId[PermissionId["TICKET_CLINIC"] = 51] = "TICKET_CLINIC";
    PermissionId[PermissionId["TICKET_CLINIC_READ"] = 5100] = "TICKET_CLINIC_READ";
    PermissionId[PermissionId["TICKET_CLINIC_CREATE"] = 5101] = "TICKET_CLINIC_CREATE";
    PermissionId[PermissionId["TICKET_CLINIC_DESTROY_DRAFT_SCHEDULE"] = 5102] = "TICKET_CLINIC_DESTROY_DRAFT_SCHEDULE";
    PermissionId[PermissionId["TICKET_CLINIC_START_CHECKUP"] = 5103] = "TICKET_CLINIC_START_CHECKUP";
    PermissionId[PermissionId["TICKET_CLINIC_UPDATE_TICKET_PROCEDURE_LIST"] = 5104] = "TICKET_CLINIC_UPDATE_TICKET_PROCEDURE_LIST";
    PermissionId[PermissionId["TICKET_CLINIC_UPDATE_TICKET_LABORATORY_LIST"] = 5105] = "TICKET_CLINIC_UPDATE_TICKET_LABORATORY_LIST";
    PermissionId[PermissionId["TICKET_CLINIC_UPDATE_TICKET_RADIOLOGY_LIST"] = 5106] = "TICKET_CLINIC_UPDATE_TICKET_RADIOLOGY_LIST";
    PermissionId[PermissionId["TICKET_CLINIC_UPDATE_TICKET_PRODUCT_CONSUMABLE"] = 5107] = "TICKET_CLINIC_UPDATE_TICKET_PRODUCT_CONSUMABLE";
    PermissionId[PermissionId["TICKET_CLINIC_UPDATE_TICKET_PRODUCT_PRESCRIPTION"] = 5108] = "TICKET_CLINIC_UPDATE_TICKET_PRODUCT_PRESCRIPTION";
    PermissionId[PermissionId["TICKET_CLINIC_UPDATE_TICKET_USER_LIST"] = 5109] = "TICKET_CLINIC_UPDATE_TICKET_USER_LIST";
    PermissionId[PermissionId["TICKET_CLINIC_UPDATE_ITEMS_MONEY"] = 5110] = "TICKET_CLINIC_UPDATE_ITEMS_MONEY";
    PermissionId[PermissionId["TICKET_CLINIC_PREPAYMENT"] = 5111] = "TICKET_CLINIC_PREPAYMENT";
    PermissionId[PermissionId["TICKET_CLINIC_REFUND_OVERPAID"] = 5112] = "TICKET_CLINIC_REFUND_OVERPAID";
    PermissionId[PermissionId["TICKET_CLINIC_PAY_DEBT"] = 5113] = "TICKET_CLINIC_PAY_DEBT";
    PermissionId[PermissionId["TICKET_CLINIC_SEND_PRODUCT"] = 5114] = "TICKET_CLINIC_SEND_PRODUCT";
    PermissionId[PermissionId["TICKET_CLINIC_RETURN_PRODUCT"] = 5115] = "TICKET_CLINIC_RETURN_PRODUCT";
    PermissionId[PermissionId["TICKET_CLINIC_CLOSE"] = 5116] = "TICKET_CLINIC_CLOSE";
    PermissionId[PermissionId["TICKET_CLINIC_REOPEN"] = 5117] = "TICKET_CLINIC_REOPEN";
    PermissionId[PermissionId["TICKET_CLINIC_UPDATE_DIAGNOSIS_BASIC"] = 5150] = "TICKET_CLINIC_UPDATE_DIAGNOSIS_BASIC";
    PermissionId[PermissionId["TICKET_CLINIC_UPDATE_DIAGNOSIS_SPECIAL"] = 5151] = "TICKET_CLINIC_UPDATE_DIAGNOSIS_SPECIAL";
})(PermissionId || (exports.PermissionId = PermissionId = {}));
let Permission = Permission_1 = class Permission {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new Permission_1();
        Object.assign(entity, raw);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => Permission_1.fromRaw(i));
    }
};
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('identity', { name: 'id', generatedIdentity: 'BY DEFAULT' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Permission.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Permission.prototype, "level", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Permission.prototype, "code", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Permission.prototype, "name", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Permission.prototype, "parentId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Permission.prototype, "rootId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Permission.prototype, "pathId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Permission.prototype, "isActive", void 0);
Permission = Permission_1 = __decorate([
    (0, typeorm_1.Entity)('Permission')
], Permission);
exports["default"] = Permission;


/***/ }),
/* 74 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var PrescriptionSample_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
let PrescriptionSample = PrescriptionSample_1 = class PrescriptionSample {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new PrescriptionSample_1();
        Object.assign(entity, raw);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => PrescriptionSample_1.fromRaw(i));
    }
};
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], PrescriptionSample.prototype, "oid", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], PrescriptionSample.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], PrescriptionSample.prototype, "priority", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    __metadata("design:type", String)
], PrescriptionSample.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'text', default: JSON.stringify([]) }),
    __metadata("design:type", String)
], PrescriptionSample.prototype, "medicines", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Array)
], PrescriptionSample.prototype, "medicineList", void 0);
PrescriptionSample = PrescriptionSample_1 = __decorate([
    (0, typeorm_1.Entity)('PrescriptionSample')
], PrescriptionSample);
exports["default"] = PrescriptionSample;


/***/ }),
/* 75 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
const base_entity_1 = __webpack_require__(38);
const variable_1 = __webpack_require__(41);
const customer_entity_1 = __webpack_require__(40);
const distributor_entity_1 = __webpack_require__(46);
const product_entity_1 = __webpack_require__(44);
const receipt_entity_1 = __webpack_require__(47);
const ticket_entity_1 = __webpack_require__(50);
let ProductMovement = class ProductMovement extends base_entity_1.BaseEntity {
};
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ProductMovement.prototype, "productId", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ProductMovement.prototype, "voucherId", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ProductMovement.prototype, "contactId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint' }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof variable_1.VoucherType !== "undefined" && variable_1.VoucherType) === "function" ? _a : Object)
], ProductMovement.prototype, "voucherType", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 0 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ProductMovement.prototype, "isRefund", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        default: 0,
        precision: 10,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ProductMovement.prototype, "openQuantity", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        default: 0,
        precision: 10,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ProductMovement.prototype, "quantity", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'decimal',
        default: 0,
        precision: 10,
        scale: 3,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ProductMovement.prototype, "closeQuantity", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'smallint', default: 1 }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ProductMovement.prototype, "unitRate", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ProductMovement.prototype, "actualPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ProductMovement.prototype, "expectedPrice", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ProductMovement.prototype, "openCostAmount", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ProductMovement.prototype, "costAmount", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: 0,
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ProductMovement.prototype, "closeCostAmount", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'bigint',
        transformer: { to: (value) => value, from: (value) => Number(value) },
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], ProductMovement.prototype, "createdAt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => product_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'productId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_b = typeof product_entity_1.default !== "undefined" && product_entity_1.default) === "function" ? _b : Object)
], ProductMovement.prototype, "product", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => ticket_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'contactId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_c = typeof distributor_entity_1.default !== "undefined" && distributor_entity_1.default) === "function" ? _c : Object)
], ProductMovement.prototype, "distributor", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => receipt_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'voucherId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_d = typeof receipt_entity_1.default !== "undefined" && receipt_entity_1.default) === "function" ? _d : Object)
], ProductMovement.prototype, "receipt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => ticket_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'contactId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_e = typeof customer_entity_1.default !== "undefined" && customer_entity_1.default) === "function" ? _e : Object)
], ProductMovement.prototype, "customer", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.ManyToOne)((type) => ticket_entity_1.default, { createForeignKeyConstraints: false }),
    (0, typeorm_1.JoinColumn)({ name: 'voucherId', referencedColumnName: 'id' }),
    __metadata("design:type", typeof (_f = typeof ticket_entity_1.default !== "undefined" && ticket_entity_1.default) === "function" ? _f : Object)
], ProductMovement.prototype, "ticket", void 0);
ProductMovement = __decorate([
    (0, typeorm_1.Entity)('ProductMovement'),
    (0, typeorm_1.Index)('IDX_ProductMovement__oid_productId_id', ['oid', 'productId', 'id']),
    (0, typeorm_1.Index)('IDX_ProductMovement__oid_contactId_voucherType_id', [
        'oid',
        'contactId',
        'voucherType',
        'id',
    ])
], ProductMovement);
exports["default"] = ProductMovement;


/***/ }),
/* 76 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Warehouse_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
const typeorm_1 = __webpack_require__(33);
let Warehouse = Warehouse_1 = class Warehouse {
    static fromRaw(raw) {
        if (!raw)
            return null;
        const entity = new Warehouse_1();
        Object.assign(entity, raw);
        entity.updatedAt = raw.updatedAt == null ? raw.updatedAt : Number(raw.updatedAt);
        entity.deletedAt = raw.deletedAt == null ? raw.deletedAt : Number(raw.deletedAt);
        return entity;
    }
    static fromRaws(raws) {
        return raws.map((i) => Warehouse_1.fromRaw(i));
    }
};
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], Warehouse.prototype, "oid", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], Warehouse.prototype, "id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),
    __metadata("design:type", String)
], Warehouse.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({
        type: 'bigint',
        default: () => '(EXTRACT(epoch FROM now()) * (1000))',
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    __metadata("design:type", Number)
], Warehouse.prototype, "updatedAt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, typeorm_1.Column)({
        type: 'bigint',
        nullable: true,
        transformer: {
            to: (value) => value,
            from: (value) => (value == null ? value : Number(value)),
        },
    }),
    __metadata("design:type", Number)
], Warehouse.prototype, "deletedAt", void 0);
Warehouse = Warehouse_1 = __decorate([
    (0, typeorm_1.Entity)('Warehouse')
], Warehouse);
exports["default"] = Warehouse;


/***/ }),
/* 77 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PostgreSqlRepository = void 0;
const postgresql_condition_1 = __webpack_require__(78);
class PostgreSqlRepository extends postgresql_condition_1.PostgreSqlCondition {
    constructor(repository) {
        super();
        this.repository = repository;
    }
    async pagination(options) {
        const { limit, page, condition } = options;
        const where = this.getWhereOptions(condition);
        const order = options.sort;
        const relations = options.relation;
        const [data, total] = await this.repository.findAndCount({
            relations,
            relationLoadStrategy: options.relationLoadStrategy || 'query',
            where,
            order,
            take: limit,
            skip: (page - 1) * limit,
        });
        return { total, page, limit, data };
    }
    async findMany(options) {
        const where = this.getWhereOptions(options.condition);
        const order = options.sort;
        const relations = options.relation;
        return await this.repository.find({
            relations,
            relationLoadStrategy: options.relationLoadStrategy || 'query',
            where,
            take: options.limit,
            order,
        });
    }
    async findManyBy(condition) {
        const where = this.getWhereOptions(condition);
        return await this.repository.findBy(where);
    }
    async findManyByIds(ids) {
        if (!ids.length)
            return [];
        return await this.findManyBy({ id: { IN: ids } });
    }
    async findOne(options) {
        const where = this.getWhereOptions(options.condition);
        const order = options.sort;
        const relations = options.relation;
        return await this.repository.findOne({
            relations,
            relationLoadStrategy: options.relationLoadStrategy || 'join',
            where,
            order,
        });
    }
    async findOneBy(condition) {
        const where = this.getWhereOptions(condition);
        return await this.repository.findOneBy(where);
    }
    async findOneById(id) {
        return await this.findOneBy({ id });
    }
    async countBy(condition) {
        const where = this.getWhereOptions(condition);
        const number = await this.repository.countBy(where);
        return number;
    }
    async insertMany(data) {
        if (!data.length)
            return [];
        const insertResult = await this.repository.insert(data);
        return insertResult.identifiers.map((i) => i.id);
    }
    async insertManyFullField(data) {
        if (!data.length)
            return [];
        return this.insertMany(data);
    }
    async insertManyAndReturnRaw(data) {
        if (!data.length)
            return [];
        const insertResult = await this.repository
            .createQueryBuilder()
            .insert()
            .values(data)
            .returning('*')
            .execute();
        return insertResult.raw;
    }
    async insertManyFullFieldAndReturnRaws(data) {
        if (!data.length)
            return [];
        return this.insertManyAndReturnRaw(data);
    }
    async insertOne(data) {
        const insertResult = await this.repository.insert(data);
        return insertResult.identifiers[0].id;
    }
    async insertOneFullField(data) {
        return this.insertOne(data);
    }
    async insertOneAndReturnRaw(data) {
        const insertResult = await this.repository
            .createQueryBuilder()
            .insert()
            .values(data)
            .returning('*')
            .execute();
        return insertResult.raw[0];
    }
    async insertOneFullFieldAndReturnRaw(data) {
        return this.insertOneAndReturnRaw(data);
    }
    async update(condition, data) {
        const where = this.getWhereOptions(condition);
        const updateResult = await this.repository.update(where, data);
        return updateResult.affected;
    }
    async updateAndReturnRaw(condition, data) {
        const where = this.getWhereOptions(condition);
        const updateResult = await this.repository
            .createQueryBuilder()
            .update()
            .where(where)
            .set(data)
            .returning('*')
            .execute();
        return updateResult.raw;
    }
    async delete(condition) {
        const where = this.getWhereOptions(condition);
        const deleteResult = await this.repository.delete(where);
        return deleteResult.affected;
    }
}
exports.PostgreSqlRepository = PostgreSqlRepository;


/***/ }),
/* 78 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PostgreSqlCondition = void 0;
const typeorm_1 = __webpack_require__(33);
const base_condition_1 = __webpack_require__(79);
class PostgreSqlCondition {
    getConditions(conditions = {}) {
        const where = {};
        Object.entries(conditions).forEach(([column, target]) => {
            if (target === undefined)
                return;
            if (target == null)
                return (where[column] = (0, typeorm_1.IsNull)());
            if (['number', 'string', 'boolean'].includes(typeof target)) {
                return (where[column] = target);
            }
            if (typeof target === 'object') {
                if (Object.keys(target).length === 0)
                    return;
                if (typeof target === 'object') {
                    const operators = [];
                    Object.entries(target).forEach(([rule, value]) => {
                        if (value == null)
                            return;
                        if (rule === '>' || rule === 'GT') {
                            return operators.push((0, typeorm_1.MoreThan)(value));
                        }
                        if (rule === '>=' || rule === 'GTE') {
                            return operators.push((0, typeorm_1.MoreThanOrEqual)(value));
                        }
                        if (rule === '<' || rule === 'LT') {
                            return operators.push((0, typeorm_1.LessThan)(value));
                        }
                        if (rule === '<=' || rule === 'LTE') {
                            return operators.push((0, typeorm_1.LessThanOrEqual)(value));
                        }
                        if (rule === '==' || rule === 'EQUAL') {
                            return operators.push((0, typeorm_1.Equal)(value));
                        }
                        if (rule === '!=' || rule === 'NOT') {
                            return operators.push((0, typeorm_1.Not)(value));
                        }
                        if (rule === 'IS_NULL') {
                            if (value === true)
                                return operators.push((0, typeorm_1.IsNull)());
                            if (value === false)
                                return operators.push((0, typeorm_1.Not)((0, typeorm_1.IsNull)()));
                        }
                        if (rule === 'NOT_NULL') {
                            if (value === true)
                                return operators.push((0, typeorm_1.Not)((0, typeorm_1.IsNull)()));
                            if (value === false)
                                return operators.push((0, typeorm_1.IsNull)());
                        }
                        if (rule === 'BETWEEN') {
                            return operators.push((0, typeorm_1.Between)(value[0], value[1]));
                        }
                        if (rule === 'IN') {
                            if (value.length === 0)
                                return operators.push((0, typeorm_1.IsNull)());
                            return operators.push((0, typeorm_1.In)(value));
                        }
                        if (rule === 'LIKE') {
                            const textLike = `%${(0, base_condition_1.escapeSearch)(value)}%`;
                            return operators.push((0, typeorm_1.Like)(textLike));
                        }
                        if (rule === 'RAW_QUERY') {
                            return operators.push((0, typeorm_1.Raw)((alias) => `(${value})`));
                        }
                    });
                    if (operators.length === 1) {
                        where[column] = operators[0];
                    }
                    else if (operators.length > 1) {
                        where[column] = (0, typeorm_1.And)(...operators);
                    }
                }
            }
        });
        return where;
    }
    getWhereOptions(condition = {}) {
        if (Object.keys(condition).length === 0)
            return {};
        const { $OR } = condition, otherCondition = __rest(condition, ["$OR"]);
        if ($OR && $OR.length) {
            const conditionOr = [];
            $OR.forEach((i) => {
                if (!Object.keys(i).length)
                    return;
                conditionOr.push(this.getWhereOptions(Object.assign(Object.assign({}, otherCondition), i)));
            });
            conditionOr.flat().filter((i) => Object.keys(i).length);
            if (conditionOr.length === 0) {
                return this.getConditions(otherCondition);
            }
            else if (conditionOr.length === 1) {
                return conditionOr[0];
            }
            else {
                return conditionOr;
            }
        }
        else {
            return this.getConditions(otherCondition);
        }
    }
}
exports.PostgreSqlCondition = PostgreSqlCondition;


/***/ }),
/* 79 */
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.escapeSearch = void 0;
const escapeSearch = (str = '') => {
    return str.replace(/[?%\\_]/gi, (x) => '\\' + x);
};
exports.escapeSearch = escapeSearch;


/***/ }),
/* 80 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PermissionRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const permission_entity_1 = __webpack_require__(73);
const postgresql_repository_1 = __webpack_require__(77);
let PermissionRepository = class PermissionRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(permissionRepository) {
        super(permissionRepository);
        this.permissionRepository = permissionRepository;
    }
    async upsert(data) {
        const insertResult = await this.permissionRepository
            .createQueryBuilder()
            .insert()
            .into(permission_entity_1.default)
            .values(data)
            .orUpdate(['level', 'code', 'name', 'parentId', 'rootId', 'pathId', 'isActive'], ['id'])
            .execute();
        return { idsEffect: insertResult.identifiers.map((i) => i.id) };
    }
};
exports.PermissionRepository = PermissionRepository;
exports.PermissionRepository = PermissionRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectRepository)(permission_entity_1.default)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _a : Object])
], PermissionRepository);


/***/ }),
/* 81 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoleRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let RoleRepository = class RoleRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(roleRepository) {
        super(roleRepository);
        this.roleRepository = roleRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.Role.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.Role.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.Role.fromRaws(raws);
    }
};
exports.RoleRepository = RoleRepository;
exports.RoleRepository = RoleRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectRepository)(entities_1.Role)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _a : Object])
], RoleRepository);


/***/ }),
/* 82 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SettingRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let SettingRepository = class SettingRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(settingRepository) {
        super(settingRepository);
        this.settingRepository = settingRepository;
    }
    async upsertSetting(options) {
        const { oid, key, data } = options;
        const dto = this.settingRepository.create({ oid, key, data });
        return await this.settingRepository
            .createQueryBuilder()
            .insert()
            .into(entities_1.Setting)
            .values(dto)
            .orUpdate(['data'], ['oid', 'key'])
            .execute();
    }
};
exports.SettingRepository = SettingRepository;
exports.SettingRepository = SettingRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectRepository)(entities_1.Setting)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _a : Object])
], SettingRepository);


/***/ }),
/* 83 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UserRoleRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const user_role_entity_1 = __webpack_require__(68);
const postgresql_repository_1 = __webpack_require__(77);
let UserRoleRepository = class UserRoleRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(userRoleRepository) {
        super(userRoleRepository);
        this.userRoleRepository = userRoleRepository;
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return user_role_entity_1.default.fromRaw(raw);
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return user_role_entity_1.default.fromRaw(raw);
    }
    async insertManyFullFieldAndReturnEntity(data) {
        const raws = await this.insertManyAndReturnRaw(data);
        return user_role_entity_1.default.fromRaws(raws);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return user_role_entity_1.default.fromRaws(raws);
    }
};
exports.UserRoleRepository = UserRoleRepository;
exports.UserRoleRepository = UserRoleRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectRepository)(user_role_entity_1.default)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _a : Object])
], UserRoleRepository);


/***/ }),
/* 84 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UserRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let UserRepository = class UserRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(userRepository) {
        super(userRepository);
        this.userRepository = userRepository;
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.User.fromRaw(raw);
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.User.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.User.fromRaws(raws);
    }
};
exports.UserRepository = UserRepository;
exports.UserRepository = UserRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectRepository)(entities_1.User)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _a : Object])
], UserRepository);


/***/ }),
/* 85 */
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mergeObject = exports.checkDuplicate = exports.arrayToKeyArray = exports.arrayToKeyValue = exports.uniqueArray = void 0;
const uniqueArray = (array) => {
    return Array.from(new Set(array));
};
exports.uniqueArray = uniqueArray;
const arrayToKeyValue = (array, property) => {
    const object = {};
    array.forEach((item) => {
        const key = item[property].toString();
        object[key] = item;
    });
    return object;
};
exports.arrayToKeyValue = arrayToKeyValue;
const arrayToKeyArray = (array, property) => {
    const object = {};
    array.forEach((item) => {
        const key = item[property].toString();
        if (!object[key])
            object[key] = [];
        object[key].push(item);
    });
    return object;
};
exports.arrayToKeyArray = arrayToKeyArray;
const checkDuplicate = (array, property) => {
    const arrayProperty = array.map((item) => item[property]);
    const arrayPropertyUnique = Array.from(new Set(arrayProperty));
    return array.length !== arrayPropertyUnique.length;
};
exports.checkDuplicate = checkDuplicate;
const mergeObject = (...params) => {
    const mergeTwoObject = (source, target) => {
        for (const key in target) {
            if (target[key] === undefined)
                continue;
            if (typeof target[key] !== 'object'
                || Array.isArray(target[key])
                || target[key] instanceof Date) {
                source[key] = target[key];
            }
            else {
                if (typeof source[key] !== 'object') {
                    source[key] = {};
                }
                mergeTwoObject(source[key], target[key]);
            }
        }
    };
    for (let i = 1; i < params.length; i++) {
        mergeTwoObject(params[0], params[i]);
    }
};
exports.mergeObject = mergeObject;


/***/ }),
/* 86 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CacheTokenService = void 0;
const common_1 = __webpack_require__(3);
const redis_service_1 = __webpack_require__(28);
let CacheTokenService = class CacheTokenService {
    constructor(redisService) {
        this.redisService = redisService;
    }
    getKey(data) {
        return `TOKEN_${data.oid}_${data.uid}`;
    }
    async getTokenListByKey(key) {
        const value = await this.redisService.get(key);
        const object = JSON.parse(value || '[]');
        return object;
    }
    async setTokenList(key, tokenList) {
        const tokenListRemoveExpires = tokenList.filter((i) => i.refreshExp > Date.now());
        const value = JSON.stringify(tokenListRemoveExpires);
        await this.redisService.set(key, value);
    }
    async addAccessToken(data) {
        const key = this.getKey(data);
        const tokenList = await this.getTokenListByKey(key);
        const tokenListFix = tokenList.filter((i) => i.refreshExp !== data.refreshExp);
        tokenListFix.push(Object.assign(Object.assign({}, data), { online: Date.now() }));
        await this.setTokenList(key, tokenListFix);
    }
    async updateAccessToken(data) {
        const key = this.getKey(data);
        const tokenList = await this.getTokenListByKey(key);
        const currentToken = tokenList.find((i) => i.refreshExp === data.refreshExp);
        if (currentToken) {
            Object.assign(currentToken, Object.assign(Object.assign({}, data), { online: Date.now() }));
        }
        else {
            tokenList.push(Object.assign(Object.assign({}, data), { online: Date.now() }));
        }
        await this.setTokenList(key, tokenList);
    }
    async removeRefreshToken(options) {
        const key = this.getKey(options);
        const tokenList = await this.getTokenListByKey(key);
        const tokenListFix = tokenList.filter((i) => i.refreshExp !== options.refreshExp);
        await this.setTokenList(key, tokenListFix);
    }
    async removeAllRefreshToken(options) {
        const key = this.getKey(options);
        await this.setTokenList(key, []);
    }
    async checkAccessToken(options) {
        const key = this.getKey(options);
        const tokenList = await this.getTokenListByKey(key);
        const token = tokenList.find((i) => i.accessExp === options.accessExp);
        if (!token)
            return false;
        token.online = Date.now();
        await this.setTokenList(key, tokenList);
        return true;
    }
    async checkRefreshToken(options) {
        const key = this.getKey(options);
        const tokenList = await this.getTokenListByKey(key);
        return tokenList.some((i) => i.refreshExp === options.refreshExp);
    }
    async getTokenList(options) {
        const key = this.getKey(options);
        return this.getTokenListByKey(key);
    }
    async removeAllExcludeRoot() {
        const keys = await this.redisService.getKeys('TOKEN_*');
        const keyRoot = this.getKey({ oid: 1, uid: 1 });
        for (let i = 0; i < keys.length; i++) {
            if (keys[i] === keyRoot)
                continue;
            await this.redisService.del(keys[i]);
        }
    }
};
exports.CacheTokenService = CacheTokenService;
exports.CacheTokenService = CacheTokenService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof redis_service_1.RedisService !== "undefined" && redis_service_1.RedisService) === "function" ? _a : Object])
], CacheTokenService);


/***/ }),
/* 87 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PermissionGuard = exports.HasPermissionOr = exports.HasPermission = exports.HAS_PERMISSION_OR = exports.HAS_PERMISSION = void 0;
const common_1 = __webpack_require__(3);
const core_1 = __webpack_require__(4);
const cache_data_service_1 = __webpack_require__(30);
const exception_filter_1 = __webpack_require__(9);
exports.HAS_PERMISSION = 'HAS_PERMISSION';
exports.HAS_PERMISSION_OR = 'HAS_PERMISSION_OR';
const HasPermission = (...permissionIds) => {
    return (0, common_1.SetMetadata)(exports.HAS_PERMISSION, permissionIds);
};
exports.HasPermission = HasPermission;
const HasPermissionOr = (...permissionIds) => {
    return (0, common_1.SetMetadata)(exports.HAS_PERMISSION_OR, permissionIds);
};
exports.HasPermissionOr = HasPermissionOr;
let PermissionGuard = class PermissionGuard {
    constructor(reflector, cacheDataService) {
        this.reflector = reflector;
        this.cacheDataService = cacheDataService;
    }
    async canActivate(context) {
        let permissionIdsAnd = this.reflector.getAllAndOverride(exports.HAS_PERMISSION, [
            context.getHandler(),
            context.getClass(),
        ]);
        let permissionIdsOr = this.reflector.getAllAndOverride(exports.HAS_PERMISSION_OR, [
            context.getHandler(),
            context.getClass(),
        ]);
        if (!permissionIdsAnd)
            permissionIdsAnd = [];
        if (!permissionIdsOr)
            permissionIdsOr = [];
        if (!permissionIdsAnd.length && !permissionIdsOr.length)
            return true;
        const request = context.switchToHttp().getRequest();
        const requestExternal = request.raw;
        const { external } = requestExternal;
        if (external.error) {
            throw new exception_filter_1.BusinessException(external.error, {}, common_1.HttpStatus.UNAUTHORIZED);
        }
        if (!external.uid
            || !external.oid
            || !external.user
            || !external.organization) {
            throw new exception_filter_1.BusinessException('common.AccountRequired', {}, common_1.HttpStatus.UNAUTHORIZED);
        }
        if (!!external.user.deletedAt || !external.organization.isActive) {
            throw new exception_filter_1.BusinessException('common.AccountInactive', {}, common_1.HttpStatus.UNAUTHORIZED);
        }
        if (external.oid === 1)
            return true;
        const permissionMap = await this.cacheDataService.getPermissionAllMap();
        const checkPermissionId = (permissionId) => {
            const permission = permissionMap[permissionId];
            const pathIdArr = permission.pathId.split('.').map((i) => Number(i));
            for (let i = 0; i < pathIdArr.length; i++) {
                const id = pathIdArr[i];
                const curPermission = permissionMap[id];
                if (!curPermission.isActive) {
                    return false;
                }
            }
            const organizationPermissionIds = JSON.parse(external.organization.permissionIds || '[]');
            if (!organizationPermissionIds.includes(permission.rootId)) {
                return false;
            }
            if (external.user.isAdmin)
                return true;
            return pathIdArr.some((pid) => external.permissionIds.includes(pid));
        };
        if (permissionIdsAnd.length) {
            const checkAnd = permissionIdsAnd.every(checkPermissionId);
            if (!checkAnd) {
                const permissionNameArr = permissionIdsAnd.map((i) => permissionMap[i].name).join(', ');
                throw new exception_filter_1.BusinessException('common.ForbiddenPermission', { permission: permissionNameArr }, common_1.HttpStatus.FORBIDDEN);
            }
        }
        if (permissionIdsOr.length) {
            const checkOr = permissionIdsOr.some(checkPermissionId);
            if (!checkOr) {
                const permissionNameArr = permissionIdsOr.map((i) => permissionMap[i].name).join(', ');
                throw new exception_filter_1.BusinessException('common.ForbiddenPermission', { permission: permissionNameArr }, common_1.HttpStatus.FORBIDDEN);
            }
        }
        return true;
    }
};
exports.PermissionGuard = PermissionGuard;
exports.PermissionGuard = PermissionGuard = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof core_1.Reflector !== "undefined" && core_1.Reflector) === "function" ? _a : Object, typeof (_b = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _b : Object])
], PermissionGuard);


/***/ }),
/* 88 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.JwtExtendModule = void 0;
const common_1 = __webpack_require__(3);
const config_1 = __webpack_require__(21);
const jwt_1 = __webpack_require__(89);
const jwt_extend_service_1 = __webpack_require__(90);
const jwt_config_1 = __webpack_require__(91);
let JwtExtendModule = class JwtExtendModule {
};
exports.JwtExtendModule = JwtExtendModule;
exports.JwtExtendModule = JwtExtendModule = __decorate([
    (0, common_1.Module)({
        imports: [config_1.ConfigModule.forFeature(jwt_config_1.JwtConfig), jwt_1.JwtModule],
        providers: [jwt_extend_service_1.JwtExtendService],
        exports: [jwt_extend_service_1.JwtExtendService],
    })
], JwtExtendModule);


/***/ }),
/* 89 */
/***/ ((module) => {

module.exports = require("@nestjs/jwt");

/***/ }),
/* 90 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.JwtExtendService = void 0;
const common_1 = __webpack_require__(3);
const config_1 = __webpack_require__(21);
const jwt_1 = __webpack_require__(89);
const exception_filter_1 = __webpack_require__(9);
const jwt_config_1 = __webpack_require__(91);
let JwtExtendService = class JwtExtendService {
    constructor(jwtConfig, jwtService) {
        this.jwtConfig = jwtConfig;
        this.jwtService = jwtService;
    }
    createAccessToken(user, ip) {
        const userPayload = {
            oid: user.organization.id,
            uid: user.id,
        };
        const exp = Math.floor((Date.now() + this.jwtConfig.accessTime) / 1000);
        const accessToken = this.jwtService.sign({ exp, data: userPayload }, { secret: this.jwtConfig.accessKey });
        return { accessToken, accessExp: exp * 1000 };
    }
    createRefreshToken(user, ip) {
        const userPayload = {
            oid: user.organization.id,
            uid: user.id,
        };
        const exp = Math.floor((Date.now() + this.jwtConfig.refreshTime) / 1000);
        const refreshToken = this.jwtService.sign({ exp, data: userPayload }, { secret: this.jwtConfig.refreshKey });
        return { refreshToken, refreshExp: exp * 1000 };
    }
    createTokenFromUser(user, ip) {
        const { accessToken, accessExp } = this.createAccessToken(user, ip);
        const { refreshToken, refreshExp } = this.createRefreshToken(user, ip);
        return { accessToken, refreshToken, accessExp, refreshExp };
    }
    verifyAccessToken(accessToken, ip) {
        try {
            const jwtPayload = this.jwtService.verify(accessToken, {
                secret: this.jwtConfig.accessKey,
            });
            const data = jwtPayload.data;
            return {
                data: jwtPayload.data,
                exp: jwtPayload.exp * 1000,
                iat: jwtPayload.iat * 1000,
            };
        }
        catch (error) {
            if (error.name === 'TokenExpiredError') {
                throw new exception_filter_1.BusinessException('error.Token.AccessTokenExpired', {}, common_1.HttpStatus.UNAUTHORIZED);
            }
            else if (error.name === 'JsonWebTokenError') {
                throw new exception_filter_1.BusinessException('error.Token.Invalid', {}, common_1.HttpStatus.UNAUTHORIZED);
            }
            throw error;
        }
    }
    verifyRefreshToken(refreshToken, ip) {
        try {
            const jwtPayload = this.jwtService.verify(refreshToken, {
                secret: this.jwtConfig.refreshKey,
            });
            const data = jwtPayload.data;
            return {
                data: jwtPayload.data,
                exp: jwtPayload.exp * 1000,
                iat: jwtPayload.iat * 1000,
            };
        }
        catch (error) {
            if (error.name === 'TokenExpiredError') {
                throw new exception_filter_1.BusinessException('error.Token.RefreshTokenExpired', {}, common_1.HttpStatus.UNAUTHORIZED);
            }
            else if (error.name === 'JsonWebTokenError') {
                throw new exception_filter_1.BusinessException('error.Token.Invalid', {}, common_1.HttpStatus.UNAUTHORIZED);
            }
            throw error;
        }
    }
    decodeRefreshToken(refreshToken) {
        const jwtPayload = this.jwtService.decode(refreshToken);
        return {
            data: jwtPayload.data,
            exp: jwtPayload.exp * 1000,
            iat: jwtPayload.iat * 1000,
        };
    }
};
exports.JwtExtendService = JwtExtendService;
exports.JwtExtendService = JwtExtendService = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, common_1.Inject)(jwt_config_1.JwtConfig.KEY)),
    __metadata("design:paramtypes", [typeof (_a = typeof config_1.ConfigType !== "undefined" && config_1.ConfigType) === "function" ? _a : Object, typeof (_b = typeof jwt_1.JwtService !== "undefined" && jwt_1.JwtService) === "function" ? _b : Object])
], JwtExtendService);


/***/ }),
/* 91 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.JwtConfig = void 0;
const config_1 = __webpack_require__(21);
exports.JwtConfig = (0, config_1.registerAs)('jwt', () => ({
    accessKey: process.env.JWT_ACCESS_KEY,
    refreshKey: process.env.JWT_REFRESH_KEY,
    accessTime: Number(process.env.JWT_ACCESS_TIME),
    refreshTime: Number(process.env.JWT_REFRESH_TIME),
}));


/***/ }),
/* 92 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DetectClientMiddleware = void 0;
const common_1 = __webpack_require__(3);
const request_ip_1 = __webpack_require__(8);
const cache_data_service_1 = __webpack_require__(30);
const cache_token_service_1 = __webpack_require__(86);
const jwt_extend_service_1 = __webpack_require__(90);
let DetectClientMiddleware = class DetectClientMiddleware {
    constructor(jwtExtendService, cacheTokenService, cacheDataService) {
        this.jwtExtendService = jwtExtendService;
        this.cacheTokenService = cacheTokenService;
        this.cacheDataService = cacheDataService;
    }
    async use(request, response, next) {
        if (request.method === 'OPTIONS')
            return next();
        const os = request.headers['x-os'];
        const browser = request.headers['x-browser'];
        const mobile = request.headers['x-mobile'];
        const clientId = request.headers['x-client-id'];
        const authorization = request.headers.authorization || '';
        const ip = (0, request_ip_1.getClientIp)(request);
        const dataExternal = {
            clientId,
            ip,
            os,
            browser,
            mobile: mobile === '1' ? 1 : 0,
            uid: null,
            oid: null,
            user: null,
            organization: null,
            permissionIds: [],
            error: null,
        };
        const [, accessToken] = authorization.split(' ');
        if (accessToken) {
            try {
                const decode = this.jwtExtendService.verifyAccessToken(accessToken, ip);
                const { oid, uid } = decode.data;
                dataExternal.oid = oid;
                dataExternal.uid = uid;
                const checkTokenCache = await this.cacheTokenService.checkAccessToken({
                    oid,
                    uid,
                    accessExp: decode.exp,
                });
                if (checkTokenCache) {
                    dataExternal.user = await this.cacheDataService.getUser(oid, uid);
                    dataExternal.organization = await this.cacheDataService.getOrganization(oid);
                    dataExternal.permissionIds = await this.cacheDataService.getPermissionIdsByUserId(oid, uid);
                }
                else {
                    dataExternal.error = 'error.Token.AccessTokenNoCache';
                    if (process.env.NODE_ENV !== 'production') {
                    }
                }
            }
            catch (error) {
                dataExternal.error = error.message;
            }
        }
        const requestExternal = request;
        requestExternal.external = dataExternal;
        return next();
    }
};
exports.DetectClientMiddleware = DetectClientMiddleware;
exports.DetectClientMiddleware = DetectClientMiddleware = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof jwt_extend_service_1.JwtExtendService !== "undefined" && jwt_extend_service_1.JwtExtendService) === "function" ? _a : Object, typeof (_b = typeof cache_token_service_1.CacheTokenService !== "undefined" && cache_token_service_1.CacheTokenService) === "function" ? _b : Object, typeof (_c = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _c : Object])
], DetectClientMiddleware);


/***/ }),
/* 93 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RepositoryModule = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const entities_1 = __webpack_require__(36);
const ticket_expense_entity_1 = __webpack_require__(53);
const ticket_surcharge_entity_1 = __webpack_require__(65);
const user_role_entity_1 = __webpack_require__(68);
const appointment_repository_1 = __webpack_require__(94);
const bat_movement_repository_1 = __webpack_require__(95);
const batch_repository_1 = __webpack_require__(96);
const customer_payment_repository_1 = __webpack_require__(97);
const customer_source_repository_1 = __webpack_require__(99);
const customer_repository_1 = __webpack_require__(100);
const distributor_payment_repository_1 = __webpack_require__(101);
const distributor_repository_1 = __webpack_require__(102);
const image_repository_1 = __webpack_require__(103);
const laboratory_group_repository_1 = __webpack_require__(104);
const laboratory_kit_repository_1 = __webpack_require__(105);
const laboratory_repository_1 = __webpack_require__(106);
const organization_repository_1 = __webpack_require__(34);
const permission_repository_1 = __webpack_require__(80);
const prescription_sample_repository_1 = __webpack_require__(107);
const print_html_repository_1 = __webpack_require__(108);
const procedure_group_repository_1 = __webpack_require__(109);
const procedure_repository_1 = __webpack_require__(110);
const product_group_repository_1 = __webpack_require__(111);
const product_movement_repository_1 = __webpack_require__(112);
const product_repository_1 = __webpack_require__(113);
const radiology_group_repository_1 = __webpack_require__(114);
const radiology_repository_1 = __webpack_require__(115);
const receipt_item_repository_1 = __webpack_require__(116);
const receipt_cancel_1 = __webpack_require__(117);
const receipt_draft_1 = __webpack_require__(118);
const receipt_pay_debt_1 = __webpack_require__(120);
const receipt_prepayment_1 = __webpack_require__(121);
const receipt_refund_prepayment_1 = __webpack_require__(122);
const receipt_send_product_and_payment_1 = __webpack_require__(123);
const receipt_repository_1 = __webpack_require__(124);
const role_repository_1 = __webpack_require__(81);
const setting_repository_1 = __webpack_require__(82);
const statistic_receipt_repository_1 = __webpack_require__(125);
const statistic_repository_1 = __webpack_require__(126);
const ticket_attribute_repository_1 = __webpack_require__(127);
const ticket_laboratory_repository_1 = __webpack_require__(128);
const ticket_procedure_repository_1 = __webpack_require__(129);
const ticket_product_repository_1 = __webpack_require__(130);
const ticket_radiology_repository_1 = __webpack_require__(131);
const ticket_user_repository_1 = __webpack_require__(132);
const ticket_pay_debt_1 = __webpack_require__(133);
const ticket_payment_and_close_1 = __webpack_require__(134);
const ticket_prepayment_1 = __webpack_require__(135);
const ticket_send_product_1 = __webpack_require__(136);
const ticket_statistic_repository_1 = __webpack_require__(137);
const ticket_repository_1 = __webpack_require__(138);
const ticket_clinic_refund_overpaid_1 = __webpack_require__(139);
const ticket_clinic_reopen_1 = __webpack_require__(140);
const ticket_clinic_return_product_1 = __webpack_require__(141);
const ticket_clinic_update_items_money_1 = __webpack_require__(142);
const ticket_clinic_update_ticket_laboratory_list_1 = __webpack_require__(143);
const ticket_clinic_update_ticket_procedure_list_1 = __webpack_require__(144);
const ticket_clinic_update_ticket_product_list_1 = __webpack_require__(145);
const ticket_clinic_update_ticket_radiology_list_1 = __webpack_require__(146);
const ticket_order_cancel_1 = __webpack_require__(147);
const ticket_order_debt_success_update_1 = __webpack_require__(148);
const ticket_order_draft_approved_update_1 = __webpack_require__(149);
const ticket_order_refund_overpaid_1 = __webpack_require__(150);
const ticket_order_return_product_list_1 = __webpack_require__(151);
const ticket_order_draft_1 = __webpack_require__(152);
const user_role_repository_1 = __webpack_require__(83);
const user_repository_1 = __webpack_require__(84);
const warehouse_repository_1 = __webpack_require__(153);
let RepositoryModule = class RepositoryModule {
};
exports.RepositoryModule = RepositoryModule;
exports.RepositoryModule = RepositoryModule = __decorate([
    (0, common_1.Global)(),
    (0, common_1.Module)({
        imports: [
            typeorm_1.TypeOrmModule.forFeature([
                entities_1.Appointment,
                entities_1.Batch,
                entities_1.BatchMovement,
                entities_1.Customer,
                entities_1.CustomerPayment,
                entities_1.CustomerSource,
                entities_1.Distributor,
                entities_1.DistributorPayment,
                entities_1.Image,
                entities_1.Organization,
                entities_1.Permission,
                entities_1.Procedure,
                entities_1.Product,
                entities_1.ProductMovement,
                entities_1.Laboratory,
                entities_1.LaboratoryKit,
                entities_1.LaboratoryGroup,
                entities_1.Radiology,
                entities_1.RadiologyGroup,
                entities_1.PrescriptionSample,
                entities_1.Receipt,
                entities_1.ReceiptItem,
                entities_1.Role,
                entities_1.Setting,
                entities_1.User,
                user_role_entity_1.default,
                entities_1.Ticket,
                entities_1.TicketAttribute,
                ticket_expense_entity_1.default,
                ticket_surcharge_entity_1.default,
                entities_1.TicketProcedure,
                entities_1.TicketProduct,
                entities_1.TicketRadiology,
                entities_1.TicketLaboratory,
                entities_1.TicketUser,
                entities_1.Warehouse,
                entities_1.ProductGroup,
                entities_1.ProcedureGroup,
                entities_1.PrintHtml,
            ]),
        ],
        providers: [
            appointment_repository_1.AppointmentRepository,
            batch_repository_1.BatchRepository,
            bat_movement_repository_1.BatchMovementRepository,
            customer_repository_1.CustomerRepository,
            customer_payment_repository_1.CustomerPaymentRepository,
            customer_source_repository_1.CustomerSourceRepository,
            distributor_repository_1.DistributorRepository,
            distributor_payment_repository_1.DistributorPaymentRepository,
            image_repository_1.ImageRepository,
            organization_repository_1.OrganizationRepository,
            permission_repository_1.PermissionRepository,
            procedure_repository_1.ProcedureRepository,
            product_repository_1.ProductRepository,
            product_movement_repository_1.ProductMovementRepository,
            laboratory_repository_1.LaboratoryRepository,
            laboratory_group_repository_1.LaboratoryGroupRepository,
            laboratory_kit_repository_1.LaboratoryKitRepository,
            radiology_repository_1.RadiologyRepository,
            radiology_group_repository_1.RadiologyGroupRepository,
            prescription_sample_repository_1.PrescriptionSampleRepository,
            receipt_draft_1.ReceiptDraft,
            receipt_pay_debt_1.ReceiptPayDebt,
            receipt_prepayment_1.ReceiptPrepayment,
            receipt_refund_prepayment_1.ReceiptRefundPrepayment,
            receipt_cancel_1.ReceiptCancel,
            receipt_send_product_and_payment_1.ReceiptSendProductAndPayment,
            receipt_repository_1.ReceiptRepository,
            receipt_item_repository_1.ReceiptItemRepository,
            role_repository_1.RoleRepository,
            setting_repository_1.SettingRepository,
            user_repository_1.UserRepository,
            user_role_repository_1.UserRoleRepository,
            warehouse_repository_1.WarehouseRepository,
            product_group_repository_1.ProductGroupRepository,
            procedure_group_repository_1.ProcedureGroupRepository,
            print_html_repository_1.PrintHtmlRepository,
            ticket_clinic_update_ticket_procedure_list_1.TicketClinicUpdateTicketProcedureList,
            ticket_clinic_update_ticket_laboratory_list_1.TicketClinicUpdateTicketLaboratoryList,
            ticket_clinic_update_ticket_radiology_list_1.TicketClinicUpdateTicketRadiologyList,
            ticket_clinic_update_ticket_product_list_1.TicketClinicUpdateTicketProductList,
            ticket_clinic_update_items_money_1.TicketClinicUpdateItemsMoney,
            ticket_clinic_return_product_1.TicketClinicReturnProduct,
            ticket_clinic_refund_overpaid_1.TicketClinicRefundOverpaid,
            ticket_clinic_reopen_1.TicketClinicReopen,
            ticket_payment_and_close_1.TicketPaymentAndClose,
            ticket_pay_debt_1.TicketPayDebt,
            ticket_prepayment_1.TicketPrepayment,
            ticket_send_product_1.TicketSendProduct,
            ticket_order_draft_1.TicketOrderDraft,
            ticket_order_draft_approved_update_1.TicketOrderDraftApprovedUpdate,
            ticket_order_debt_success_update_1.TicketOrderDebtSuccessUpdate,
            ticket_order_return_product_list_1.TicketOrderReturnProductList,
            ticket_order_refund_overpaid_1.TicketOrderRefundOverpaid,
            ticket_order_cancel_1.TicketOrderCancel,
            ticket_repository_1.TicketRepository,
            ticket_statistic_repository_1.TicketStatisticRepository,
            ticket_attribute_repository_1.TicketAttributeRepository,
            ticket_procedure_repository_1.TicketProcedureRepository,
            ticket_product_repository_1.TicketProductRepository,
            ticket_radiology_repository_1.TicketRadiologyRepository,
            ticket_laboratory_repository_1.TicketLaboratoryRepository,
            ticket_user_repository_1.TicketUserRepository,
            statistic_repository_1.StatisticRepository,
            statistic_receipt_repository_1.StatisticReceiptRepository,
        ],
        exports: [
            appointment_repository_1.AppointmentRepository,
            batch_repository_1.BatchRepository,
            bat_movement_repository_1.BatchMovementRepository,
            customer_repository_1.CustomerRepository,
            customer_payment_repository_1.CustomerPaymentRepository,
            customer_source_repository_1.CustomerSourceRepository,
            distributor_repository_1.DistributorRepository,
            distributor_payment_repository_1.DistributorPaymentRepository,
            image_repository_1.ImageRepository,
            organization_repository_1.OrganizationRepository,
            permission_repository_1.PermissionRepository,
            product_repository_1.ProductRepository,
            procedure_repository_1.ProcedureRepository,
            product_movement_repository_1.ProductMovementRepository,
            laboratory_repository_1.LaboratoryRepository,
            laboratory_group_repository_1.LaboratoryGroupRepository,
            laboratory_kit_repository_1.LaboratoryKitRepository,
            radiology_repository_1.RadiologyRepository,
            radiology_group_repository_1.RadiologyGroupRepository,
            prescription_sample_repository_1.PrescriptionSampleRepository,
            receipt_repository_1.ReceiptRepository,
            role_repository_1.RoleRepository,
            receipt_draft_1.ReceiptDraft,
            receipt_pay_debt_1.ReceiptPayDebt,
            receipt_prepayment_1.ReceiptPrepayment,
            receipt_refund_prepayment_1.ReceiptRefundPrepayment,
            receipt_cancel_1.ReceiptCancel,
            receipt_send_product_and_payment_1.ReceiptSendProductAndPayment,
            receipt_repository_1.ReceiptRepository,
            receipt_item_repository_1.ReceiptItemRepository,
            setting_repository_1.SettingRepository,
            user_repository_1.UserRepository,
            user_role_repository_1.UserRoleRepository,
            warehouse_repository_1.WarehouseRepository,
            product_group_repository_1.ProductGroupRepository,
            procedure_group_repository_1.ProcedureGroupRepository,
            print_html_repository_1.PrintHtmlRepository,
            ticket_clinic_update_ticket_procedure_list_1.TicketClinicUpdateTicketProcedureList,
            ticket_clinic_update_ticket_laboratory_list_1.TicketClinicUpdateTicketLaboratoryList,
            ticket_clinic_update_ticket_radiology_list_1.TicketClinicUpdateTicketRadiologyList,
            ticket_clinic_update_ticket_product_list_1.TicketClinicUpdateTicketProductList,
            ticket_clinic_update_items_money_1.TicketClinicUpdateItemsMoney,
            ticket_clinic_return_product_1.TicketClinicReturnProduct,
            ticket_clinic_refund_overpaid_1.TicketClinicRefundOverpaid,
            ticket_clinic_reopen_1.TicketClinicReopen,
            ticket_payment_and_close_1.TicketPaymentAndClose,
            ticket_pay_debt_1.TicketPayDebt,
            ticket_prepayment_1.TicketPrepayment,
            ticket_send_product_1.TicketSendProduct,
            ticket_order_draft_1.TicketOrderDraft,
            ticket_order_draft_approved_update_1.TicketOrderDraftApprovedUpdate,
            ticket_order_debt_success_update_1.TicketOrderDebtSuccessUpdate,
            ticket_order_refund_overpaid_1.TicketOrderRefundOverpaid,
            ticket_order_return_product_list_1.TicketOrderReturnProductList,
            ticket_order_cancel_1.TicketOrderCancel,
            ticket_repository_1.TicketRepository,
            ticket_statistic_repository_1.TicketStatisticRepository,
            ticket_attribute_repository_1.TicketAttributeRepository,
            ticket_procedure_repository_1.TicketProcedureRepository,
            ticket_product_repository_1.TicketProductRepository,
            ticket_radiology_repository_1.TicketRadiologyRepository,
            ticket_laboratory_repository_1.TicketLaboratoryRepository,
            ticket_user_repository_1.TicketUserRepository,
            statistic_repository_1.StatisticRepository,
            statistic_receipt_repository_1.StatisticReceiptRepository,
        ],
    })
], RepositoryModule);


/***/ }),
/* 94 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AppointmentRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let AppointmentRepository = class AppointmentRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, appointmentRepository) {
        super(appointmentRepository);
        this.dataSource = dataSource;
        this.appointmentRepository = appointmentRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.Appointment.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.Appointment.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.Appointment.fromRaws(raws);
    }
};
exports.AppointmentRepository = AppointmentRepository;
exports.AppointmentRepository = AppointmentRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.Appointment)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], AppointmentRepository);


/***/ }),
/* 95 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BatchMovementRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let BatchMovementRepository = class BatchMovementRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(manager, batchMovementRepository) {
        super(batchMovementRepository);
        this.manager = manager;
        this.batchMovementRepository = batchMovementRepository;
    }
    async queryOne(condition, relation) {
        var _a, _b;
        let query = this.manager
            .createQueryBuilder(entities_1.BatchMovement, 'productMovement')
            .where('productMovement.oid = :oid', { oid: condition.oid });
        if (condition === null || condition === void 0 ? void 0 : condition.productId) {
            query = query.andWhere('productMovement.productId = :productId', {
                productId: condition.productId,
            });
        }
        if (condition === null || condition === void 0 ? void 0 : condition.batchId) {
            query = query.andWhere('productMovement.batchId = :batchId', {
                batchId: condition.batchId,
            });
        }
        if (relation === null || relation === void 0 ? void 0 : relation.receipt) {
            query = query.leftJoinAndSelect('productMovement.receipt', 'receipt', 'productMovement.voucherType = :typeReceipt', { typeReceipt: variable_1.VoucherType.Receipt });
            if ((_a = relation === null || relation === void 0 ? void 0 : relation.receipt) === null || _a === void 0 ? void 0 : _a.distributor) {
                query = query.leftJoinAndSelect('receipt.distributor', 'distributor');
            }
        }
        if (relation === null || relation === void 0 ? void 0 : relation.ticket) {
            query = query.leftJoinAndSelect('productMovement.ticket', 'ticket', 'productMovement.voucherType = :typeInvoice', { typeInvoice: variable_1.VoucherType.Ticket });
            if ((_b = relation === null || relation === void 0 ? void 0 : relation.ticket) === null || _b === void 0 ? void 0 : _b.customer) {
                query = query.leftJoinAndSelect('ticket.customer', 'customer');
            }
        }
        const batch = await query.getOne();
        return batch;
    }
};
exports.BatchMovementRepository = BatchMovementRepository;
exports.BatchMovementRepository = BatchMovementRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectEntityManager)()),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.BatchMovement)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], BatchMovementRepository);


/***/ }),
/* 96 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BatchRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let BatchRepository = class BatchRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, manager, batchRepository) {
        super(batchRepository);
        this.dataSource = dataSource;
        this.manager = manager;
        this.batchRepository = batchRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.Batch.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.Batch.fromRaw(raw);
    }
};
exports.BatchRepository = BatchRepository;
exports.BatchRepository = BatchRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectEntityManager)()),
    __param(2, (0, typeorm_1.InjectRepository)(entities_1.Batch)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _b : Object, typeof (_c = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _c : Object])
], BatchRepository);


/***/ }),
/* 97 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CustomerPaymentRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const string_helper_1 = __webpack_require__(98);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const ticket_entity_1 = __webpack_require__(50);
const postgresql_repository_1 = __webpack_require__(77);
let CustomerPaymentRepository = class CustomerPaymentRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, customerPaymentRepository) {
        super(customerPaymentRepository);
        this.dataSource = dataSource;
        this.customerPaymentRepository = customerPaymentRepository;
    }
    async startPayDebt(options) {
        const { oid, customerId, ticketPaymentList, time, note } = options;
        const PREFIX = `customerId=${customerId} pay debt failed`;
        const totalMoney = ticketPaymentList.reduce((acc, cur) => {
            if (cur.money <= 0) {
                throw new Error(`${PREFIX}: Money number invalid`);
            }
            return acc + cur.money;
        }, 0);
        if (totalMoney <= 0) {
            throw new Error(`${PREFIX}: Money number invalid`);
        }
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereCustomer = {
                oid,
                id: customerId,
                debt: (0, typeorm_2.MoreThanOrEqual)(totalMoney),
            };
            const customerUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Customer)
                .where(whereCustomer)
                .set({
                debt: () => `debt - ${totalMoney}`,
            })
                .returning('*')
                .execute();
            if (customerUpdateResult.affected !== 1) {
                throw new Error(`${PREFIX}: customerId=${customerId} update failed`);
            }
            const customer = entities_1.Customer.fromRaw(customerUpdateResult.raw[0]);
            const customerCloseDebt = customer.debt;
            let customerOpenDebt = customerCloseDebt + totalMoney;
            const customerPaymentInsertList = [];
            let description = '';
            if (ticketPaymentList.length) {
                description =
                    `Trả ${(0, string_helper_1.formatNumber)(totalMoney)} vào các phiếu nợ: `
                        + `${ticketPaymentList.map((i) => 'T' + i.ticketId).join(',')}`;
            }
            if (ticketPaymentList.length) {
                const ticketUpdateResult = await manager.query(`
          UPDATE "Ticket" ticket
          SET "paid"            = ticket."paid" + temp."money",
              "debt"            = ticket."debt" - temp."money",
              "ticketStatus"    = CASE 
                                    WHEN(ticket."debt" = temp."money") 
                                        THEN ${ticket_entity_1.TicketStatus.Completed} 
                                    ELSE ${ticket_entity_1.TicketStatus.Debt}
                                  END
          FROM (VALUES `
                    + ticketPaymentList.map((i) => `(${i.ticketId}, ${i.money})`).join(', ')
                    + `   ) AS temp("ticketId", "money")
          WHERE   ticket."oid"          = ${oid} 
              AND ticket."id"           = temp."ticketId" 
              AND ticket."customerId"   = ${customerId}
              AND ticket."ticketStatus" = ${ticket_entity_1.TicketStatus.Debt}
              AND ticket."debt"         >= temp."money";
          `);
                if (ticketUpdateResult[1] != ticketPaymentList.length) {
                    throw new Error(`${PREFIX}: Update Ticket failed, affected = ${ticketUpdateResult[1]}`);
                }
                ticketPaymentList.forEach((i) => {
                    const customerPaymentInsert = {
                        oid,
                        customerId,
                        ticketId: i.ticketId,
                        createdAt: time,
                        paymentType: variable_1.PaymentType.PayDebt,
                        paid: i.money,
                        debit: -i.money,
                        openDebt: customerOpenDebt,
                        closeDebt: customerOpenDebt - i.money,
                        note: note || '',
                        description,
                    };
                    customerOpenDebt = customerPaymentInsert.closeDebt;
                    customerPaymentInsertList.push(customerPaymentInsert);
                });
            }
            const customerPaymentInsertResult = await manager.insert(entities_1.CustomerPayment, customerPaymentInsertList);
            if (customerPaymentInsertResult.identifiers.length !== customerPaymentInsertList.length) {
                throw new Error(`${PREFIX}: Insert CustomerPayment failed: ${JSON.stringify(customerPaymentInsertResult)}`);
            }
            return { customer };
        });
    }
};
exports.CustomerPaymentRepository = CustomerPaymentRepository;
exports.CustomerPaymentRepository = CustomerPaymentRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.CustomerPayment)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], CustomerPaymentRepository);


/***/ }),
/* 98 */
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.formatUrlEncode = exports.camelCaseToSnakeCase = exports.snakeCaseToCamelCase = exports.formatNumber = exports.convertViToEn = exports.decrypt = exports.encrypt = exports.randomId = exports.randomString = void 0;
const _CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789' + '!@#$%^&*()_-[]{};\':",./<>?';
const randomString = (length = 10, characters = _CHARSET) => {
    let result = '';
    for (let i = 0; i < length; i += 1) {
        result += characters.charAt(Math.floor(Math.random() * characters.length));
    }
    return result;
};
exports.randomString = randomString;
const randomId = () => Date.now().toString(36) + (0, exports.randomString)();
exports.randomId = randomId;
const generateCharset = (privateKey, charset = _CHARSET) => {
    let tempString = charset;
    let result = '';
    for (let i = 0; i < _CHARSET.length; i += 1) {
        const kIndex = i % privateKey.length;
        const charCode = privateKey.charCodeAt(kIndex);
        const tIndex = charCode % tempString.length;
        result = tempString[tIndex] + result;
        tempString = tempString.substring(tIndex + 1) + tempString.substring(0, tIndex);
    }
    return result;
};
const encrypt = (rootString, privateKey, expiryTime) => {
    if (!privateKey)
        privateKey = 'ABC123';
    const rootObject = { r: rootString, e: expiryTime != null ? Date.now() + expiryTime : null };
    const rootObjectJson = JSON.stringify(rootObject);
    let hash = generateCharset(privateKey);
    let result = '';
    for (let i = 0; i < rootObjectJson.length; i += 1) {
        hash = generateCharset(privateKey, hash);
        const index = _CHARSET.indexOf(rootObjectJson[i]);
        if (index === -1) {
            result += rootObjectJson[i];
        }
        else {
            result += hash[index];
        }
    }
    return result;
};
exports.encrypt = encrypt;
const decrypt = (cipherText, privateKey) => {
    if (!privateKey)
        privateKey = 'ABC123';
    let hash = generateCharset(privateKey);
    let rootObjectJson = '';
    for (let i = 0; i < cipherText.length; i += 1) {
        hash = generateCharset(privateKey, hash);
        const index = hash.indexOf(cipherText[i]);
        if (index === -1) {
            rootObjectJson += cipherText[i];
        }
        else {
            rootObjectJson += _CHARSET[index];
        }
    }
    let r, e;
    try {
        const parse = JSON.parse(rootObjectJson);
        r = parse.r;
        e = parse.e;
    }
    catch (error) {
        throw new Error('invalid privateKey');
    }
    if (e != null && e < Date.now()) {
        throw new Error('String invalid expiry time');
    }
    return r;
};
exports.decrypt = decrypt;
const convertViToEn = (root) => root
    .normalize('NFD')
    .replace(/[\u0300-\u036f]/g, '')
    .replace(/đ/g, 'd')
    .replace(/Đ/g, 'D');
exports.convertViToEn = convertViToEn;
const formatNumber = (number, part = 3, sec = ',', dec = '.') => {
    const numberStr = (number || 0).toString();
    const regex = '\\d(?=(\\d{' + part + '})+' + (numberStr.includes('.') ? '\\D' : '$') + ')';
    return numberStr.replace('.', dec).replace(new RegExp(regex, 'g'), '$&' + sec);
};
exports.formatNumber = formatNumber;
const snakeCaseToCamelCase = (input) => input.replace(/(_\w)/g, (k) => k[1].toUpperCase());
exports.snakeCaseToCamelCase = snakeCaseToCamelCase;
const camelCaseToSnakeCase = (input) => input.replace(/[A-Z]/g, (k) => `_${k.toLowerCase()}`);
exports.camelCaseToSnakeCase = camelCaseToSnakeCase;
const formatUrlEncode = (text) => {
    return text.replace(/[^a-zA-Z0-9_\-.*]+/g, '');
};
exports.formatUrlEncode = formatUrlEncode;


/***/ }),
/* 99 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CustomerSourceRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let CustomerSourceRepository = class CustomerSourceRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, customerSourceRepository) {
        super(customerSourceRepository);
        this.dataSource = dataSource;
        this.customerSourceRepository = customerSourceRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.CustomerSource.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.CustomerSource.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.CustomerSource.fromRaws(raws);
    }
};
exports.CustomerSourceRepository = CustomerSourceRepository;
exports.CustomerSourceRepository = CustomerSourceRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.CustomerSource)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], CustomerSourceRepository);


/***/ }),
/* 100 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CustomerRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let CustomerRepository = class CustomerRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, customerRepository) {
        super(customerRepository);
        this.dataSource = dataSource;
        this.customerRepository = customerRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.Customer.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.Customer.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.Customer.fromRaws(raws);
    }
};
exports.CustomerRepository = CustomerRepository;
exports.CustomerRepository = CustomerRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.Customer)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], CustomerRepository);


/***/ }),
/* 101 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DistributorPaymentRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const string_helper_1 = __webpack_require__(98);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let DistributorPaymentRepository = class DistributorPaymentRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, distributorPaymentRepository) {
        super(distributorPaymentRepository);
        this.dataSource = dataSource;
        this.distributorPaymentRepository = distributorPaymentRepository;
    }
    async startPayDebt(options) {
        const { oid, distributorId, receiptPayments, time, note } = options;
        if (!receiptPayments.length || receiptPayments.some((item) => (item.money || 0) <= 0)) {
            throw new Error(`Distributor ${distributorId} pay debt failed: Money number invalid`);
        }
        const receiptIds = receiptPayments.map((i) => i.receiptId);
        const totalMoney = receiptPayments.reduce((acc, cur) => acc + cur.money, 0);
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            var _a;
            const updateDistributorResult = await manager.decrement(entities_1.Distributor, {
                id: distributorId,
                oid,
                debt: (0, typeorm_2.MoreThanOrEqual)(totalMoney),
            }, 'debt', totalMoney);
            if (updateDistributorResult.affected !== 1) {
                throw new Error(`Distributor ${distributorId} pay debt failed: Update distributor invalid`);
            }
            const distributor = await manager.findOne(entities_1.Distributor, {
                where: { oid, id: distributorId },
            });
            let distributorOpenDebt = distributor.debt + totalMoney;
            const distributorPaymentListDto = [];
            for (let i = 0; i < receiptIds.length; i++) {
                const receiptId = receiptIds[i] || 0;
                const money = (_a = receiptPayments.find((item) => item.receiptId === receiptId)) === null || _a === void 0 ? void 0 : _a.money;
                const receiptUpdateResult = await manager.update(entities_1.Receipt, {
                    id: receiptId,
                    distributorId,
                    oid,
                    status: variable_1.ReceiptStatus.Debt,
                    debt: (0, typeorm_2.MoreThanOrEqual)(money),
                }, {
                    status: () => `CASE 
                                WHEN(debt = ${money}) THEN ${variable_1.ReceiptStatus.Success} 
                                ELSE ${variable_1.ReceiptStatus.Debt}
                                END
                            `,
                    debt: () => `debt - ${money}`,
                    paid: () => `paid + ${money}`,
                });
                if (receiptUpdateResult.affected !== 1) {
                    throw new Error(`Distributor ${distributorId} pay debt failed: Update Receipt ${receiptId} failed`);
                }
                const distributorPaymentDto = {
                    oid,
                    distributorId,
                    receiptId,
                    createdAt: time,
                    paymentType: variable_1.PaymentType.PayDebt,
                    paid: money,
                    debit: -money,
                    openDebt: distributorOpenDebt,
                    closeDebt: distributorOpenDebt - money,
                    note,
                    description: receiptPayments.length > 1
                        ? `Trả ${(0, string_helper_1.formatNumber)(totalMoney)} vào ${receiptPayments.length} phiếu nợ: `
                            + `${JSON.stringify(receiptIds)}`
                        : '',
                };
                distributorOpenDebt = distributorOpenDebt - money;
                distributorPaymentListDto.push(distributorPaymentDto);
            }
            await manager.insert(entities_1.DistributorPayment, distributorPaymentListDto);
            return { distributorId };
        });
    }
};
exports.DistributorPaymentRepository = DistributorPaymentRepository;
exports.DistributorPaymentRepository = DistributorPaymentRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.DistributorPayment)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], DistributorPaymentRepository);


/***/ }),
/* 102 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DistributorRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let DistributorRepository = class DistributorRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, distributorRepository) {
        super(distributorRepository);
        this.dataSource = dataSource;
        this.distributorRepository = distributorRepository;
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.Distributor.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.Distributor.fromRaws(raws);
    }
};
exports.DistributorRepository = DistributorRepository;
exports.DistributorRepository = DistributorRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.Distributor)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], DistributorRepository);


/***/ }),
/* 103 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ImageRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let ImageRepository = class ImageRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, imageRepository) {
        super(imageRepository);
        this.dataSource = dataSource;
        this.imageRepository = imageRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.Image.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.Image.fromRaws(raws);
    }
};
exports.ImageRepository = ImageRepository;
exports.ImageRepository = ImageRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.Image)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], ImageRepository);


/***/ }),
/* 104 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LaboratoryGroupRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let LaboratoryGroupRepository = class LaboratoryGroupRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, laboratoryGroupRepository) {
        super(laboratoryGroupRepository);
        this.dataSource = dataSource;
        this.laboratoryGroupRepository = laboratoryGroupRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.LaboratoryGroup.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.LaboratoryGroup.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.LaboratoryGroup.fromRaws(raws);
    }
    async replaceAll(oid, laboratoryGroupListDto) {
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            await manager.delete(entities_1.LaboratoryGroup, {
                oid,
                id: (0, typeorm_2.Not)((0, typeorm_2.In)(laboratoryGroupListDto.map((i) => i.id))),
            });
            const laboratoryGroupInsertDto = laboratoryGroupListDto
                .filter((i) => i.id === 0)
                .map((i) => {
                const insertDto = {
                    oid,
                    name: i.name,
                    printHtmlId: i.printHtmlId,
                };
                return insertDto;
            });
            if (laboratoryGroupInsertDto.length) {
                await manager.insert(entities_1.LaboratoryGroup, laboratoryGroupInsertDto);
            }
            const laboratoryGroupUpdateDto = laboratoryGroupListDto
                .filter((i) => i.id !== 0)
                .map((i) => {
                const updateDto = {
                    id: i.id,
                    name: i.name,
                    printHtmlId: i.printHtmlId,
                };
                return updateDto;
            });
            if (laboratoryGroupUpdateDto.length) {
                await manager.query(`
          UPDATE  "LaboratoryGroup" AS "group"
          SET     "name"        = temp.name,
                  "printHtmlId" = temp."printHtmlId"
          FROM (VALUES `
                    + laboratoryGroupUpdateDto.map(({ id, name, printHtmlId }) => {
                        return `(${id}, '${name}', ${printHtmlId})`;
                    }).join(', ')
                    + `   ) AS temp("id", "name", "printHtmlId")
          WHERE   "group"."id" = temp."id" 
              AND "group"."oid" = ${oid} 
          `);
            }
            return;
        });
    }
};
exports.LaboratoryGroupRepository = LaboratoryGroupRepository;
exports.LaboratoryGroupRepository = LaboratoryGroupRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.LaboratoryGroup)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], LaboratoryGroupRepository);


/***/ }),
/* 105 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LaboratoryKitRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let LaboratoryKitRepository = class LaboratoryKitRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, laboratoryKitRepository) {
        super(laboratoryKitRepository);
        this.dataSource = dataSource;
        this.laboratoryKitRepository = laboratoryKitRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.LaboratoryKit.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.LaboratoryKit.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.LaboratoryKit.fromRaws(raws);
    }
};
exports.LaboratoryKitRepository = LaboratoryKitRepository;
exports.LaboratoryKitRepository = LaboratoryKitRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.LaboratoryKit)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], LaboratoryKitRepository);


/***/ }),
/* 106 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LaboratoryRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let LaboratoryRepository = class LaboratoryRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, laboratoryRepository) {
        super(laboratoryRepository);
        this.dataSource = dataSource;
        this.laboratoryRepository = laboratoryRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.Laboratory.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.Laboratory.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.Laboratory.fromRaws(raws);
    }
    async insertManyFullFieldAndReturnEntity(data) {
        const raws = await this.insertManyAndReturnRaw(data);
        return entities_1.Laboratory.fromRaws(raws);
    }
    async updateChildren(payload) {
        const { oid, laboratoryParent, laboratoryChildrenDtoList } = payload;
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicketDelete = {
                oid,
                id: (0, typeorm_2.Not)((0, typeorm_2.In)(laboratoryChildrenDtoList.map((i) => i.id))),
                parentId: laboratoryParent.id,
                level: 2,
            };
            await manager.delete(entities_1.Laboratory, whereTicketDelete);
            const laboratoryInsertList = laboratoryChildrenDtoList
                .filter((i) => i.id === 0)
                .map((i) => {
                const laboratoryInsert = Object.assign(Object.assign({}, i), { oid, parentId: laboratoryParent.id, laboratoryGroupId: laboratoryParent.laboratoryGroupId, level: 2 });
                return laboratoryInsert;
            });
            if (laboratoryInsertList.length) {
                await manager.insert(entities_1.Laboratory, laboratoryInsertList);
            }
            const laboratoryUpdateList = laboratoryChildrenDtoList
                .filter((i) => i.id !== 0)
                .map((i) => {
                const updateDto = Object.assign({}, i);
                return updateDto;
            });
            if (laboratoryUpdateList.length) {
                const laboratoryUpdateResult = await manager.query(`
          UPDATE  "Laboratory" AS "laboratory"
          SET     "priority" = temp.priority,
                  "name" = temp.name,
                  "laboratoryGroupId" = ${laboratoryParent.laboratoryGroupId},
                  "price" = temp.price,
                  "valueType" = temp."valueType",
                  "unit" = temp.unit,
                  "lowValue" = temp."lowValue",
                  "highValue" = temp."highValue",
                  "options" = temp.options
          FROM (VALUES `
                    + laboratoryUpdateList.map((i) => {
                        return `(${i.id}, ${i.priority}, '${i.name}', ${i.price}, 
                    ${i.valueType}, '${i.unit}', ${i.lowValue}, 
                    ${i.highValue}, '${i.options}'
                    )`;
                    }).join(', ')
                    + `   ) AS temp("id", "priority", "name", "price", 
                          "valueType", "unit", "lowValue", 
                          "highValue", "options"
                          )
          WHERE   "laboratory"."id" = temp."id" 
              AND "laboratory"."oid" = ${oid} 
              AND "laboratory"."parentId" = ${laboratoryParent.id} 
              AND "laboratory"."level" = 2
          `);
                if (laboratoryUpdateResult[1] != laboratoryUpdateList.length) {
                    throw new Error(`Update Laboratory children failed, 
            affected = ${laboratoryUpdateResult[1]}`);
                }
            }
            return;
        });
    }
};
exports.LaboratoryRepository = LaboratoryRepository;
exports.LaboratoryRepository = LaboratoryRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.Laboratory)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], LaboratoryRepository);


/***/ }),
/* 107 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PrescriptionSampleRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let PrescriptionSampleRepository = class PrescriptionSampleRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, prescriptionSampleRepository) {
        super(prescriptionSampleRepository);
        this.dataSource = dataSource;
        this.prescriptionSampleRepository = prescriptionSampleRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.PrescriptionSample.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.PrescriptionSample.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.PrescriptionSample.fromRaws(raws);
    }
};
exports.PrescriptionSampleRepository = PrescriptionSampleRepository;
exports.PrescriptionSampleRepository = PrescriptionSampleRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.PrescriptionSample)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], PrescriptionSampleRepository);


/***/ }),
/* 108 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PrintHtmlRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let PrintHtmlRepository = class PrintHtmlRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(printHtmlRepository) {
        super(printHtmlRepository);
        this.printHtmlRepository = printHtmlRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.PrintHtml.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.PrintHtml.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.PrintHtml.fromRaws(raws);
    }
};
exports.PrintHtmlRepository = PrintHtmlRepository;
exports.PrintHtmlRepository = PrintHtmlRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectRepository)(entities_1.PrintHtml)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _a : Object])
], PrintHtmlRepository);


/***/ }),
/* 109 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProcedureGroupRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let ProcedureGroupRepository = class ProcedureGroupRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, procedureGroupRepository) {
        super(procedureGroupRepository);
        this.dataSource = dataSource;
        this.procedureGroupRepository = procedureGroupRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.ProcedureGroup.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.ProcedureGroup.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.ProcedureGroup.fromRaws(raws);
    }
    async replaceAll(oid, data) {
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            await manager.delete(entities_1.ProcedureGroup, {
                oid,
                id: (0, typeorm_2.Not)((0, typeorm_2.In)(data.map((i) => i.id))),
            });
            const procedureGroupInsertDto = data
                .filter((i) => i.id === 0)
                .map((i) => {
                const insertDto = { oid, name: i.name };
                return insertDto;
            });
            if (procedureGroupInsertDto.length) {
                await manager.insert(entities_1.ProcedureGroup, procedureGroupInsertDto);
            }
            const procedureGroupUpdateDto = data
                .filter((i) => i.id !== 0)
                .map((i) => {
                const updateDto = { id: i.id, name: i.name };
                return updateDto;
            });
            if (procedureGroupUpdateDto.length) {
                await manager.query(`
          UPDATE "ProcedureGroup" AS "group"
          SET "name" = temp.name
          FROM (VALUES `
                    + procedureGroupUpdateDto
                        .map(({ id, name }) => `(${id}, '${name}')`)
                        .join(', ')
                    + `   ) AS temp("id", "name")
          WHERE   "group"."id" = temp."id" 
              AND "group"."oid" = ${oid} 
          `);
            }
            return;
        });
    }
};
exports.ProcedureGroupRepository = ProcedureGroupRepository;
exports.ProcedureGroupRepository = ProcedureGroupRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.ProcedureGroup)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], ProcedureGroupRepository);


/***/ }),
/* 110 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProcedureRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let ProcedureRepository = class ProcedureRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, manager, procedureRepository) {
        super(procedureRepository);
        this.dataSource = dataSource;
        this.manager = manager;
        this.procedureRepository = procedureRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.Procedure.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.Procedure.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.Procedure.fromRaws(raws);
    }
};
exports.ProcedureRepository = ProcedureRepository;
exports.ProcedureRepository = ProcedureRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectEntityManager)()),
    __param(2, (0, typeorm_1.InjectRepository)(entities_1.Procedure)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _b : Object, typeof (_c = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _c : Object])
], ProcedureRepository);


/***/ }),
/* 111 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProductGroupRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let ProductGroupRepository = class ProductGroupRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, productGroupRepository) {
        super(productGroupRepository);
        this.dataSource = dataSource;
        this.productGroupRepository = productGroupRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.ProductGroup.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.ProductGroup.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.ProductGroup.fromRaws(raws);
    }
    async replaceAll(oid, data) {
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            await manager.delete(entities_1.ProductGroup, {
                oid,
                id: (0, typeorm_2.Not)((0, typeorm_2.In)(data.map((i) => i.id))),
            });
            const productGroupInsertDto = data
                .filter((i) => i.id === 0)
                .map((i) => {
                const insertDto = { oid, name: i.name };
                return insertDto;
            });
            if (productGroupInsertDto.length) {
                await manager.insert(entities_1.ProductGroup, productGroupInsertDto);
            }
            const productGroupUpdateDto = data
                .filter((i) => i.id !== 0)
                .map((i) => {
                const updateDto = { id: i.id, name: i.name };
                return updateDto;
            });
            if (productGroupUpdateDto.length) {
                await manager.query(`
          UPDATE "ProductGroup" AS "group"
          SET "name" = temp.name
          FROM (VALUES `
                    + productGroupUpdateDto
                        .map(({ id, name }) => `(${id}, '${name}')`)
                        .join(', ')
                    + `   ) AS temp("id", "name")
          WHERE   "group"."id" = temp."id" 
              AND "group"."oid" = ${oid} 
          `);
            }
            return;
        });
    }
};
exports.ProductGroupRepository = ProductGroupRepository;
exports.ProductGroupRepository = ProductGroupRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.ProductGroup)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], ProductGroupRepository);


/***/ }),
/* 112 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProductMovementRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let ProductMovementRepository = class ProductMovementRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(manager, productMovementRepository) {
        super(productMovementRepository);
        this.manager = manager;
        this.productMovementRepository = productMovementRepository;
    }
    async queryOne(condition, relation) {
        var _a, _b;
        let query = this.manager
            .createQueryBuilder(entities_1.ProductMovement, 'productMovement')
            .where('productMovement.oid = :oid', { oid: condition.oid });
        if (condition === null || condition === void 0 ? void 0 : condition.productId) {
            query = query.andWhere('productMovement.productId = :productId', {
                productId: condition.productId,
            });
        }
        if (relation === null || relation === void 0 ? void 0 : relation.receipt) {
            query = query.leftJoinAndSelect('productMovement.receipt', 'receipt', 'productMovement.voucherType = :typeReceipt', { typeReceipt: variable_1.VoucherType.Receipt });
            if ((_a = relation === null || relation === void 0 ? void 0 : relation.receipt) === null || _a === void 0 ? void 0 : _a.distributor) {
                query = query.leftJoinAndSelect('receipt.distributor', 'distributor');
            }
        }
        if (relation === null || relation === void 0 ? void 0 : relation.ticket) {
            query = query.leftJoinAndSelect('productMovement.ticket', 'ticket', 'productMovement.voucherType = :typeInvoice', { typeInvoice: variable_1.VoucherType.Ticket });
            if ((_b = relation === null || relation === void 0 ? void 0 : relation.ticket) === null || _b === void 0 ? void 0 : _b.customer) {
                query = query.leftJoinAndSelect('ticket.customer', 'customer');
            }
        }
        const productMovement = await query.getOne();
        return productMovement;
    }
    async topTotalMoneyGroupByProduct(options) {
        const { oid, type, fromTime, toTime } = options;
        return await this.manager.query(`
      SELECT productId, SUM(totalMoney) AS sumTotalMoney
      FROM ProductMovement productMovement
      WHERE oid = ${oid} AND voucherType = ${type} AND (createdAt BETWEEN ${fromTime} AND ${toTime})
      GROUP BY productId
      ORDER BY sumTotalMoney DESC
      LIMIT 10
    `);
    }
};
exports.ProductMovementRepository = ProductMovementRepository;
exports.ProductMovementRepository = ProductMovementRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectEntityManager)()),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.ProductMovement)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], ProductMovementRepository);


/***/ }),
/* 113 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProductRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let ProductRepository = class ProductRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, manager, productRepository) {
        super(productRepository);
        this.dataSource = dataSource;
        this.manager = manager;
        this.productRepository = productRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.Product.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.Product.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.Product.fromRaws(raws);
    }
    async calculateProductQuantity(options) {
        const { oid, productIds } = options;
        await this.manager.query(`
            UPDATE  "Product" "product" 
            SET     "quantity" = "spb"."sumQuantity"
            FROM    ( 
                    SELECT "productId", SUM("quantity") as "sumQuantity" 
                        FROM "ProductBatch" 
                        WHERE "productBatch"."productId" IN (${productIds.toString()})
                            AND "productBatch"."oid" = ${oid}
                        GROUP BY "productId" 
                    ) AS "spb" 
            WHERE   "product"."id" = "spb"."productId" 
                        AND "product"."id" IN (${productIds.toString()})
                        AND "product"."oid" = ${oid}
            RETURNING *
        `);
    }
};
exports.ProductRepository = ProductRepository;
exports.ProductRepository = ProductRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectEntityManager)()),
    __param(2, (0, typeorm_1.InjectRepository)(entities_1.Product)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _b : Object, typeof (_c = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _c : Object])
], ProductRepository);


/***/ }),
/* 114 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RadiologyGroupRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let RadiologyGroupRepository = class RadiologyGroupRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, radiologyGroupRepository) {
        super(radiologyGroupRepository);
        this.dataSource = dataSource;
        this.radiologyGroupRepository = radiologyGroupRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.RadiologyGroup.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.RadiologyGroup.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.RadiologyGroup.fromRaws(raws);
    }
    async replaceAll(oid, data) {
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            await manager.delete(entities_1.RadiologyGroup, {
                oid,
                id: (0, typeorm_2.Not)((0, typeorm_2.In)(data.map((i) => i.id))),
            });
            const radiologyGroupInsertDto = data
                .filter((i) => i.id === 0)
                .map((i) => {
                const insertDto = { oid, name: i.name };
                return insertDto;
            });
            if (radiologyGroupInsertDto.length) {
                await manager.insert(entities_1.RadiologyGroup, radiologyGroupInsertDto);
            }
            const radiologyGroupUpdateDto = data
                .filter((i) => i.id !== 0)
                .map((i) => {
                const updateDto = { id: i.id, name: i.name };
                return updateDto;
            });
            if (radiologyGroupUpdateDto.length) {
                await manager.query(`
          UPDATE "RadiologyGroup" AS "group"
          SET "name" = temp.name
          FROM (VALUES `
                    + radiologyGroupUpdateDto
                        .map(({ id, name }) => `(${id}, '${name}')`)
                        .join(', ')
                    + `   ) AS temp("id", "name")
          WHERE   "group"."id" = temp."id" 
              AND "group"."oid" = ${oid} 
          `);
            }
            return;
        });
    }
};
exports.RadiologyGroupRepository = RadiologyGroupRepository;
exports.RadiologyGroupRepository = RadiologyGroupRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.RadiologyGroup)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], RadiologyGroupRepository);


/***/ }),
/* 115 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RadiologyRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let RadiologyRepository = class RadiologyRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, radiologyRepository) {
        super(radiologyRepository);
        this.dataSource = dataSource;
        this.radiologyRepository = radiologyRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.Radiology.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.Radiology.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.Radiology.fromRaws(raws);
    }
};
exports.RadiologyRepository = RadiologyRepository;
exports.RadiologyRepository = RadiologyRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.Radiology)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], RadiologyRepository);


/***/ }),
/* 116 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReceiptItemRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let ReceiptItemRepository = class ReceiptItemRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(manager, receiptItemRepository) {
        super(receiptItemRepository);
        this.manager = manager;
        this.receiptItemRepository = receiptItemRepository;
    }
};
exports.ReceiptItemRepository = ReceiptItemRepository;
exports.ReceiptItemRepository = ReceiptItemRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectEntityManager)()),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.ReceiptItem)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], ReceiptItemRepository);


/***/ }),
/* 117 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReceiptCancel = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const object_helper_1 = __webpack_require__(85);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const batch_movement_entity_1 = __webpack_require__(42);
let ReceiptCancel = class ReceiptCancel {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async cancel(params) {
        const { oid, receiptId, money, time } = params;
        const PREFIX = `ReceiptId=${receiptId} refund failed`;
        const transaction = await this.dataSource.transaction('REPEATABLE READ', async (manager) => {
            var _a, _b;
            const whereReceipt = {
                oid,
                id: receiptId,
                status: (0, typeorm_1.In)([variable_1.ReceiptStatus.Debt, variable_1.ReceiptStatus.Success]),
                paid: money,
            };
            const receiptUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Receipt)
                .where(whereReceipt)
                .set({
                status: variable_1.ReceiptStatus.Cancelled,
                debt: 0,
                paid: 0,
            })
                .returning('*')
                .execute();
            if (receiptUpdateResult.affected !== 1) {
                throw new Error(`${PREFIX}: Update receipt failed`);
            }
            const receipt = entities_1.Receipt.fromRaw(receiptUpdateResult.raw[0]);
            const debt = receipt.totalMoney - money;
            receipt.receiptItems = await manager.find(entities_1.ReceiptItem, {
                where: { oid, receiptId },
            });
            if (receipt.receiptItems.length === 0) {
                throw new Error(`${PREFIX}: receiptItems.length = 0`);
            }
            const receiptItemsBatch = receipt.receiptItems.filter((i) => i.batchId != 0);
            const receiptItemsProduct = receipt.receiptItems.filter((i) => i.productId != 0);
            const productIdMap = {};
            for (let i = 0; i < receiptItemsProduct.length; i++) {
                const { productId, quantity, costPrice } = receiptItemsProduct[i];
                if (!productIdMap[productId]) {
                    productIdMap[productId] = {
                        productId,
                        quantityReturn: 0,
                        costAmountReturn: 0,
                        openQuantity: 0,
                        openCostAmount: 0,
                    };
                }
                productIdMap[productId].quantityReturn += quantity;
                productIdMap[productId].costAmountReturn += quantity * costPrice;
            }
            const batchIdMap = {};
            for (let i = 0; i < receiptItemsBatch.length; i++) {
                const { batchId, productId, quantity } = receiptItemsBatch[i];
                if (!batchIdMap[batchId]) {
                    batchIdMap[batchId] = {
                        batchId,
                        productId,
                        quantityReturn: 0,
                        openQuantity: 0,
                    };
                }
                batchIdMap[batchId].quantityReturn += quantity;
            }
            let batchList = [];
            let productList = [];
            let productMap = {};
            let distributor;
            if (debt > 0) {
                const whereDistributor = { id: receipt.distributorId };
                const distributorUpdateResult = await manager
                    .createQueryBuilder()
                    .update(entities_1.Distributor)
                    .where(whereDistributor)
                    .set({
                    debt: () => `debt - ${debt}`,
                })
                    .returning('*')
                    .execute();
                if (distributorUpdateResult.affected !== 1) {
                    throw new Error(`${PREFIX}: DistributorId: ${receipt.distributorId} update failed`);
                }
                distributor = entities_1.Distributor.fromRaw(distributorUpdateResult.raw[0]);
            }
            if (debt > 0 || money > 0) {
                if (!distributor) {
                    distributor = await manager.findOneBy(entities_1.Distributor, { oid, id: receipt.distributorId });
                }
                const distributorCloseDebt = distributor.debt;
                const distributorOpenDebt = distributorCloseDebt + debt;
                const distributorPaymentInsert = {
                    oid,
                    distributorId: receipt.distributorId,
                    receiptId,
                    createdAt: time,
                    paymentType: variable_1.PaymentType.ReceiveRefund,
                    paid: -money,
                    debit: -debt,
                    openDebt: distributorOpenDebt,
                    closeDebt: distributorCloseDebt,
                    note: '',
                    description: params.description || '',
                };
                const distributorPaymentInsertResult = await manager.insert(entities_1.DistributorPayment, distributorPaymentInsert);
                const distributorPaymentId = (_b = (_a = distributorPaymentInsertResult.identifiers) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.id;
                if (!distributorPaymentId) {
                    throw new Error(`${PREFIX}: Insert DistributorPayment failed:`
                        + ` ${JSON.stringify(distributorPaymentInsertResult)}`);
                }
            }
            if (receiptItemsProduct.length) {
                const productQuantityList = Object.values(productIdMap);
                const productUpdateResult = await manager.query(`
          UPDATE    "Product" "product"
          SET       "quantity" = "product"."quantity" - temp."quantityReturn",
                    "costAmount" = "product"."costAmount" - temp."costAmountReturn"
          FROM (VALUES `
                    + productQuantityList
                        .map((i) => {
                        return `(${i.productId}, ${i.quantityReturn}, ${i.costAmountReturn})`;
                    })
                        .join(', ')
                    + `   ) AS temp("productId", "quantityReturn", "costAmountReturn")
          WHERE     "product"."id" = temp."productId" 
                AND "product"."oid" = ${oid}
                AND "product"."hasManageQuantity" = 1 
          RETURNING "product".*;        
          `);
                if (productUpdateResult[1] != productQuantityList.length) {
                }
                productList = entities_1.Product.fromRaws(productUpdateResult[0]);
                productMap = (0, object_helper_1.arrayToKeyValue)(productList, 'id');
            }
            if (receiptItemsBatch.length) {
                const batchQuantityList = Object.values(batchIdMap).filter((i) => productMap[i.productId]);
                const batchUpdateResult = await manager.query(`
          UPDATE    "Batch" "batch"
          SET       "quantity" = "batch"."quantity" - temp."quantityReturn"
          FROM (VALUES `
                    + batchQuantityList
                        .map((i) => {
                        return `(${i.batchId}, ${i.quantityReturn})`;
                    })
                        .join(', ')
                    + `   ) AS temp("batchId", "quantityReturn")
          WHERE     "batch"."id" = temp."batchId" AND "batch"."oid" = ${oid}
          RETURNING "batch".*;        
          `);
                if (batchUpdateResult[1] != batchQuantityList.length) {
                    throw new Error(`${PREFIX}: Update Batch, affected = ${batchUpdateResult[1]}`);
                }
                batchList = entities_1.Batch.fromRaws(batchUpdateResult[0]);
                const batchZeroQuantityList = batchList.filter((i) => i.quantity === 0);
                if (batchZeroQuantityList.length) {
                    const productReCalculatorIds = batchZeroQuantityList.map((i) => i.productId);
                    const productReCalculatorResult = await manager.query(`
              UPDATE "Product" product
              SET "expiryDate" = (
                  SELECT MIN("expiryDate")
                  FROM "Batch" batch
                  WHERE   batch."productId" = product.id
                      AND batch."expiryDate" IS NOT NULL
                      AND batch."quantity" <> 0
              )
              WHERE product."hasManageBatches" = 1
                  AND "product"."id" IN (${productReCalculatorIds.toString()})
              RETURNING "product".*;  
            `);
                    const productReCalculatorList = entities_1.Product.fromRaws(productReCalculatorResult[0]);
                    for (let i = 0; i < productList.length; i++) {
                        const productId = productList[i].id;
                        const productReCalculatorFind = productReCalculatorList.find((i) => i.id === productId);
                        if (productReCalculatorFind) {
                            productList[i] = productReCalculatorFind;
                        }
                    }
                }
            }
            productList.forEach((i) => {
                const currentMap = productIdMap[i.id];
                currentMap.openQuantity = i.quantity + currentMap.quantityReturn;
                currentMap.openCostAmount = i.costAmount + currentMap.costAmountReturn;
            });
            batchList.forEach((i) => {
                const currentMap = batchIdMap[i.id];
                currentMap.openQuantity = i.quantity + currentMap.quantityReturn;
            });
            const productMovementsDraft = [];
            receiptItemsProduct.forEach((receiptItem) => {
                const currentProductMap = productIdMap[receiptItem.productId];
                const draft = {
                    oid,
                    productId: receiptItem.productId,
                    voucherId: receiptId,
                    contactId: receipt.distributorId,
                    createdAt: time,
                    voucherType: variable_1.VoucherType.Receipt,
                    isRefund: 1,
                    unitRate: receiptItem.unitRate,
                    actualPrice: receiptItem.costPrice,
                    expectedPrice: receiptItem.costPrice,
                    openQuantity: currentProductMap ? currentProductMap.openQuantity : 0,
                    quantity: -receiptItem.quantity,
                    closeQuantity: currentProductMap
                        ? currentProductMap.openQuantity - receiptItem.quantity
                        : 0,
                    openCostAmount: currentProductMap ? currentProductMap.openCostAmount : 0,
                    costAmount: -receiptItem.quantity * receiptItem.costPrice,
                    closeCostAmount: currentProductMap
                        ? currentProductMap.openCostAmount - receiptItem.quantity * receiptItem.costPrice
                        : 0,
                };
                productMovementsDraft.push(draft);
                if (currentProductMap) {
                    currentProductMap.openQuantity = draft.closeQuantity;
                    currentProductMap.openCostAmount = draft.closeCostAmount;
                }
            });
            if (productMovementsDraft.length) {
                await manager.insert(entities_1.ProductMovement, productMovementsDraft);
            }
            if (receiptItemsBatch.length) {
                const batchMovementsInsert = receiptItemsBatch.map((receiptItem) => {
                    const currentProductMap = productIdMap[receiptItem.productId];
                    const currentBatchMap = batchIdMap[receiptItem.batchId];
                    const draft = {
                        oid,
                        batchId: receiptItem.batchId,
                        productId: receiptItem.productId,
                        voucherId: receiptId,
                        contactId: receipt.distributorId,
                        createdAt: time,
                        voucherType: variable_1.VoucherType.Receipt,
                        isRefund: 1,
                        unitRate: receiptItem.unitRate,
                        actualPrice: receiptItem.costPrice,
                        expectedPrice: receiptItem.costPrice,
                        openQuantity: currentProductMap ? currentBatchMap.openQuantity : 0,
                        quantity: -receiptItem.quantity,
                        closeQuantity: currentProductMap
                            ? currentBatchMap.openQuantity - receiptItem.quantity
                            : 0,
                    };
                    if (currentProductMap) {
                        currentBatchMap.openQuantity = draft.closeQuantity;
                    }
                    return draft;
                });
                await manager.insert(batch_movement_entity_1.default, batchMovementsInsert);
            }
            const { receiptItems } = receipt, receiptBasic = __rest(receipt, ["receiptItems"]);
            return { receiptBasic, receiptItems, distributor, productList, batchList };
        });
        return transaction;
    }
};
exports.ReceiptCancel = ReceiptCancel;
exports.ReceiptCancel = ReceiptCancel = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], ReceiptCancel);


/***/ }),
/* 118 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReceiptDraft = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const time_helper_1 = __webpack_require__(119);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
let ReceiptDraft = class ReceiptDraft {
    constructor(dataSource, manager) {
        this.dataSource = dataSource;
        this.manager = manager;
    }
    async createDraft(params) {
        const { oid, receiptInsertDto, receiptItemListDto } = params;
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            var _a, _b;
            const receiptInsert = Object.assign(Object.assign({}, receiptInsertDto), { oid, status: variable_1.ReceiptStatus.Draft, paid: 0, debt: receiptInsertDto.totalMoney, year: time_helper_1.DTimer.info(receiptInsertDto.startedAt, 7).year, month: time_helper_1.DTimer.info(receiptInsertDto.startedAt, 7).month + 1, date: time_helper_1.DTimer.info(receiptInsertDto.startedAt, 7).date, endedAt: null });
            const receiptResult = await manager.insert(entities_1.Receipt, receiptInsert);
            const receiptId = (_b = (_a = receiptResult.identifiers) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.id;
            if (!receiptId) {
                throw new Error(`Create Receipt failed: Insert error ${JSON.stringify(receiptResult)}`);
            }
            const receiptItemListInsert = receiptItemListDto.map((i) => {
                const receiptItem = Object.assign(Object.assign({}, i), { oid,
                    receiptId, distributorId: receiptInsert.distributorId });
                return receiptItem;
            });
            await manager.insert(entities_1.ReceiptItem, receiptItemListInsert);
            return { receiptId };
        });
    }
    async updateDraftPrepayment(params) {
        const { oid, receiptId, receiptUpdateDto, receiptItemListDto } = params;
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereReceipt = {
                id: receiptId,
                oid,
                status: (0, typeorm_2.In)([variable_1.ReceiptStatus.Draft, variable_1.ReceiptStatus.Prepayment]),
            };
            const receiptUpdate = Object.assign(Object.assign({}, receiptUpdateDto), { oid, status: variable_1.ReceiptStatus.Draft, paid: 0, debt: receiptUpdateDto.totalMoney, year: time_helper_1.DTimer.info(receiptUpdateDto.startedAt, 7).year, month: time_helper_1.DTimer.info(receiptUpdateDto.startedAt, 7).month + 1, date: time_helper_1.DTimer.info(receiptUpdateDto.startedAt, 7).date, endedAt: null });
            const receiptUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Receipt)
                .where(whereReceipt)
                .set(receiptUpdate)
                .returning('*')
                .execute();
            if (receiptUpdateResult.affected !== 1) {
                throw new Error(`Update Receipt ${receiptId} failed: Status invalid`);
            }
            const receipt = entities_1.Receipt.fromRaw(receiptUpdateResult.raw[0]);
            await manager.delete(entities_1.ReceiptItem, { oid, receiptId });
            const receiptItemListInsert = receiptItemListDto.map((i) => {
                const receiptItem = Object.assign(Object.assign({}, i), { oid,
                    receiptId, distributorId: receipt.distributorId });
                return receiptItem;
            });
            await manager.insert(entities_1.ReceiptItem, receiptItemListInsert);
            return { receiptId };
        });
    }
};
exports.ReceiptDraft = ReceiptDraft;
exports.ReceiptDraft = ReceiptDraft = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectEntityManager)()),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _b : Object])
], ReceiptDraft);


/***/ }),
/* 119 */
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DTimer = void 0;
class DTimer {
}
exports.DTimer = DTimer;
DTimer.startOfDate = (time, utcOffset) => {
    if (typeof time !== 'object')
        time = new Date(time);
    if (utcOffset == null)
        utcOffset = time.getTimezoneOffset() / -60;
    const timeMove = new Date(time.getTime() + utcOffset * 60 * 60 * 1000);
    timeMove.setUTCHours(0, 0, 0, 0);
    const result = new Date(timeMove.getTime() - utcOffset * 60 * 60 * 1000);
    return result;
};
DTimer.endOfDate = (time, utcOffset) => {
    if (typeof time !== 'object')
        time = new Date(time);
    if (utcOffset == null)
        utcOffset = time.getTimezoneOffset() / -60;
    const timeMove = new Date(time.getTime() + utcOffset * 60 * 60 * 1000);
    timeMove.setUTCHours(23, 59, 59, 999);
    const result = new Date(timeMove.getTime() - utcOffset * 60 * 60 * 1000);
    return result;
};
DTimer.startOfMonth = (time, utcOffset) => {
    if (typeof time !== 'object')
        time = new Date(time);
    if (utcOffset == null)
        utcOffset = time.getTimezoneOffset() / -60;
    const timeMove = new Date(time.getTime() + utcOffset * 60 * 60 * 1000);
    timeMove.setUTCDate(1);
    timeMove.setUTCHours(0, 0, 0, 0);
    const result = new Date(timeMove.getTime() - utcOffset * 60 * 60 * 1000);
    return result;
};
DTimer.endOfMonth = (time, utcOffset) => {
    if (typeof time !== 'object')
        time = new Date(time);
    if (utcOffset == null)
        utcOffset = time.getTimezoneOffset() / -60;
    const timeMove = new Date(time.getTime() + utcOffset * 60 * 60 * 1000);
    timeMove.setUTCMonth(timeMove.getUTCMonth() + 1, 0);
    timeMove.setUTCHours(23, 59, 59, 999);
    const result = new Date(timeMove.getTime() - utcOffset * 60 * 60 * 1000);
    return result;
};
DTimer.startOfYear = (time, utcOffset) => {
    if (typeof time !== 'object')
        time = new Date(time);
    if (utcOffset == null)
        utcOffset = time.getTimezoneOffset() / -60;
    const timeMove = new Date(time.getTime() + utcOffset * 60 * 60 * 1000);
    timeMove.setUTCMonth(0, 1);
    timeMove.setUTCHours(0, 0, 0, 0);
    const result = new Date(timeMove.getTime() - utcOffset * 60 * 60 * 1000);
    return result;
};
DTimer.endOfYear = (time, utcOffset) => {
    if (typeof time !== 'object')
        time = new Date(time);
    if (utcOffset == null)
        utcOffset = time.getTimezoneOffset() / -60;
    const timeMove = new Date(time.getTime() + utcOffset * 60 * 60 * 1000);
    timeMove.setUTCMonth(11, 31);
    timeMove.setUTCHours(23, 59, 59, 999);
    const result = new Date(timeMove.getTime() - utcOffset * 60 * 60 * 1000);
    return result;
};
DTimer.info = (time, utcOffset) => {
    if (typeof time !== 'object')
        time = new Date(time);
    if (utcOffset == null)
        utcOffset = time.getTimezoneOffset() / -60;
    const timeMove = new Date(time.getTime() + utcOffset * 60 * 60 * 1000);
    return {
        year: timeMove.getUTCFullYear(),
        month: timeMove.getUTCMonth(),
        date: timeMove.getUTCDate(),
        hour: timeMove.getUTCHours(),
        minute: timeMove.getUTCMinutes(),
        second: timeMove.getUTCSeconds(),
    };
};
DTimer.textToTime = (text, pattern, utcOffset) => {
    const iFullYear = pattern.indexOf('YYYY');
    const iMonth = pattern.indexOf('MM');
    const iDay = pattern.indexOf('DD');
    const iHour = pattern.indexOf('hh');
    const iMinute = pattern.indexOf('mm');
    const iSecond = pattern.indexOf('ss');
    const iMs = pattern.indexOf('xxx');
    const year = iFullYear !== -1 ? Number(text.slice(iFullYear, iFullYear + 4)) : 0;
    const month = iMonth !== -1 ? Number(text.slice(iMonth, iMonth + 2)) : 0;
    const date = iDay !== -1 ? Number(text.slice(iDay, iDay + 2)) : 0;
    const hour = iHour !== -1 ? Number(text.slice(iHour, iHour + 2)) : 0;
    const minute = iMinute !== -1 ? Number(text.slice(iMinute, iMinute + 2)) : 0;
    const second = iSecond !== -1 ? Number(text.slice(iSecond, iSecond + 2)) : 0;
    const millisecond = iMs !== -1 ? Number(text.slice(iMs, iMs + 3)) : 0;
    const time = new Date();
    time.setUTCFullYear(year);
    time.setUTCMonth(month - 1);
    time.setUTCDate(date);
    time.setUTCHours(hour);
    time.setUTCMinutes(minute);
    time.setUTCSeconds(second);
    time.setMilliseconds(millisecond);
    if (utcOffset == null)
        utcOffset = time.getTimezoneOffset() / -60;
    const timeMove = new Date(time.getTime() + utcOffset * 60 * 60 * 1000);
    return timeMove;
};
DTimer.timeToText = (time, pattern = 'DD/MM/YYYY', utcOffset) => {
    if (time == null || time === '')
        return '';
    if (typeof time !== 'object')
        time = new Date(time);
    if (time.toString() === 'Invalid Date')
        return 'Invalid Date';
    if (utcOffset == null)
        utcOffset = time.getTimezoneOffset() / -60;
    const date = new Date(time.getTime() + utcOffset * 60 * 60 * 1000);
    const rules = {
        YYYY: `${date.getUTCFullYear()}`,
        YY: `${date.getUTCFullYear()}`.slice(-2),
        MM: `0${date.getUTCMonth() + 1}`.slice(-2),
        DD: `0${date.getUTCDate()}`.slice(-2),
        hh: `0${date.getUTCHours()}`.slice(-2),
        mm: `0${date.getUTCMinutes()}`.slice(-2),
        ss: `0${date.getUTCSeconds()}`.slice(-2),
        xxx: `00${date.getUTCMilliseconds()}`.slice(-3),
    };
    let text = pattern;
    Object.entries(rules).forEach(([key, value]) => {
        const re = new RegExp(key, 'g');
        text = text.replace(re, value);
    });
    return text;
};


/***/ }),
/* 120 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReceiptPayDebt = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
let ReceiptPayDebt = class ReceiptPayDebt {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async payDebt(params) {
        const { oid, receiptId, time, money } = params;
        const PREFIX = `ReceiptId=${receiptId} pay debt failed`;
        if (money <= 0) {
            throw new Error(`${PREFIX}: money=${money}`);
        }
        const transaction = await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            var _a, _b;
            const whereReceipt = {
                oid,
                id: receiptId,
                status: variable_1.ReceiptStatus.Debt,
                totalMoney: (0, typeorm_1.Raw)((alias) => `${alias} >= (paid + :money)`, { money }),
            };
            const receiptUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Receipt)
                .where(whereReceipt)
                .set({
                status: () => `CASE 
                            WHEN("totalMoney" - paid = ${money}) THEN ${variable_1.ReceiptStatus.Success} 
                            ELSE ${variable_1.ReceiptStatus.Debt}
                            END
                        `,
                debt: () => `debt - ${money}`,
                paid: () => `paid + ${money}`,
            })
                .returning('*')
                .execute();
            if (receiptUpdateResult.affected !== 1) {
                throw new Error(`${PREFIX}: Update Receipt failed`);
            }
            const receipt = entities_1.Receipt.fromRaw(receiptUpdateResult.raw[0]);
            const whereDistributor = { id: receipt.distributorId };
            const distributorUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Distributor)
                .where(whereDistributor)
                .set({
                debt: () => `debt - ${money}`,
            })
                .returning('*')
                .execute();
            if (distributorUpdateResult.affected !== 1) {
                throw new Error(`${PREFIX}: distributorId=${receipt.distributorId} update failed`);
            }
            const distributor = entities_1.Distributor.fromRaw(distributorUpdateResult.raw[0]);
            const distributorCloseDebt = distributor.debt;
            const distributorOpenDebt = distributorCloseDebt + money;
            const distributorPaymentDraft = {
                oid,
                distributorId: receipt.distributorId,
                receiptId,
                createdAt: time,
                paymentType: variable_1.PaymentType.PayDebt,
                paid: money,
                debit: -money,
                openDebt: distributorOpenDebt,
                closeDebt: distributorCloseDebt,
                note: '',
                description: '',
            };
            const distributorPaymentInsertResult = await manager.insert(entities_1.DistributorPayment, distributorPaymentDraft);
            const distributorPaymentId = (_b = (_a = distributorPaymentInsertResult.identifiers) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.id;
            if (!distributorPaymentId) {
                throw new Error(`${PREFIX}: Insert DistributorPayment failed: ` +
                    `${JSON.stringify(distributorPaymentInsertResult)}`);
            }
            return { distributor, receiptBasic: receipt };
        });
        return transaction;
    }
};
exports.ReceiptPayDebt = ReceiptPayDebt;
exports.ReceiptPayDebt = ReceiptPayDebt = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], ReceiptPayDebt);


/***/ }),
/* 121 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReceiptPrepayment = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
let ReceiptPrepayment = class ReceiptPrepayment {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async prepayment(params) {
        const { oid, receiptId, time, money } = params;
        if (money < 0) {
            throw new Error(`Prepayment Receipt ${receiptId} failed: Money number invalid`);
        }
        const transaction = await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            var _a, _b;
            const whereReceipt = {
                oid,
                id: receiptId,
                status: (0, typeorm_1.In)([variable_1.ReceiptStatus.Draft, variable_1.ReceiptStatus.Prepayment]),
                totalMoney: (0, typeorm_1.Raw)((alias) => `${alias} >= (paid + :money)`, { money }),
            };
            const receiptUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Receipt)
                .where(whereReceipt)
                .set({
                status: variable_1.ReceiptStatus.Prepayment,
                paid: () => `paid + ${money}`,
                debt: () => `debt - ${money}`,
            })
                .returning('*')
                .execute();
            if (receiptUpdateResult.affected !== 1) {
                throw new Error(`Receipt PayDebt failed: ReceiptId:${receiptId} update failed`);
            }
            const receipt = entities_1.Receipt.fromRaw(receiptUpdateResult.raw[0]);
            if (money > 0) {
                const distributor = await manager.findOneBy(entities_1.Distributor, {
                    oid,
                    id: receipt.distributorId,
                });
                const distributorCloseDebt = distributor.debt;
                const distributorOpenDebt = distributor.debt;
                const distributorPaymentInsert = {
                    oid,
                    distributorId: receipt.distributorId,
                    receiptId,
                    createdAt: time,
                    paymentType: variable_1.PaymentType.Prepayment,
                    paid: money,
                    debit: 0,
                    openDebt: distributorOpenDebt,
                    closeDebt: distributorCloseDebt,
                    note: '',
                    description: '',
                };
                const distributorPaymentInsertResult = await manager.insert(entities_1.DistributorPayment, distributorPaymentInsert);
                const distributorPaymentId = (_b = (_a = distributorPaymentInsertResult.identifiers) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.id;
                if (!distributorPaymentId) {
                    throw new Error(`Create DistributorPayment failed: Insert error ${JSON.stringify(distributorPaymentInsertResult)}`);
                }
            }
            return { receiptBasic: receipt };
        });
        return transaction;
    }
};
exports.ReceiptPrepayment = ReceiptPrepayment;
exports.ReceiptPrepayment = ReceiptPrepayment = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], ReceiptPrepayment);


/***/ }),
/* 122 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReceiptRefundPrepayment = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
let ReceiptRefundPrepayment = class ReceiptRefundPrepayment {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async refundPrepayment(params) {
        const { oid, receiptId, time, money } = params;
        const PREFIX = `ReceiptId=${receiptId} refund money failed`;
        const transaction = await this.dataSource.transaction('REPEATABLE READ', async (manager) => {
            var _a, _b;
            const whereReceipt = {
                oid,
                id: receiptId,
                status: variable_1.ReceiptStatus.Prepayment,
                debt: 0,
            };
            const receiptUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Receipt)
                .where(whereReceipt)
                .set({
                status: () => `CASE 
                            WHEN("paid" = ${money}) THEN ${variable_1.ReceiptStatus.Draft} 
                            ELSE ${variable_1.ReceiptStatus.Prepayment}
                            END
                        `,
                paid: () => `paid - ${money}`,
                debt: () => `debt + ${money}`,
            })
                .returning('*')
                .execute();
            if (receiptUpdateResult.affected !== 1) {
                throw new Error(`${PREFIX}: Update receipt failed`);
            }
            const receipt = entities_1.Receipt.fromRaw(receiptUpdateResult.raw[0]);
            if (money == 0)
                return;
            const distributor = await manager.findOneBy(entities_1.Distributor, {
                oid,
                id: receipt.distributorId,
            });
            const distributorCloseDebt = distributor.debt;
            const distributorOpenDebt = distributor.debt;
            const distributorPaymentDraft = {
                oid,
                distributorId: receipt.distributorId,
                receiptId,
                createdAt: time,
                paymentType: variable_1.PaymentType.ReceiveRefund,
                paid: -money,
                debit: 0,
                openDebt: distributorOpenDebt,
                closeDebt: distributorCloseDebt,
                note: '',
                description: '',
            };
            const distributorPaymentInsertResult = await manager.insert(entities_1.DistributorPayment, distributorPaymentDraft);
            const distributorPaymentId = (_b = (_a = distributorPaymentInsertResult.identifiers) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.id;
            if (!distributorPaymentId) {
                throw new Error(`Create DistributorPayment failed: `
                    + `Insert error ${JSON.stringify(distributorPaymentInsertResult)}`);
            }
            return { receiptBasic: receipt, distributor };
        });
        return transaction;
    }
};
exports.ReceiptRefundPrepayment = ReceiptRefundPrepayment;
exports.ReceiptRefundPrepayment = ReceiptRefundPrepayment = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], ReceiptRefundPrepayment);


/***/ }),
/* 123 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReceiptSendProductAndPayment = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const object_helper_1 = __webpack_require__(85);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const batch_movement_entity_1 = __webpack_require__(42);
let ReceiptSendProductAndPayment = class ReceiptSendProductAndPayment {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async sendProductAndPayment(params) {
        const { oid, receiptId, time, money } = params;
        const PREFIX = `ReceiptId=${receiptId} ship and payment failed`;
        if (money < 0) {
            throw new Error(`${PREFIX}: money = ${money}`);
        }
        const transaction = await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            var _a, _b;
            const whereReceipt = {
                oid,
                id: receiptId,
                status: (0, typeorm_1.In)([variable_1.ReceiptStatus.Draft, variable_1.ReceiptStatus.Prepayment]),
                totalMoney: (0, typeorm_1.Raw)((alias) => `${alias} >= (paid + :money)`, { money }),
            };
            const setReceipt = {
                status: () => `CASE 
                          WHEN("totalMoney" - paid = ${money}) THEN ${variable_1.ReceiptStatus.Success} 
                          ELSE ${variable_1.ReceiptStatus.Debt}
                      END
                      `,
                debt: () => `"totalMoney" - paid - ${money}`,
                paid: () => `paid + ${money}`,
                startedAt: time,
                endedAt: time,
            };
            const receiptUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Receipt)
                .where(whereReceipt)
                .set(setReceipt)
                .returning('*')
                .execute();
            if (receiptUpdateResult.affected !== 1) {
                throw new Error(`${PREFIX}: Update receipt failed`);
            }
            const receipt = entities_1.Receipt.fromRaw(receiptUpdateResult.raw[0]);
            receipt.receiptItems = await manager.find(entities_1.ReceiptItem, {
                where: { oid, receiptId },
            });
            if (receipt.receiptItems.length === 0) {
                throw new Error(`${PREFIX}: receiptItems.length = 0`);
            }
            const receiptItemsBatch = receipt.receiptItems.filter((i) => i.batchId != 0);
            const receiptItemsProduct = receipt.receiptItems.filter((i) => i.productId != 0);
            const productIdMap = {};
            for (let i = 0; i < receiptItemsProduct.length; i++) {
                const { productId, quantity, costPrice } = receiptItemsProduct[i];
                if (!productIdMap[productId]) {
                    productIdMap[productId] = {
                        productId,
                        quantitySend: 0,
                        costAmountSend: 0,
                        openQuantity: 0,
                        openCostAmount: 0,
                        costPrice,
                        wholesalePrice: receiptItemsProduct[i].wholesalePrice,
                        retailPrice: receiptItemsProduct[i].retailPrice,
                        lotNumber: receiptItemsProduct[i].lotNumber,
                        expiryDate: null,
                    };
                }
                productIdMap[productId].quantitySend += quantity;
                productIdMap[productId].costAmountSend += quantity * costPrice;
                if (receiptItemsProduct[i].expiryDate != null) {
                    if (productIdMap[productId].expiryDate == null) {
                        productIdMap[productId].expiryDate = receiptItemsProduct[i].expiryDate;
                    }
                    else {
                        productIdMap[productId].expiryDate = Math.min(productIdMap[productId].expiryDate, receiptItemsProduct[i].expiryDate);
                    }
                }
            }
            const batchIdMap = {};
            for (let i = 0; i < receiptItemsBatch.length; i++) {
                const { batchId, productId, quantity, costPrice } = receiptItemsBatch[i];
                if (!batchIdMap[batchId]) {
                    batchIdMap[batchId] = {
                        batchId,
                        productId,
                        quantitySend: 0,
                        openQuantity: 0,
                        costPrice,
                        wholesalePrice: receiptItemsBatch[i].wholesalePrice,
                        retailPrice: receiptItemsBatch[i].retailPrice,
                        lotNumber: receiptItemsProduct[i].lotNumber,
                        expiryDate: receiptItemsProduct[i].expiryDate || null,
                    };
                }
                batchIdMap[batchId].quantitySend += quantity;
            }
            let batchList = [];
            let productList = [];
            let productMap = {};
            let distributor;
            if (receipt.debt) {
                const whereDistributor = { oid, id: receipt.distributorId };
                const distributorUpdateResult = await manager
                    .createQueryBuilder()
                    .update(entities_1.Distributor)
                    .where(whereDistributor)
                    .set({
                    debt: () => `debt + ${receipt.debt}`,
                })
                    .returning('*')
                    .execute();
                if (distributorUpdateResult.affected !== 1) {
                    throw new Error(`${PREFIX}: update distributorId = ${receipt.distributorId} failed`);
                }
                distributor = entities_1.Distributor.fromRaw(distributorUpdateResult.raw[0]);
            }
            if (receipt.debt || receipt.paid) {
                if (!distributor) {
                    distributor = await manager.findOneBy(entities_1.Distributor, { oid, id: receipt.distributorId });
                }
                const distributorCloseDebt = distributor.debt;
                const distributorOpenDebt = distributorCloseDebt - receipt.debt;
                const distributorPaymentInsert = {
                    oid,
                    distributorId: receipt.distributorId,
                    receiptId,
                    createdAt: time,
                    paymentType: variable_1.PaymentType.Close,
                    paid: money,
                    debit: receipt.debt,
                    openDebt: distributorOpenDebt,
                    closeDebt: distributorCloseDebt,
                    note: '',
                    description: '',
                };
                const distributorPaymentInsertResult = await manager.insert(entities_1.DistributorPayment, distributorPaymentInsert);
                const distributorPaymentId = (_b = (_a = distributorPaymentInsertResult.identifiers) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.id;
                if (!distributorPaymentId) {
                    throw new Error(`${PREFIX}: Insert DistributorPayment failed:`
                        + ` ${JSON.stringify(distributorPaymentInsertResult)}`);
                }
            }
            if (receiptItemsProduct.length) {
                const productQuantityList = Object.values(productIdMap);
                const productUpdateResult = await manager.query(`
          UPDATE    "Product" "product"
          SET       "quantity" = "product"."quantity" + temp."quantitySend",
                    "costAmount" = "product"."costAmount" + temp."costAmountSend",
                    "lotNumber" = temp."lotNumber",
                    "expiryDate" = CASE 
                                      WHEN product."hasManageBatches" = 0 THEN temp."expiryDate"  
                                      WHEN product."hasManageBatches" = 1 
                                          AND product."expiryDate" >= temp."expiryDate"
                                          THEN temp."expiryDate"  
                                      WHEN product."hasManageBatches" = 1 
                                          AND product."expiryDate" < temp."expiryDate"
                                          THEN product."expiryDate" 
                                      ELSE temp."expiryDate" 
                                  END,
                    "costPrice" = temp."costPrice",
                    "wholesalePrice" = temp."wholesalePrice",
                    "retailPrice" = temp."retailPrice"
          FROM (VALUES `
                    + productQuantityList
                        .map((i) => {
                        return (`(${i.productId}, ${i.quantitySend}, ${i.costAmountSend},`
                            + ` '${i.lotNumber}', ${i.expiryDate || 'NULL'}::bigint,`
                            + ` ${i.costPrice}, ${i.wholesalePrice}, ${i.retailPrice})`);
                    })
                        .join(', ')
                    + `   ) AS temp ( "productId", "quantitySend", "costAmountSend",
                            "lotNumber", "expiryDate",
                            "costPrice", "wholesalePrice", "retailPrice"
                          )
          WHERE     "product"."id" = temp."productId" 
                AND "product"."oid" = ${oid}
                AND "product"."hasManageQuantity" = 1 
          RETURNING "product".*;        
          `);
                if (productUpdateResult[1] != productQuantityList.length) {
                }
                productList = entities_1.Product.fromRaws(productUpdateResult[0]);
                productMap = (0, object_helper_1.arrayToKeyValue)(productList, 'id');
            }
            if (receiptItemsBatch.length) {
                const batchQuantityList = Object.values(batchIdMap).filter((i) => productMap[i.productId]);
                const batchUpdateResult = await manager.query(`
          UPDATE    "Batch" "batch"
          SET       "quantity" = "batch"."quantity" + temp."quantitySend",
                    "lotNumber" = temp."lotNumber",
                    "expiryDate" = temp."expiryDate",
                    "wholesalePrice" = temp."wholesalePrice",
                    "retailPrice" = temp."retailPrice"
          FROM (VALUES `
                    + batchQuantityList
                        .map((i) => {
                        return (`(${i.batchId}, ${i.quantitySend},`
                            + ` '${i.lotNumber}', ${i.expiryDate || 'NULL'}::bigint,`
                            + ` ${i.wholesalePrice}, ${i.retailPrice})`);
                    })
                        .join(', ')
                    + `   ) AS temp ( "batchId", "quantitySend",
                            "lotNumber", "expiryDate",
                            "wholesalePrice", "retailPrice"
                          )
          WHERE     "batch"."id" = temp."batchId" AND "batch"."oid" = ${oid}
          RETURNING "batch".*;        
          `);
                if (batchUpdateResult[1] != batchQuantityList.length) {
                    throw new Error(`${PREFIX}: Update Batch, affected = ${batchUpdateResult[1]}`);
                }
                batchList = entities_1.Batch.fromRaws(batchUpdateResult[0]);
                const batchZeroQuantityList = batchList.filter((i) => i.quantity === 0);
                if (batchZeroQuantityList.length) {
                    const productReCalculatorIds = batchZeroQuantityList.map((i) => i.productId);
                    const productReCalculatorResult = await manager.query(`
            UPDATE "Product" product
            SET "expiryDate" = (
                SELECT MIN("expiryDate")
                FROM "Batch" batch
                WHERE   batch."productId" = product.id
                    AND batch."expiryDate" IS NOT NULL
                    AND batch."quantity" <> 0
            )
            WHERE product."hasManageBatches" = 1
                AND "product"."id" IN (${productReCalculatorIds.toString()})
            RETURNING "product".*;  
          `);
                    const productReCalculatorList = entities_1.Product.fromRaws(productReCalculatorResult[0]);
                    for (let i = 0; i < productList.length; i++) {
                        const productId = productList[i].id;
                        const productReCalculatorFind = productReCalculatorList.find((i) => i.id === productId);
                        if (productReCalculatorFind) {
                            productList[i] = productReCalculatorFind;
                        }
                    }
                }
            }
            productList.forEach((i) => {
                const currentMap = productIdMap[i.id];
                currentMap.openQuantity = i.quantity - currentMap.quantitySend;
                currentMap.openCostAmount = i.costAmount - currentMap.costAmountSend;
            });
            batchList.forEach((i) => {
                const currentMap = batchIdMap[i.id];
                currentMap.openQuantity = i.quantity - currentMap.quantitySend;
            });
            const productMovementsDraft = [];
            receiptItemsProduct.forEach((receiptItem) => {
                const currentProductMap = productIdMap[receiptItem.productId];
                const draft = {
                    oid,
                    productId: receiptItem.productId,
                    voucherId: receiptId,
                    contactId: receipt.distributorId,
                    createdAt: time,
                    voucherType: variable_1.VoucherType.Receipt,
                    isRefund: 0,
                    unitRate: receiptItem.unitRate,
                    actualPrice: receiptItem.costPrice,
                    expectedPrice: receiptItem.costPrice,
                    openQuantity: currentProductMap ? currentProductMap.openQuantity : 0,
                    quantity: receiptItem.quantity,
                    closeQuantity: currentProductMap
                        ? currentProductMap.openQuantity + receiptItem.quantity
                        : 0,
                    openCostAmount: currentProductMap ? currentProductMap.openCostAmount : 0,
                    costAmount: receiptItem.quantity * receiptItem.costPrice,
                    closeCostAmount: currentProductMap
                        ? currentProductMap.openCostAmount + receiptItem.quantity * receiptItem.costPrice
                        : 0,
                };
                productMovementsDraft.push(draft);
                if (currentProductMap) {
                    currentProductMap.openQuantity = draft.closeQuantity;
                    currentProductMap.openCostAmount = draft.closeCostAmount;
                }
            });
            if (productMovementsDraft.length) {
                await manager.insert(entities_1.ProductMovement, productMovementsDraft);
            }
            if (receiptItemsBatch.length) {
                const batchMovementsInsert = receiptItemsBatch.map((receiptItem) => {
                    const currentProductMap = productIdMap[receiptItem.productId];
                    const currentBatchMap = batchIdMap[receiptItem.batchId];
                    const draft = {
                        oid,
                        batchId: receiptItem.batchId,
                        productId: receiptItem.productId,
                        voucherId: receiptId,
                        contactId: receipt.distributorId,
                        createdAt: time,
                        voucherType: variable_1.VoucherType.Receipt,
                        isRefund: 0,
                        unitRate: receiptItem.unitRate,
                        actualPrice: receiptItem.costPrice,
                        expectedPrice: receiptItem.costPrice,
                        openQuantity: currentProductMap ? currentBatchMap.openQuantity : 0,
                        quantity: receiptItem.quantity,
                        closeQuantity: currentProductMap
                            ? currentBatchMap.openQuantity + receiptItem.quantity
                            : 0,
                    };
                    if (currentProductMap) {
                        currentBatchMap.openQuantity = draft.closeQuantity;
                    }
                    return draft;
                });
                await manager.insert(batch_movement_entity_1.default, batchMovementsInsert);
            }
            const { receiptItems } = receipt, receiptBasic = __rest(receipt, ["receiptItems"]);
            return { receiptBasic, receiptItems, distributor, productList, batchList };
        });
        return transaction;
    }
};
exports.ReceiptSendProductAndPayment = ReceiptSendProductAndPayment;
exports.ReceiptSendProductAndPayment = ReceiptSendProductAndPayment = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], ReceiptSendProductAndPayment);


/***/ }),
/* 124 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReceiptRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let ReceiptRepository = class ReceiptRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, manager, receiptRepository) {
        super(receiptRepository);
        this.dataSource = dataSource;
        this.manager = manager;
        this.receiptRepository = receiptRepository;
    }
    async queryOneBy(condition, relation) {
        var _a, _b;
        let query = this.manager
            .createQueryBuilder(entities_1.Receipt, 'receipt')
            .where('receipt.id = :id', { id: condition.id })
            .andWhere('receipt.oid = :oid', { oid: condition.oid });
        if (relation === null || relation === void 0 ? void 0 : relation.distributor) {
            query = query.leftJoinAndSelect('receipt.distributor', 'distributor');
        }
        if (relation === null || relation === void 0 ? void 0 : relation.distributorPayments) {
            query = query.leftJoinAndSelect('invoice.distributorPayments', 'distributorPayment');
        }
        if (relation === null || relation === void 0 ? void 0 : relation.receiptItems) {
            query = query.leftJoinAndSelect('receipt.receiptItems', 'receiptItem');
            if ((_a = relation === null || relation === void 0 ? void 0 : relation.receiptItems) === null || _a === void 0 ? void 0 : _a.batch) {
                query = query.leftJoinAndSelect('receiptItem.batch', 'batch');
            }
            if ((_b = relation === null || relation === void 0 ? void 0 : relation.receiptItems) === null || _b === void 0 ? void 0 : _b.product) {
                query = query.leftJoinAndSelect('receiptItem.product', 'product');
            }
        }
        const receipt = await query.getOne();
        return receipt;
    }
    async destroy(params) {
        const { oid, receiptId } = params;
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const receiptDeleteResult = await manager.delete(entities_1.Receipt, {
                oid,
                id: receiptId,
                status: (0, typeorm_2.In)([variable_1.ReceiptStatus.Draft, variable_1.ReceiptStatus.Cancelled]),
            });
            if (receiptDeleteResult.affected !== 1) {
                throw new Error(`Delete Receipt ${receiptId} failed: Status invalid`);
            }
            await manager.delete(entities_1.ReceiptItem, { oid, receiptId });
        });
    }
};
exports.ReceiptRepository = ReceiptRepository;
exports.ReceiptRepository = ReceiptRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectEntityManager)()),
    __param(2, (0, typeorm_1.InjectRepository)(entities_1.Receipt)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _b : Object, typeof (_c = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _c : Object])
], ReceiptRepository);


/***/ }),
/* 125 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StatisticReceiptRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
let StatisticReceiptRepository = class StatisticReceiptRepository {
    constructor(manager) {
        this.manager = manager;
    }
    async statisticReceipt(options) {
        const { oid, timeType } = options;
        const fromTime = options.fromTime.getTime();
        const toTime = options.toTime.getTime();
        const whereReceipt = {
            oid,
            status: (0, typeorm_2.In)([variable_1.ReceiptStatus.Debt, variable_1.ReceiptStatus.Success]),
            startedAt: (0, typeorm_2.Between)(fromTime, toTime),
        };
        let query = this.manager
            .createQueryBuilder(entities_1.Receipt, 'receipt')
            .where(whereReceipt)
            .select([
            'SUM("discountMoney") AS "sumDiscountMoney"',
            'SUM("totalMoney") AS "sumTotalMoney"',
            'SUM("debt") AS "sumDebt"',
            'COUNT(*) AS "countReceipt"',
        ]);
        if (timeType === 'month') {
            query = query.addSelect(['"year"', '"month"']).groupBy('"year"').addGroupBy('"month"');
        }
        if (timeType === 'date') {
            query = query
                .addSelect(['"year"', '"month"', '"date"'])
                .groupBy('"year"')
                .addGroupBy('"month"')
                .addGroupBy('"date"');
        }
        const dataList = await query.getRawMany();
        return dataList.map((i) => ({
            oid,
            year: i.year,
            month: i.month,
            date: i.date,
            sumDiscountMoney: Number(i.sumDiscountMoney),
            sumTotalMoney: Number(i.sumTotalMoney),
            sumDebt: Number(i.sumDebt),
            countReceipt: Number(i.countReceipt),
        }));
    }
};
exports.StatisticReceiptRepository = StatisticReceiptRepository;
exports.StatisticReceiptRepository = StatisticReceiptRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectEntityManager)()),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _a : Object])
], StatisticReceiptRepository);


/***/ }),
/* 126 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StatisticRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const ticket_entity_1 = __webpack_require__(50);
let StatisticRepository = class StatisticRepository {
    constructor(dataSource, manager) {
        this.dataSource = dataSource;
        this.manager = manager;
    }
    async sumWarehouse(oid) {
        const data = await this.manager.query(`
            SELECT SUM("costAmount") AS "totalCostAmount",
                SUM("retailPrice" * "quantity") AS "totalRetailMoney"
            FROM "Product"
            WHERE "oid" = ${oid}
        `);
        return data[0];
    }
    async topProductHighMoney(options) {
        const { oid, limit, orderBy } = options;
        const data = await this.manager.query(`
            SELECT *,
                ("retailPrice" * "quantity") AS "sumRetailMoney"
            FROM "Product"
            WHERE "oid" = ${oid}
            ORDER BY "${orderBy}" DESC
            LIMIT ${limit}
        `);
        return data;
    }
    async sumCustomerDebt(oid) {
        const { sum } = await this.manager
            .createQueryBuilder(entities_1.Customer, 'customer')
            .select('SUM(debt)', 'sum')
            .where({ oid })
            .getRawOne();
        return Number(sum);
    }
    async topProductBestSelling(options) {
        const { oid, fromTime, toTime, orderBy, limit } = options;
        let query = this.manager
            .createQueryBuilder(entities_1.ProductMovement, 'productMovement')
            .where('"productMovement".oid = :oid', { oid })
            .andWhere(`"productMovement"."voucherType" IN (${variable_1.VoucherType.Ticket})`)
            .andWhere('"productMovement"."createdAt" BETWEEN :fromTime AND :toTime', { fromTime, toTime })
            .groupBy('"productMovement"."productId"')
            .select('"productMovement"."productId"', 'productId')
            .addSelect('SUM(-"productMovement"."quantity")', 'sumQuantity')
            .addSelect('SUM(-"productMovement"."quantity" * "productMovement"."actualPrice")', 'sumActualMoney')
            .addSelect('SUM(-"productMovement"."costAmount")', 'sumCostAmount')
            .addSelect('SUM((-"productMovement".quantity) * "productMovement"."actualPrice" - (-"productMovement"."costAmount"))', 'sumProfit')
            .limit(limit);
        if (orderBy === 'sumActualMoney') {
            query = query.orderBy('"sumActualMoney"', 'DESC');
        }
        else if (orderBy === 'sumProfit') {
            query = query.orderBy('"sumProfit"', 'DESC');
        }
        else if (orderBy === 'sumQuantity') {
            query = query.orderBy('"sumQuantity"', 'DESC');
        }
        const data = await query.getRawMany();
        return data.map((i) => ({
            productId: i.productId,
            sumQuantity: Number(i.sumQuantity),
            sumCostAmount: Number(i.sumCostAmount),
            sumActualMoney: Number(i.sumActualMoney),
            sumProfit: Number(i.sumProfit),
        }));
    }
    async topCustomerBestTicket(options) {
        const { oid, fromTime, toTime, orderBy, limit } = options;
        const whereTicket = {
            oid,
            startedAt: (0, typeorm_2.Between)(fromTime.getTime(), toTime.getTime()),
            ticketStatus: (0, typeorm_2.In)([ticket_entity_1.TicketStatus.Debt, ticket_entity_1.TicketStatus.Completed]),
        };
        let query = this.manager
            .createQueryBuilder(entities_1.Ticket, 'ticket')
            .where(whereTicket)
            .groupBy('"ticket"."customerId"')
            .select('"ticket"."customerId"', 'customerId')
            .addSelect('SUM("ticket"."totalCostAmount")', 'sumTotalCostAmount')
            .addSelect('SUM("ticket"."expense")', 'sumExpense')
            .addSelect('SUM("ticket"."surcharge")', 'sumSurcharge')
            .addSelect('SUM("ticket"."totalMoney")', 'sumTotalMoney')
            .addSelect('SUM("ticket"."debt")', 'sumDebt')
            .addSelect('SUM("ticket"."profit")', 'sumProfit')
            .addSelect('COUNT(*)', 'countTicket')
            .limit(limit);
        if (orderBy === 'sumTotalMoney') {
            query = query.orderBy('"sumTotalMoney"', 'DESC');
        }
        else if (orderBy === 'sumProfit') {
            query = query.orderBy('"sumProfit"', 'DESC');
        }
        else if (orderBy === 'countTicket') {
            query = query.orderBy('"countTicket"', 'DESC');
        }
        const data = await query.getRawMany();
        return data.map((i) => ({
            customerId: i.customerId,
            sumTotalCostAmount: Number(i.sumTotalCostAmount),
            sumItemActual: Number(i.sumItemActual),
            sumExpense: Number(i.sumExpense),
            sumSurcharge: Number(i.sumSurcharge),
            sumTotalMoney: Number(i.sumTotalMoney),
            sumDebt: Number(i.sumDebt),
            sumProfit: Number(i.sumProfit),
            countTicket: Number(i.countTicket),
        }));
    }
};
exports.StatisticRepository = StatisticRepository;
exports.StatisticRepository = StatisticRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectEntityManager)()),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _b : Object])
], StatisticRepository);


/***/ }),
/* 127 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketAttributeRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let TicketAttributeRepository = class TicketAttributeRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(manager, ticketAttributeRepository) {
        super(ticketAttributeRepository);
        this.manager = manager;
        this.ticketAttributeRepository = ticketAttributeRepository;
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.TicketAttribute.fromRaw(raw);
    }
    async insertManyFullFieldAndReturnEntity(data) {
        const raws = await this.insertManyAndReturnRaw(data);
        return entities_1.TicketAttribute.fromRaws(raws);
    }
    async insertManyAndReturnEntity(data) {
        const raws = await this.insertManyAndReturnRaw(data);
        return entities_1.TicketAttribute.fromRaws(raws);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.TicketAttribute.fromRaws(raws);
    }
};
exports.TicketAttributeRepository = TicketAttributeRepository;
exports.TicketAttributeRepository = TicketAttributeRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectEntityManager)()),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.TicketAttribute)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], TicketAttributeRepository);


/***/ }),
/* 128 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketLaboratoryRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const ticket_laboratory_entity_1 = __webpack_require__(54);
const postgresql_repository_1 = __webpack_require__(77);
let TicketLaboratoryRepository = class TicketLaboratoryRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(manager, ticketLaboratoryRepository) {
        super(ticketLaboratoryRepository);
        this.manager = manager;
        this.ticketLaboratoryRepository = ticketLaboratoryRepository;
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.TicketLaboratory.fromRaw(raw);
    }
    async insertManyAndReturnEntity(data) {
        const raws = await this.insertManyAndReturnRaw(data);
        return entities_1.TicketLaboratory.fromRaws(raws);
    }
    async insertManyFullFieldAndReturnEntity(data) {
        const raws = await this.insertManyAndReturnRaw(data);
        return entities_1.TicketLaboratory.fromRaws(raws);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.TicketLaboratory.fromRaws(raws);
    }
    async updateResultList(options) {
        const { oid, ticketId, startedAt, ticketLaboratoryDtoList } = options;
        if (!ticketLaboratoryDtoList.length)
            return;
        const updateResult = await this.manager.query(`
      UPDATE  "TicketLaboratory" AS "tl"
      SET     "attention" = temp.attention,
              "result" = temp.result,
              "startedAt" = ${startedAt},
              "status" = ${ticket_laboratory_entity_1.TicketLaboratoryStatus.Completed}
      FROM (VALUES `
            + ticketLaboratoryDtoList.map((i) => {
                return `(${i.id}, '${i.attention}', '${i.result}')`;
            }).join(', ')
            + `   ) AS temp("id", "attention", "result")
      WHERE   "tl"."id" = temp."id" 
          AND "tl"."oid" = ${oid} 
          AND "tl"."ticketId" = ${ticketId} 
      `);
        if (updateResult[1] != ticketLaboratoryDtoList.length) {
            throw new Error(`Update TicketLaboratory failed, affected = ${updateResult[1]}`);
        }
    }
};
exports.TicketLaboratoryRepository = TicketLaboratoryRepository;
exports.TicketLaboratoryRepository = TicketLaboratoryRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectEntityManager)()),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.TicketLaboratory)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], TicketLaboratoryRepository);


/***/ }),
/* 129 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketProcedureRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let TicketProcedureRepository = class TicketProcedureRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(manager, ticketProcedureRepository) {
        super(ticketProcedureRepository);
        this.manager = manager;
        this.ticketProcedureRepository = ticketProcedureRepository;
    }
    async insertManyAndReturnEntity(data) {
        const raws = await this.insertManyAndReturnRaw(data);
        return entities_1.TicketProcedure.fromRaws(raws);
    }
    async updateQuantityAndDiscount(params) {
        const { oid, ticketId, ticketProcedureList } = params;
        await this.manager.query(`
      UPDATE "TicketProcedure" vp
      SET "discountMoney" = v."discountMoney",
          "discountPercent" = v."discountPercent",
          "discountType" = v."discountType",
          "actualPrice" = v."actualPrice"
      FROM (VALUES `
            + ticketProcedureList
                .map((i) => {
                return (`(${i.id}, ${ticketId}, ${i.procedureId},`
                    + ` ${i.discountMoney}, ${i.discountPercent}, '${i.discountType}', ${i.actualPrice})`);
            })
                .join(', ')
            + `   ) AS v("id", "ticketId", "procedureId", 
                   "discountMoney", "discountPercent", "discountType", "actualPrice"
                  )
      WHERE vp."id" = v."id" AND vp."ticketId" = v."ticketId"
          AND vp."procedureId" = v."procedureId" AND vp."oid" = ${oid};    
      `);
    }
    async topProcedureBestSelling(options) {
        const { condition, orderBy, limit } = options;
        const where = this.getWhereOptions(condition);
        let query = this.manager
            .createQueryBuilder(entities_1.TicketProcedure, 'ticketProcedure')
            .where(where)
            .groupBy('"ticketProcedure"."procedureId"')
            .select('"ticketProcedure"."procedureId"', 'procedureId')
            .addSelect('SUM("ticketProcedure".quantity)', 'sumQuantity')
            .addSelect('SUM("ticketProcedure".quantity * "ticketProcedure"."actualPrice")', 'sumActualMoney')
            .limit(limit);
        if (orderBy === 'sumActualMoney') {
            query = query.orderBy('"sumActualMoney"', 'DESC');
        }
        else if (orderBy === 'sumQuantity') {
            query = query.orderBy('"sumQuantity"', 'DESC');
        }
        const data = await query.getRawMany();
        return data.map((i) => ({
            procedureId: i.procedureId,
            sumQuantity: Number(i.sumQuantity),
            sumActualMoney: Number(i.sumActualMoney),
        }));
    }
};
exports.TicketProcedureRepository = TicketProcedureRepository;
exports.TicketProcedureRepository = TicketProcedureRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectEntityManager)()),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.TicketProcedure)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], TicketProcedureRepository);


/***/ }),
/* 130 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketProductRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let TicketProductRepository = class TicketProductRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(manager, ticketProductRepository) {
        super(ticketProductRepository);
        this.manager = manager;
        this.ticketProductRepository = ticketProductRepository;
    }
    async insertManyAndReturnEntity(data) {
        const raws = await this.insertManyAndReturnRaw(data);
        return entities_1.TicketProduct.fromRaws(raws);
    }
    async updateQuantityAndDiscount(params) {
    }
};
exports.TicketProductRepository = TicketProductRepository;
exports.TicketProductRepository = TicketProductRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectEntityManager)()),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.TicketProduct)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], TicketProductRepository);


/***/ }),
/* 131 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketRadiologyRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let TicketRadiologyRepository = class TicketRadiologyRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(manager, ticketRadiologyRepository) {
        super(ticketRadiologyRepository);
        this.manager = manager;
        this.ticketRadiologyRepository = ticketRadiologyRepository;
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.TicketRadiology.fromRaw(raw);
    }
    async insertManyAndReturnEntity(data) {
        const raws = await this.insertManyAndReturnRaw(data);
        return entities_1.TicketRadiology.fromRaws(raws);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.TicketRadiology.fromRaws(raws);
    }
};
exports.TicketRadiologyRepository = TicketRadiologyRepository;
exports.TicketRadiologyRepository = TicketRadiologyRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectEntityManager)()),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.TicketRadiology)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], TicketRadiologyRepository);


/***/ }),
/* 132 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketUserRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let TicketUserRepository = class TicketUserRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(manager, ticketUserRepository) {
        super(ticketUserRepository);
        this.manager = manager;
        this.ticketUserRepository = ticketUserRepository;
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.TicketUser.fromRaw(raw);
    }
    async insertManyAndReturnEntity(data) {
        const raws = await this.insertManyAndReturnRaw(data);
        return entities_1.TicketUser.fromRaws(raws);
    }
    async insertManyFullFieldAndReturnEntity(data) {
        const raws = await this.insertManyAndReturnRaw(data);
        return entities_1.TicketUser.fromRaws(raws);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.TicketUser.fromRaws(raws);
    }
};
exports.TicketUserRepository = TicketUserRepository;
exports.TicketUserRepository = TicketUserRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectEntityManager)()),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.TicketUser)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], TicketUserRepository);


/***/ }),
/* 133 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketPayDebt = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const ticket_entity_1 = __webpack_require__(50);
let TicketPayDebt = class TicketPayDebt {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async payDebt(params) {
        const { oid, ticketId, time, money } = params;
        const PREFIX = `ticketId=${ticketId} pay debt failed`;
        if (money <= 0) {
            throw new Error(`${PREFIX}: money = ${money}`);
        }
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                oid,
                id: ticketId,
                ticketStatus: ticket_entity_1.TicketStatus.Debt,
                totalMoney: (0, typeorm_1.Raw)((alias) => `${alias} >= (paid + :money)`, { money }),
            };
            const setTicket = {
                ticketStatus: () => `CASE 
                              WHEN("totalMoney" > paid + ${money}) THEN ${ticket_entity_1.TicketStatus.Debt} 
                              ELSE ${ticket_entity_1.TicketStatus.Completed} 
                            END
                          `,
                paid: () => `paid + ${money}`,
                debt: () => `debt - ${money}`,
            };
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticket = entities_1.Ticket.fromRaw(ticketUpdateResult.raw[0]);
            const whereCustomer = { oid, id: ticket.customerId };
            const customerUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Customer)
                .where(whereCustomer)
                .set({
                debt: () => `debt - ${money}`,
            })
                .returning('*')
                .execute();
            if (customerUpdateResult.affected !== 1) {
                throw new Error(`${PREFIX}: customerId=${ticket.customerId} update failed`);
            }
            const customer = entities_1.Customer.fromRaw(customerUpdateResult.raw[0]);
            const customerCloseDebt = customer.debt;
            const customerOpenDebt = customerCloseDebt + money;
            const customerPaymentInsert = {
                oid,
                customerId: ticket.customerId,
                ticketId,
                createdAt: time,
                paymentType: variable_1.PaymentType.PayDebt,
                paid: money,
                debit: -money,
                openDebt: customerOpenDebt,
                closeDebt: customerCloseDebt,
                note: '',
                description: '',
            };
            const customerPaymentInsertResult = await manager
                .createQueryBuilder()
                .insert()
                .into(entities_1.CustomerPayment)
                .values(customerPaymentInsert)
                .returning('*')
                .execute();
            const [customerPayment] = entities_1.CustomerPayment.fromRaws(customerPaymentInsertResult.raw);
            if (!customerPayment) {
                throw new Error(`${PREFIX}: Insert CustomerPayment failed: ${JSON.stringify(customerPaymentInsertResult)}`);
            }
            return { ticketBasic: ticket, customerPayment, customer };
        });
    }
};
exports.TicketPayDebt = TicketPayDebt;
exports.TicketPayDebt = TicketPayDebt = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], TicketPayDebt);


/***/ }),
/* 134 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketPaymentAndClose = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const ticket_entity_1 = __webpack_require__(50);
let TicketPaymentAndClose = class TicketPaymentAndClose {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async paymentAndClose(params) {
        const { oid, ticketId, time, money } = params;
        const PREFIX = `ticketId=${ticketId} close failed`;
        if (money < 0) {
            throw new Error(`${PREFIX}: money = ${money}`);
        }
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                oid,
                id: ticketId,
                ticketStatus: (0, typeorm_1.In)([ticket_entity_1.TicketStatus.Executing]),
                totalMoney: (0, typeorm_1.Raw)((alias) => `${alias} >= (paid + :money)`, { money }),
            };
            const ticketUpdateTime = await manager.update(entities_1.Ticket, whereTicket, {
                updatedAt: Date.now(),
            });
            if (ticketUpdateTime.affected !== 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticketProcedureList = await manager.find(entities_1.TicketProcedure, {
                where: { ticketId },
            });
            const ticketProductList = await manager.find(entities_1.TicketProduct, {
                where: { ticketId },
            });
            const ticketLaboratoryList = await manager.find(entities_1.TicketLaboratory, {
                where: { ticketId },
            });
            const ticketRadiologyList = await manager.find(entities_1.TicketRadiology, {
                where: { ticketId },
            });
            const procedureDiscount = ticketProcedureList.reduce((acc, item) => {
                return acc + item.discountMoney * item.quantity;
            }, 0);
            const productDiscount = ticketProductList.reduce((acc, item) => {
                return acc + item.discountMoney * item.quantity;
            }, 0);
            const laboratoryDiscount = ticketLaboratoryList.reduce((acc, item) => {
                return acc + item.discountMoney;
            }, 0);
            const radiologyDiscount = ticketRadiologyList.reduce((acc, item) => {
                return acc + item.discountMoney;
            }, 0);
            const itemsDiscount = procedureDiscount + productDiscount + laboratoryDiscount + radiologyDiscount;
            const setTicket = {
                ticketStatus: () => `CASE 
                                WHEN("totalMoney" = paid + ${money}) THEN ${ticket_entity_1.TicketStatus.Completed} 
                                ELSE ${ticket_entity_1.TicketStatus.Debt} 
                              END
                            `,
                paid: () => `paid + ${money}`,
                debt: () => `debt - ${money}`,
                itemsDiscount,
                profit: () => `"totalMoney" - "totalCostAmount" - "expense"`,
                endedAt: time,
            };
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticket = entities_1.Ticket.fromRaw(ticketUpdateResult.raw[0]);
            if (ticket.debt == 0 && money == 0)
                return { ticketBasic: ticket };
            let customer;
            if (ticket.debt > 0) {
                const whereCustomer = { oid, id: ticket.customerId };
                const customerUpdateResult = await manager
                    .createQueryBuilder()
                    .update(entities_1.Customer)
                    .where(whereCustomer)
                    .set({
                    debt: () => `debt + ${ticket.debt}`,
                })
                    .returning('*')
                    .execute();
                if (customerUpdateResult.affected !== 1) {
                    throw new Error(`${PREFIX}: customerId=${ticket.customerId} update failed`);
                }
                customer = entities_1.Customer.fromRaw(customerUpdateResult.raw[0]);
            }
            else {
                customer = await manager.findOneBy(entities_1.Customer, { oid, id: ticket.customerId });
            }
            const customerCloseDebt = customer.debt;
            const customerOpenDebt = customerCloseDebt - ticket.debt;
            const customerPaymentInsert = {
                oid,
                customerId: ticket.customerId,
                ticketId,
                createdAt: time,
                paymentType: variable_1.PaymentType.Close,
                paid: money,
                debit: ticket.debt,
                openDebt: customerOpenDebt,
                closeDebt: customerCloseDebt,
                note: '',
                description: '',
            };
            const customerPaymentInsertResult = await manager
                .createQueryBuilder()
                .insert()
                .into(entities_1.CustomerPayment)
                .values(customerPaymentInsert)
                .returning('*')
                .execute();
            const customerPaymentList = entities_1.CustomerPayment.fromRaws(customerPaymentInsertResult.raw);
            if (!customerPaymentList.length) {
                throw new Error(`${PREFIX}: Insert CustomerPayment failed: `
                    + `${JSON.stringify(customerPaymentInsertResult)}`);
            }
            const customerPayment = customerPaymentList[0];
            return { ticketBasic: ticket, customer, customerPayment };
        });
    }
};
exports.TicketPaymentAndClose = TicketPaymentAndClose;
exports.TicketPaymentAndClose = TicketPaymentAndClose = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], TicketPaymentAndClose);


/***/ }),
/* 135 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketPrepayment = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const ticket_entity_1 = __webpack_require__(50);
let TicketPrepayment = class TicketPrepayment {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async prepayment(params) {
        const { oid, ticketId, time, money } = params;
        const PREFIX = `ticketId=${ticketId} prepayment failed`;
        if (money <= 0) {
            throw new Error(`${PREFIX}: money = ${money}`);
        }
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                oid,
                id: ticketId,
                ticketStatus: (0, typeorm_1.In)([
                    ticket_entity_1.TicketStatus.Schedule,
                    ticket_entity_1.TicketStatus.Draft,
                    ticket_entity_1.TicketStatus.Approved,
                    ticket_entity_1.TicketStatus.Executing,
                ]),
            };
            const setTicket = {
                ticketStatus: () => `CASE 
            WHEN("ticketStatus" IN (${ticket_entity_1.TicketStatus.Schedule}, ${ticket_entity_1.TicketStatus.Draft})) 
                THEN ${ticket_entity_1.TicketStatus.Approved} 
            ELSE "ticketStatus"
          END
        `,
                paid: () => `paid + ${money}`,
                debt: () => `debt - ${money}`,
            };
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticket = entities_1.Ticket.fromRaw(ticketUpdateResult.raw[0]);
            const customer = await manager.findOneBy(entities_1.Customer, {
                oid,
                id: ticket.customerId,
            });
            const customerCloseDebt = customer.debt;
            const customerOpenDebt = customer.debt;
            const customerPaymentInsert = {
                oid,
                customerId: ticket.customerId,
                ticketId,
                createdAt: time,
                paymentType: variable_1.PaymentType.Prepayment,
                paid: money,
                debit: 0,
                openDebt: customerOpenDebt,
                closeDebt: customerCloseDebt,
                note: '',
                description: '',
            };
            const customerPaymentInsertResult = await manager
                .createQueryBuilder()
                .insert()
                .into(entities_1.CustomerPayment)
                .values(customerPaymentInsert)
                .returning('*')
                .execute();
            const [customerPayment] = entities_1.CustomerPayment.fromRaws(customerPaymentInsertResult.raw);
            if (!customerPayment) {
                throw new Error(`${PREFIX}: Insert CustomerPayment failed: ${JSON.stringify(customerPaymentInsertResult)}`);
            }
            return { ticketBasic: ticket, customer, customerPayment };
        });
    }
};
exports.TicketPrepayment = TicketPrepayment;
exports.TicketPrepayment = TicketPrepayment = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], TicketPrepayment);


/***/ }),
/* 136 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketSendProduct = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const object_helper_1 = __webpack_require__(85);
const time_helper_1 = __webpack_require__(119);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const ticket_entity_1 = __webpack_require__(50);
let TicketSendProduct = class TicketSendProduct {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async sendProduct(params) {
        const { oid, ticketId, time, allowNegativeQuantity } = params;
        const PREFIX = `TicketId = ${ticketId}, sendProductAndPayment failed`;
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                oid,
                id: ticketId,
                ticketStatus: (0, typeorm_1.In)([ticket_entity_1.TicketStatus.Draft, ticket_entity_1.TicketStatus.Approved, ticket_entity_1.TicketStatus.Executing]),
            };
            const setTicket = {
                ticketStatus: ticket_entity_1.TicketStatus.Executing,
            };
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed:`
                    + ` ticketUpdateResult = ${JSON.stringify(ticketUpdateResult)}`);
            }
            const ticket = entities_1.Ticket.fromRaw(ticketUpdateResult.raw[0]);
            const whereTicketProductSend = {
                oid,
                ticketId,
                deliveryStatus: variable_1.DeliveryStatus.Pending,
                quantity: (0, typeorm_1.MoreThan)(0),
            };
            const setTicketProductSend = {
                deliveryStatus: variable_1.DeliveryStatus.Delivered,
            };
            const ticketProductSendListUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.TicketProduct)
                .where(whereTicketProductSend)
                .set(setTicketProductSend)
                .returning('*')
                .execute();
            const ticketProductSendList = entities_1.TicketProduct.fromRaws(ticketProductSendListUpdateResult.raw);
            const productIdMapValue = {};
            const batchIdMapValue = {};
            for (let i = 0; i < ticketProductSendList.length; i++) {
                const { productId, batchId, quantity, costAmount } = ticketProductSendList[i];
                if (!productIdMapValue[productId]) {
                    productIdMapValue[productId] = {
                        quantitySend: 0,
                        costAmountSend: 0,
                        openQuantity: 0,
                        openCostAmount: 0,
                        hasManageQuantity: 1,
                    };
                }
                productIdMapValue[productId].quantitySend += quantity;
                productIdMapValue[productId].costAmountSend += costAmount;
                if (batchId != 0) {
                    if (!batchIdMapValue[batchId]) {
                        batchIdMapValue[batchId] = { quantitySend: 0, openQuantity: 0 };
                    }
                    batchIdMapValue[batchId].quantitySend += quantity;
                }
            }
            let productList = [];
            let productMap = {};
            const productIdEntriesValue = Object.entries(productIdMapValue);
            if (productIdEntriesValue.length) {
                const productUpdateResult = await manager.query(`
          UPDATE "Product" AS "product"
          SET "quantity"    = CASE 
                                  WHEN  (product."hasManageQuantity" = 0) THEN 0 
                                  ELSE "product"."quantity" - temp."quantitySend"
                              END,
              "costAmount"  = CASE 
                                  WHEN  (product."hasManageQuantity" = 0) THEN 0 
                                  ELSE "product"."costAmount" - temp."costAmountSend"
                              END
          FROM (VALUES `
                    + productIdEntriesValue
                        .map(([productId, value]) => {
                        return `(${productId}, ${value.quantitySend}, ${value.costAmountSend})`;
                    })
                        .join(', ')
                    + `   ) AS temp("productId", "quantitySend", "costAmountSend")
          WHERE   "product"."id" = temp."productId" 
              AND "product"."oid" = ${oid} 
          RETURNING "product".*;   
          `);
                if (productUpdateResult[1] != productIdEntriesValue.length) {
                    throw new Error(`${PREFIX}: Update Product failed, ${JSON.stringify(productUpdateResult)}`);
                }
                productList = entities_1.Product.fromRaws(productUpdateResult[0]);
                productMap = (0, object_helper_1.arrayToKeyValue)(productList, 'id');
                if (!allowNegativeQuantity) {
                    productList.forEach((i) => {
                        if (i.quantity < 0) {
                            throw new Error(`Sản phẩm ${i.brandName} không đủ số lượng tồn kho`);
                        }
                    });
                }
            }
            let batchList = [];
            const batchIdEntriesSelect = Object.entries(batchIdMapValue);
            if (batchIdEntriesSelect.length) {
                const batchUpdateResult = await manager.query(`
          UPDATE "Batch" "batch"
          SET "quantity" = "batch"."quantity" - temp."quantitySend"
          FROM (VALUES `
                    + batchIdEntriesSelect
                        .map(([batchId, value]) => `(${batchId}, ${value.quantitySend})`)
                        .join(', ')
                    + `   ) AS temp("batchId", "quantitySend")
          WHERE   "batch"."id" = temp."batchId" 
              AND "batch"."oid" = ${oid}
          RETURNING "batch".*;        
          `);
                if (batchUpdateResult[1] != batchIdEntriesSelect.length) {
                    throw new Error(`${PREFIX}: Update Batch, affected = ${batchUpdateResult[1]}`);
                }
                batchList = entities_1.Batch.fromRaws(batchUpdateResult[0]);
                if (!allowNegativeQuantity) {
                    batchList.forEach((i) => {
                        if (i.quantity < 0) {
                            const product = productMap[i.productId];
                            throw new Error(`Sản phẩm ${product.brandName},`
                                + ` lô ${i.lotNumber} HSD ${time_helper_1.DTimer.timeToText(i.expiryDate, 'DD/MM/YYYY')}`
                                + ` không đủ số lượng tồn kho`);
                        }
                    });
                }
                const batchZeroQuantityList = batchList.filter((i) => i.quantity === 0);
                if (batchZeroQuantityList.length) {
                    const productReCalculatorIds = batchZeroQuantityList.map((i) => i.productId);
                    const productReCalculatorResult = await manager.query(`
              UPDATE "Product" product
              SET "expiryDate" = (
                  SELECT MIN("expiryDate")
                  FROM "Batch" batch
                  WHERE   batch."productId" = product.id
                      AND batch."expiryDate" IS NOT NULL
                      AND batch."quantity" <> 0
              )
              WHERE product."hasManageBatches" = 1
                  AND "product"."id" IN (${productReCalculatorIds.toString()})
              RETURNING "product".*;  
            `);
                    const productReCalculatorList = entities_1.Product.fromRaws(productReCalculatorResult[0]);
                    for (let i = 0; i < productList.length; i++) {
                        const productId = productList[i].id;
                        const productReCalculatorFind = productReCalculatorList.find((i) => i.id === productId);
                        if (productReCalculatorFind) {
                            productList[i] = productReCalculatorFind;
                        }
                    }
                }
            }
            productList.forEach((i) => {
                const currentMap = productIdMapValue[i.id];
                currentMap.hasManageQuantity = i.hasManageQuantity;
                if (currentMap.hasManageQuantity == 0) {
                    currentMap.openQuantity = 0;
                    currentMap.openCostAmount = 0;
                    currentMap.quantitySend = 0;
                    currentMap.costAmountSend = 0;
                }
                else {
                    currentMap.openQuantity = i.quantity + currentMap.quantitySend;
                    currentMap.openCostAmount = i.costAmount + currentMap.costAmountSend;
                }
            });
            batchList.forEach((i) => {
                const currentMap = batchIdMapValue[i.id];
                currentMap.openQuantity = i.quantity + currentMap.quantitySend;
            });
            const productMovementListDraft = ticketProductSendList.map((ticketProductSend) => {
                const currentMap = productIdMapValue[ticketProductSend.productId];
                if (!currentMap) {
                    throw new Error(`${PREFIX}: Not found movement with ${ticketProductSend.productId}`);
                }
                const quantitySend = currentMap.hasManageQuantity ? ticketProductSend.quantity : 0;
                const costAmountSend = currentMap.hasManageQuantity ? ticketProductSend.costAmount : 0;
                const draft = {
                    oid,
                    productId: ticketProductSend.productId,
                    voucherId: ticketId,
                    contactId: ticket.customerId,
                    voucherType: variable_1.VoucherType.Ticket,
                    isRefund: 0,
                    createdAt: time,
                    unitRate: ticketProductSend.unitRate,
                    actualPrice: ticketProductSend.actualPrice,
                    expectedPrice: ticketProductSend.expectedPrice,
                    openQuantity: currentMap.openQuantity,
                    quantity: -ticketProductSend.quantity,
                    closeQuantity: currentMap.openQuantity - quantitySend,
                    openCostAmount: currentMap.openCostAmount,
                    costAmount: -ticketProductSend.costAmount,
                    closeCostAmount: currentMap.openCostAmount - costAmountSend,
                };
                currentMap.openQuantity = draft.closeQuantity;
                currentMap.openCostAmount = draft.closeCostAmount;
                return draft;
            });
            if (productMovementListDraft.length) {
                await manager.insert(entities_1.ProductMovement, productMovementListDraft);
            }
            const batchMovementListDraft = ticketProductSendList
                .filter((i) => i.batchId !== 0)
                .map((ticketProductSend) => {
                const currentMap = batchIdMapValue[ticketProductSend.batchId];
                if (!currentMap) {
                    throw new Error(`${PREFIX}: Not found ${ticketProductSend.batchId}` + ` when create batch movement`);
                }
                const quantitySend = ticketProductSend.quantity;
                const draft = {
                    oid,
                    productId: ticketProductSend.productId,
                    batchId: ticketProductSend.batchId,
                    voucherId: ticketId,
                    contactId: ticket.customerId,
                    voucherType: variable_1.VoucherType.Ticket,
                    isRefund: 0,
                    createdAt: time,
                    unitRate: ticketProductSend.unitRate,
                    actualPrice: ticketProductSend.actualPrice,
                    expectedPrice: ticketProductSend.expectedPrice,
                    openQuantity: currentMap.openQuantity,
                    quantity: -quantitySend,
                    closeQuantity: currentMap.openQuantity - quantitySend,
                };
                currentMap.openQuantity = draft.closeQuantity;
                return draft;
            });
            if (batchMovementListDraft.length) {
                await manager.insert(entities_1.BatchMovement, batchMovementListDraft);
            }
            return { ticketBasic: ticket, productList, batchList };
        });
    }
};
exports.TicketSendProduct = TicketSendProduct;
exports.TicketSendProduct = TicketSendProduct = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], TicketSendProduct);


/***/ }),
/* 137 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketStatisticRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let TicketStatisticRepository = class TicketStatisticRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, manager, ticketRepository) {
        super(ticketRepository);
        this.dataSource = dataSource;
        this.manager = manager;
        this.ticketRepository = ticketRepository;
    }
    async statistic(options) {
        const { groupTimeType, condition } = options;
        const where = this.getWhereOptions(condition);
        let query = this.manager
            .createQueryBuilder(entities_1.Ticket, 'ticket')
            .where(where)
            .select([
            'COUNT(*) AS "countTicket"',
            'SUM("totalMoney") AS "sumTotalMoney"',
            'SUM("totalCostAmount") AS "sumTotalCostAmount"',
            'SUM("procedureMoney") AS "sumProcedureMoney"',
            'SUM("productMoney") AS "sumProductMoney"',
            'SUM("radiologyMoney") AS "sumRadiologyMoney"',
            'SUM("laboratoryMoney") AS "sumLaboratoryMoney"',
            'SUM("surcharge") AS "sumSurcharge"',
            'SUM("expense") AS "sumExpense"',
            'SUM("discountMoney" + "itemsDiscount") AS "sumDiscountMoney"',
            'SUM("profit") AS "sumProfit"',
            'SUM("debt") AS "sumDebt"',
        ]);
        if (groupTimeType === 'month') {
            query = query.addSelect(['"year"', '"month"']).groupBy('"year"').addGroupBy('"month"');
        }
        if (groupTimeType === 'date') {
            query = query
                .addSelect(['"year"', '"month"', '"date"'])
                .groupBy('"year"')
                .addGroupBy('"month"')
                .addGroupBy('"date"');
        }
        const data = await query.getRawMany();
        return data.map((i) => ({
            year: i.year,
            month: i.month,
            date: i.date,
            countTicket: Number(i.countTicket),
            sumTotalMoney: Number(i.sumTotalMoney),
            sumTotalCostAmount: Number(i.sumTotalCostAmount),
            sumProcedureMoney: Number(i.sumProcedureMoney),
            sumProductMoney: Number(i.sumProductMoney),
            sumRadiologyMoney: Number(i.sumRadiologyMoney),
            sumLaboratoryMoney: Number(i.sumLaboratoryMoney),
            sumSurcharge: Number(i.sumSurcharge),
            sumExpense: Number(i.sumExpense),
            sumDiscountMoney: Number(i.sumDiscountMoney),
            sumProfit: Number(i.sumProfit),
            sumDebt: Number(i.sumDebt),
        }));
    }
};
exports.TicketStatisticRepository = TicketStatisticRepository;
exports.TicketStatisticRepository = TicketStatisticRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectEntityManager)()),
    __param(2, (0, typeorm_1.InjectRepository)(entities_1.Ticket)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _b : Object, typeof (_c = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _c : Object])
], TicketStatisticRepository);


/***/ }),
/* 138 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const time_helper_1 = __webpack_require__(119);
const entities_1 = __webpack_require__(36);
const ticket_product_entity_1 = __webpack_require__(61);
const ticket_entity_1 = __webpack_require__(50);
const postgresql_repository_1 = __webpack_require__(77);
let TicketRepository = class TicketRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, manager, ticketRepository) {
        super(ticketRepository);
        this.dataSource = dataSource;
        this.manager = manager;
        this.ticketRepository = ticketRepository;
    }
    async queryOne(options) {
        var _a, _b, _c, _d;
        const { condition, relation } = options;
        let query = this.manager
            .createQueryBuilder(entities_1.Ticket, 'ticket')
            .where('ticket.id = :id', { id: condition.id })
            .andWhere('ticket.oid = :oid', { oid: condition.oid });
        if (relation === null || relation === void 0 ? void 0 : relation.customer)
            query = query.leftJoinAndSelect('ticket.customer', 'customer');
        if (relation === null || relation === void 0 ? void 0 : relation.customerPaymentList) {
            query = query.leftJoinAndSelect('ticket.customerPaymentList', 'customerPayment');
            query.addOrderBy('customerPayment.id', 'ASC');
        }
        if (relation === null || relation === void 0 ? void 0 : relation.ticketExpenseList) {
            query = query.leftJoinAndSelect('ticket.ticketExpenseList', 'ticketExpenseList');
        }
        if (relation === null || relation === void 0 ? void 0 : relation.ticketSurchargeList) {
            query = query.leftJoinAndSelect('ticket.ticketSurchargeList', 'ticketSurchargeList');
        }
        if (relation === null || relation === void 0 ? void 0 : relation.ticketAttributeList) {
            query = query.leftJoinAndSelect('ticket.ticketAttributeList', 'ticketAttributeList');
        }
        if (relation === null || relation === void 0 ? void 0 : relation.toAppointment) {
            query = query.leftJoinAndMapOne('ticket.toAppointment', entities_1.Appointment, 'toAppointment', 'toAppointment.fromTicketId = ticket.id');
        }
        if (relation === null || relation === void 0 ? void 0 : relation.ticketProductList) {
            query = query.leftJoinAndSelect('ticket.ticketProductList', 'ticketProduct');
            query.addOrderBy('ticketProduct.id', 'ASC');
            if (relation === null || relation === void 0 ? void 0 : relation.ticketProductList.product) {
                query = query.leftJoinAndSelect('ticketProduct.product', 'ticketProduct_product', 'ticketProduct.productId != 0');
            }
            if (relation === null || relation === void 0 ? void 0 : relation.ticketProductList.batch) {
                query = query.leftJoinAndSelect('ticketProduct.batch', 'ticketProduct_batch', 'ticketProduct.batchId != 0');
            }
        }
        if (relation === null || relation === void 0 ? void 0 : relation.ticketProductConsumableList) {
            query = query.leftJoinAndSelect('ticket.ticketProductConsumableList', 'ticketProductConsumable', 'ticketProductConsumable.type = :typeConsumable', { typeConsumable: ticket_product_entity_1.TicketProductType.Consumable });
            query.addOrderBy('ticketProductConsumable.id', 'ASC');
            if (relation === null || relation === void 0 ? void 0 : relation.ticketProductConsumableList.product) {
                query = query.leftJoinAndSelect('ticketProductConsumable.product', 'ticketProductConsumable_product', 'ticketProductConsumable.productId != 0');
            }
            if (relation === null || relation === void 0 ? void 0 : relation.ticketProductConsumableList.batch) {
                query = query.leftJoinAndSelect('ticketProductConsumable.batch', 'ticketProductConsumable_batch', 'ticketProductConsumable.batchId != 0');
            }
        }
        if (relation === null || relation === void 0 ? void 0 : relation.ticketProductPrescriptionList) {
            query = query.leftJoinAndSelect('ticket.ticketProductPrescriptionList', 'ticketProductPrescription', 'ticketProductPrescription.type = :typePrescription', { typePrescription: ticket_product_entity_1.TicketProductType.Prescription });
            query.addOrderBy('ticketProductPrescription.id', 'ASC');
            if (relation === null || relation === void 0 ? void 0 : relation.ticketProductPrescriptionList.product) {
                query = query.leftJoinAndSelect('ticketProductPrescription.product', 'ticketProductPrescription_product', 'ticketProductPrescription.productId != 0');
            }
            if (relation === null || relation === void 0 ? void 0 : relation.ticketProductPrescriptionList.batch) {
                query = query.leftJoinAndSelect('ticketProductPrescription.batch', 'ticketProductPrescription_batch', 'ticketProductPrescription.batchId != 0');
            }
        }
        if (relation === null || relation === void 0 ? void 0 : relation.ticketProcedureList) {
            query = query.leftJoinAndSelect('ticket.ticketProcedureList', 'ticketProcedure');
            query.addOrderBy('ticketProcedure.id', 'ASC');
            if ((_a = relation === null || relation === void 0 ? void 0 : relation.ticketProcedureList) === null || _a === void 0 ? void 0 : _a.procedure) {
                query = query.leftJoinAndSelect('ticketProcedure.procedure', 'procedure', 'ticketProcedure.procedureId != 0');
            }
        }
        if (relation === null || relation === void 0 ? void 0 : relation.ticketLaboratoryList) {
            query = query.leftJoinAndSelect('ticket.ticketLaboratoryList', 'ticketLaboratory');
            query.addOrderBy('ticketLaboratory.id', 'ASC');
            if ((_b = relation === null || relation === void 0 ? void 0 : relation.ticketLaboratoryList) === null || _b === void 0 ? void 0 : _b.laboratoryList) {
                query = query.leftJoinAndSelect('ticketLaboratory.laboratoryList', 'laboratory', 'ticketLaboratory.laboratoryId = laboratory.parentId');
            }
        }
        if (relation === null || relation === void 0 ? void 0 : relation.ticketRadiologyList) {
            query = query.leftJoinAndSelect('ticket.ticketRadiologyList', 'ticketRadiology');
            query.addOrderBy('ticketRadiology.id', 'ASC');
            if ((_c = relation === null || relation === void 0 ? void 0 : relation.ticketRadiologyList) === null || _c === void 0 ? void 0 : _c.radiology) {
                query = query.leftJoinAndSelect('ticketRadiology.radiology', 'radiology', 'ticketRadiology.radiologyId != 0');
            }
        }
        if (relation === null || relation === void 0 ? void 0 : relation.ticketUserList) {
            query = query.leftJoinAndSelect('ticket.ticketUserList', 'ticketUser');
            query.addOrderBy('ticketUser.id', 'ASC');
            if ((_d = relation === null || relation === void 0 ? void 0 : relation.ticketUserList) === null || _d === void 0 ? void 0 : _d.user) {
                query = query.leftJoinAndSelect('ticketUser.user', 'user', 'ticketUser.userId != 0');
            }
        }
        const ticket = await query.getOne();
        return ticket;
    }
    async countToday(oid) {
        const now = new Date();
        const number = await this.countBy({
            oid,
            registeredAt: {
                GTE: time_helper_1.DTimer.startOfDate(now, 7).getTime(),
                LTE: time_helper_1.DTimer.endOfDate(now, 7).getTime(),
            },
        });
        return number;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.Ticket.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.Ticket.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.Ticket.fromRaws(raws);
    }
    async destroy(options) {
        const { oid, ticketId } = options;
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                id: ticketId,
                oid,
                ticketStatus: (0, typeorm_2.In)([ticket_entity_1.TicketStatus.Schedule, ticket_entity_1.TicketStatus.Draft, ticket_entity_1.TicketStatus.Cancelled]),
            };
            const ticketDeleteResult = await manager.delete(entities_1.Ticket, whereTicket);
            if (ticketDeleteResult.affected !== 1) {
                throw new Error(`Destroy Ticket ${ticketId} failed: Status invalid`);
            }
            await manager.delete(entities_1.TicketAttribute, { oid, ticketId });
            await manager.delete(entities_1.TicketProduct, { oid, ticketId });
            await manager.delete(entities_1.TicketProcedure, { oid, ticketId });
            await manager.delete(entities_1.TicketRadiology, { oid, ticketId });
            await manager.delete(entities_1.TicketLaboratory, { oid, ticketId });
            await manager.delete(entities_1.TicketSurcharge, { oid, ticketId });
            await manager.delete(entities_1.TicketExpense, { oid, ticketId });
            await manager.delete(entities_1.TicketUser, { oid, ticketId });
        });
    }
    async refreshLaboratoryMoney(options) {
        const { oid, ticketId } = options;
        const updateResult = await this.manager.query(`
        UPDATE  "Ticket" "ticket" 
        SET     "laboratoryMoney"  = "temp"."sumActualPrice",
                "totalMoney"      = "ticket"."totalMoney" - "ticket"."laboratoryMoney" 
                                        + temp."sumActualPrice",
                "debt"            = "ticket"."debt" - "ticket"."laboratoryMoney" 
                                        + temp."sumActualPrice",
                "profit"          = "ticket"."profit" - "ticket"."laboratoryMoney" 
                                        + temp."sumActualPrice"
        FROM    ( 
                SELECT "ticketId", SUM("actualPrice") as "sumActualPrice"
                    FROM "TicketLaboratory" 
                    WHERE "ticketId" = (${ticketId}) AND "oid" = ${oid}
                    GROUP BY "ticketId" 
                ) AS "temp" 
        WHERE   "ticket"."id" = "temp"."ticketId" 
                    AND "ticket"."oid" = ${oid}
        RETURNING ticket.*
    `);
        return entities_1.Ticket.fromRaws(updateResult[0]);
    }
    async refreshRadiologyMoney(options) {
        const { oid, ticketId } = options;
        const updateResult = await this.manager.query(`
        UPDATE  "Ticket" "ticket" 
        SET     "radiologyMoney"  = "temp"."sumActualPrice",
                "totalMoney"      = "ticket"."totalMoney" - "ticket"."radiologyMoney" 
                                        + temp."sumActualPrice",
                "debt"            = "ticket"."debt" - "ticket"."radiologyMoney" 
                                        + temp."sumActualPrice",
                "profit"          = "ticket"."profit" - "ticket"."radiologyMoney" 
                                        + temp."sumActualPrice"
        FROM    ( 
                SELECT "ticketId", SUM("actualPrice") as "sumActualPrice"
                    FROM "TicketRadiology" 
                    WHERE "ticketId" = (${ticketId}) AND "oid" = ${oid}
                    GROUP BY "ticketId" 
                ) AS "temp" 
        WHERE   "ticket"."id" = "temp"."ticketId" 
                    AND "ticket"."oid" = ${oid}
        RETURNING ticket.*
    `);
        return entities_1.Ticket.fromRaws(updateResult[0]);
    }
    async changeLaboratoryMoney(options) {
        const { oid, ticketId, laboratoryMoney } = options;
        const updateResult = await this.manager.query(`
        UPDATE  "Ticket" "ticket" 
        SET     "laboratoryMoney" = ${laboratoryMoney},
                "totalMoney"      = "totalMoney" - "laboratoryMoney" + ${laboratoryMoney},
                "debt"            = "debt" - "laboratoryMoney"  + ${laboratoryMoney},
                "profit"          = "profit" - "laboratoryMoney" + ${laboratoryMoney}
        WHERE   "ticket"."id"     = ${ticketId}
            AND "ticket"."oid"    = ${oid}
        RETURNING ticket.*
    `);
        return entities_1.Ticket.fromRaws(updateResult[0]);
    }
};
exports.TicketRepository = TicketRepository;
exports.TicketRepository = TicketRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectEntityManager)()),
    __param(2, (0, typeorm_1.InjectRepository)(entities_1.Ticket)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _b : Object, typeof (_c = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _c : Object])
], TicketRepository);


/***/ }),
/* 139 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicRefundOverpaid = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const ticket_entity_1 = __webpack_require__(50);
let TicketClinicRefundOverpaid = class TicketClinicRefundOverpaid {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async refundOverpaid(params) {
        const { oid, ticketId, time, money } = params;
        const PREFIX = `ticketId=${ticketId} refund overpaid failed`;
        if (money <= 0) {
            throw new Error(`${PREFIX}: money = ${money}`);
        }
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                oid,
                id: ticketId,
                ticketStatus: (0, typeorm_1.In)([ticket_entity_1.TicketStatus.Approved, ticket_entity_1.TicketStatus.Executing]),
                paid: (0, typeorm_1.Raw)((alias) => `${alias} >= :money`, { money }),
            };
            const setTicket = {
                paid: () => `paid - ${money}`,
                debt: () => `debt + ${money}`,
            };
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticket = entities_1.Ticket.fromRaw(ticketUpdateResult.raw[0]);
            const customer = await manager.findOneBy(entities_1.Customer, {
                oid,
                id: ticket.customerId,
            });
            const customerCloseDebt = customer.debt;
            const customerOpenDebt = customer.debt;
            const customerPaymentInsert = {
                oid,
                customerId: ticket.customerId,
                ticketId,
                createdAt: time,
                paymentType: variable_1.PaymentType.ReceiveRefund,
                paid: -money,
                debit: 0,
                openDebt: customerOpenDebt,
                closeDebt: customerCloseDebt,
                note: '',
                description: '',
            };
            const customerPaymentInsertResult = await manager
                .createQueryBuilder()
                .insert()
                .into(entities_1.CustomerPayment)
                .values(customerPaymentInsert)
                .returning('*')
                .execute();
            const customerPaymentList = entities_1.CustomerPayment.fromRaws(customerPaymentInsertResult.raw);
            if (!customerPaymentList.length) {
                throw new Error(`${PREFIX}: Insert CustomerPayment failed: `
                    + `${JSON.stringify(customerPaymentInsertResult)}`);
            }
            const customerPayment = customerPaymentList[0];
            return { ticketBasic: ticket };
        });
    }
};
exports.TicketClinicRefundOverpaid = TicketClinicRefundOverpaid;
exports.TicketClinicRefundOverpaid = TicketClinicRefundOverpaid = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], TicketClinicRefundOverpaid);


/***/ }),
/* 140 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicReopen = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const ticket_entity_1 = __webpack_require__(50);
let TicketClinicReopen = class TicketClinicReopen {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async reopen(params) {
        const { oid, ticketId, time, description } = params;
        const PREFIX = `ticketId=${ticketId} reopen failed`;
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            var _a, _b;
            const whereTicket = {
                oid,
                id: ticketId,
                ticketStatus: (0, typeorm_1.In)([ticket_entity_1.TicketStatus.Debt, ticket_entity_1.TicketStatus.Completed]),
            };
            const setTicket = {
                ticketStatus: ticket_entity_1.TicketStatus.Executing,
                profit: 0,
                itemsDiscount: 0,
                endedAt: null,
            };
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticket = entities_1.Ticket.fromRaw(ticketUpdateResult.raw[0]);
            let customer;
            if (ticket.debt > 0) {
                const whereCustomer = { oid, id: ticket.customerId };
                const customerUpdateResult = await manager
                    .createQueryBuilder()
                    .update(entities_1.Customer)
                    .where(whereCustomer)
                    .set({
                    debt: () => `debt - ${ticket.debt}`,
                })
                    .returning('*')
                    .execute();
                if (customerUpdateResult.affected !== 1) {
                    throw new Error(`${PREFIX}: customerId=${ticket.customerId} update failed`);
                }
                customer = entities_1.Customer.fromRaw(customerUpdateResult.raw[0]);
                const customerCloseDebt = customer.debt;
                const customerOpenDebt = customerCloseDebt + ticket.debt;
                const customerPaymentDraft = {
                    oid,
                    customerId: ticket.customerId,
                    ticketId,
                    createdAt: time,
                    paymentType: variable_1.PaymentType.Reopen,
                    paid: 0,
                    debit: -ticket.debt,
                    openDebt: customerOpenDebt,
                    closeDebt: customerCloseDebt,
                    note: '',
                    description,
                };
                const customerPaymentInsertResult = await manager.insert(entities_1.CustomerPayment, customerPaymentDraft);
                const customerPaymentId = (_b = (_a = customerPaymentInsertResult.identifiers) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.id;
                if (!customerPaymentId) {
                    throw new Error(`${PREFIX}: Insert CustomerPayment failed:`
                        + ` ${JSON.stringify(customerPaymentInsertResult)}`);
                }
            }
            return { ticketBasic: ticket, customer };
        });
    }
};
exports.TicketClinicReopen = TicketClinicReopen;
exports.TicketClinicReopen = TicketClinicReopen = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], TicketClinicReopen);


/***/ }),
/* 141 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicReturnProduct = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const object_helper_1 = __webpack_require__(85);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const batch_movement_entity_1 = __webpack_require__(42);
const product_movement_entity_1 = __webpack_require__(75);
const ticket_entity_1 = __webpack_require__(50);
let TicketClinicReturnProduct = class TicketClinicReturnProduct {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async returnProductList(params) {
        const { oid, ticketId, time, returnList } = params;
        const PREFIX = `TicketId = ${ticketId}, Return Product failed`;
        if (!returnList.length) {
            throw new Error(`${PREFIX}: returnList.length = 0`);
        }
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                oid,
                id: ticketId,
                ticketStatus: ticket_entity_1.TicketStatus.Executing,
            };
            const setTicketOrigin = {
                updatedAt: Date.now(),
            };
            const ticketOriginUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicketOrigin)
                .returning('*')
                .execute();
            if (ticketOriginUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticketOrigin = entities_1.Ticket.fromRaw(ticketOriginUpdateResult.raw[0]);
            const ticketProductUpdateResult = await manager.query(`
        UPDATE  "TicketProduct" tp
        SET     "costAmount"      = tp."costAmount" - temp."costAmountReturn",
                "quantity"        = tp."quantity" - temp."quantityReturn",
                "quantityReturn"  = tp."quantityReturn" + temp."quantityReturn",
                "deliveryStatus"  = CASE 
                                      WHEN  (tp."quantity" = temp."quantityReturn") 
                                        THEN ${variable_1.DeliveryStatus.NoStock} 
                                      ELSE ${variable_1.DeliveryStatus.Delivered} 
                                    END
        FROM (VALUES `
                + returnList
                    .map((i) => `(${i.ticketProductId}, ${i.quantityReturn}, ${i.costAmountReturn})`)
                    .join(', ')
                + `   ) AS temp("ticketProductId", "quantityReturn", "costAmountReturn"
                        )
        WHERE   tp."oid"            = ${oid}
            AND tp."ticketId"       = ${ticketId}
            AND tp."id"             = temp."ticketProductId"
            AND tp."deliveryStatus" = ${variable_1.DeliveryStatus.Delivered}
        RETURNING tp.*;
        `);
            if (ticketProductUpdateResult[0].length != returnList.length) {
                throw new Error(`${PREFIX}: Update TicketProduct, affected = ${ticketProductUpdateResult[1]}`);
            }
            const ticketProductActionedList = entities_1.TicketProduct.fromRaws(ticketProductUpdateResult[0]);
            const ticketProductActionedMap = (0, object_helper_1.arrayToKeyValue)(ticketProductActionedList, 'id');
            ticketProductActionedList.forEach((i) => {
                if (i.quantity < 0) {
                    throw new Error(`Số lượng trả vượt quá số lượng mua hàng`);
                }
            });
            const productIdMapValue = {};
            const batchIdMapValue = {};
            for (let i = 0; i < returnList.length; i++) {
                const { quantityReturn, costAmountReturn, ticketProductId } = returnList[i];
                const { productId, batchId } = ticketProductActionedMap[ticketProductId];
                if (!productIdMapValue[productId]) {
                    productIdMapValue[productId] = {
                        quantityReturn: 0,
                        costAmountReturn: 0,
                        openQuantity: 0,
                        openCostAmount: 0,
                        hasManageQuantity: 1,
                    };
                }
                productIdMapValue[productId].quantityReturn += quantityReturn;
                productIdMapValue[productId].costAmountReturn += costAmountReturn;
                if (batchId != 0) {
                    if (!batchIdMapValue[batchId]) {
                        batchIdMapValue[batchId] = { quantityReturn: 0, openQuantity: 0 };
                    }
                    batchIdMapValue[batchId].quantityReturn += quantityReturn;
                }
            }
            let productList = [];
            const productIdEntriesQuantity = Object.entries(productIdMapValue);
            if (productIdEntriesQuantity.length) {
                const productUpdateResult = await manager.query(`
          UPDATE "Product" AS "product"
          SET "quantity"    = CASE 
                                  WHEN  (product."hasManageQuantity" = 0) THEN 0 
                                  ELSE "product"."quantity" + temp."quantityReturn"
                              END,
              "costAmount"  = CASE 
                                  WHEN  (product."hasManageQuantity" = 0) THEN 0 
                                  ELSE "product"."costAmount" + temp."costAmountReturn"
                              END
          FROM (VALUES `
                    + productIdEntriesQuantity
                        .map(([productId, sl]) => {
                        return `(${productId}, ${sl.quantityReturn}, ${sl.costAmountReturn})`;
                    })
                        .join(', ')
                    + `   ) AS temp("productId", "quantityReturn", "costAmountReturn")
          WHERE   "product"."oid" = ${oid}
              AND "product"."id" = temp."productId"
          RETURNING "product".*;
          `);
                if (productUpdateResult[1] != productIdEntriesQuantity.length) {
                    throw new Error(`${PREFIX}: Update Product, affected = ${productUpdateResult[1]}`);
                }
                productList = entities_1.Product.fromRaws(productUpdateResult[0]);
            }
            const productMap = (0, object_helper_1.arrayToKeyValue)(productList, 'id');
            let batchList = [];
            const batchIdEntriesQuantity = Object.entries(batchIdMapValue);
            if (batchIdEntriesQuantity.length) {
                const batchUpdateResult = await manager.query(`
          UPDATE "Batch" "batch"
          SET "quantity" = "batch"."quantity" + temp."quantityReturn"
          FROM (VALUES `
                    + batchIdEntriesQuantity
                        .map(([batchId, sl]) => `(${batchId}, ${sl.quantityReturn})`)
                        .join(', ')
                    + `   ) AS temp("batchId", "quantityReturn")
          WHERE   "batch"."oid" = ${oid}
              AND "batch"."id" = temp."batchId"
          RETURNING "batch".*;
          `);
                if (batchUpdateResult[1] != batchIdEntriesQuantity.length) {
                    throw new Error(`${PREFIX}: Update Batch, affected = ${batchUpdateResult[1]}`);
                }
                batchList = entities_1.Batch.fromRaws(batchUpdateResult[0]);
                if (batchList.length) {
                    const productReCalculatorIds = batchList.map((i) => i.productId);
                    const productReCalculatorResult = await manager.query(`
              UPDATE "Product" product
              SET "expiryDate" = (
                  SELECT MIN("expiryDate")
                  FROM "Batch" batch
                  WHERE   batch."productId" = product.id
                      AND batch."expiryDate" IS NOT NULL
                      AND batch."quantity" <> 0
              )
              WHERE product."hasManageBatches" = 1
                  AND "product"."id" IN (${productReCalculatorIds.toString()})
              RETURNING "product".*;  
          `);
                    const productReCalculatorList = entities_1.Product.fromRaws(productReCalculatorResult[0]);
                    for (let i = 0; i < productList.length; i++) {
                        const productId = productList[i].id;
                        const productReCalculatorFind = productReCalculatorList.find((i) => {
                            return i.id === productId;
                        });
                        if (productReCalculatorFind) {
                            productList[i] = productReCalculatorFind;
                        }
                    }
                }
            }
            productList.forEach((i) => {
                const currentMap = productIdMapValue[i.id];
                currentMap.hasManageQuantity = i.hasManageQuantity;
                if (currentMap.hasManageQuantity == 0) {
                    currentMap.openQuantity = 0;
                    currentMap.openCostAmount = 0;
                    currentMap.quantityReturn = 0;
                    currentMap.costAmountReturn = 0;
                }
                else {
                    currentMap.openQuantity = i.quantity - currentMap.quantityReturn;
                    currentMap.openCostAmount = i.costAmount - currentMap.costAmountReturn;
                }
            });
            batchList.forEach((i) => {
                const currentMap = batchIdMapValue[i.id];
                currentMap.openQuantity = i.quantity - currentMap.quantityReturn;
            });
            const productMovementListDraft = ticketProductActionedList.map((ticketProductActioned) => {
                const currentMap = productIdMapValue[ticketProductActioned.productId];
                if (!currentMap) {
                    throw new Error(`${PREFIX}: Not found movement with ${ticketProductActioned.productId}`);
                }
                const currentReturn = returnList.find((i) => i.ticketProductId === ticketProductActioned.id);
                const quantityReturn = currentMap.hasManageQuantity ? currentReturn.quantityReturn : 0;
                const costAmountReturn = currentMap.hasManageQuantity ? currentReturn.costAmountReturn : 0;
                const draft = {
                    oid,
                    productId: ticketProductActioned.productId,
                    voucherId: ticketId,
                    contactId: ticketOrigin.customerId,
                    voucherType: variable_1.VoucherType.Ticket,
                    isRefund: 1,
                    createdAt: time,
                    unitRate: ticketProductActioned.unitRate,
                    actualPrice: ticketProductActioned.actualPrice,
                    expectedPrice: ticketProductActioned.expectedPrice,
                    openQuantity: currentMap.openQuantity,
                    quantity: currentReturn.quantityReturn,
                    closeQuantity: currentMap.openQuantity + quantityReturn,
                    openCostAmount: currentMap.openCostAmount,
                    costAmount: currentReturn.costAmountReturn,
                    closeCostAmount: currentMap.openCostAmount + costAmountReturn,
                };
                currentMap.openQuantity = draft.closeQuantity;
                currentMap.openCostAmount = draft.closeCostAmount;
                return draft;
            });
            if (productMovementListDraft.length) {
                await manager.insert(product_movement_entity_1.default, productMovementListDraft);
            }
            const batchMovementsDraft = ticketProductActionedList
                .filter((i) => i.batchId !== 0)
                .map((ticketProductActioned) => {
                const currentMap = batchIdMapValue[ticketProductActioned.batchId];
                if (!currentMap) {
                    throw new Error(`${PREFIX}: Not found movement with ${ticketProductActioned.productId}`);
                }
                const currentReturn = returnList.find((i) => i.ticketProductId === ticketProductActioned.id);
                const quantityReturn = currentReturn.quantityReturn;
                const draft = {
                    oid,
                    productId: ticketProductActioned.productId,
                    batchId: ticketProductActioned.batchId,
                    voucherId: ticketId,
                    contactId: ticketOrigin.customerId,
                    voucherType: variable_1.VoucherType.Ticket,
                    isRefund: 1,
                    createdAt: time,
                    unitRate: ticketProductActioned.unitRate,
                    actualPrice: ticketProductActioned.actualPrice,
                    expectedPrice: ticketProductActioned.expectedPrice,
                    openQuantity: currentMap.openQuantity,
                    quantity: quantityReturn,
                    closeQuantity: currentMap.openQuantity + quantityReturn,
                };
                currentMap.openQuantity = draft.closeQuantity;
                return draft;
            });
            if (batchMovementsDraft.length) {
                await manager.insert(batch_movement_entity_1.default, batchMovementsDraft);
            }
            const ticketProductList = await manager.find(entities_1.TicketProduct, {
                relations: { product: true, batch: true },
                relationLoadStrategy: 'join',
                where: { ticketId },
                order: { id: 'ASC' },
            });
            const productMoney = ticketProductList.reduce((acc, item) => {
                return acc + item.actualPrice * item.quantity;
            }, 0);
            const totalCostAmount = ticketProductList.reduce((acc, item) => {
                return acc + item.costAmount;
            }, 0);
            const itemsActualMoney = ticketOrigin.itemsActualMoney - ticketOrigin.productMoney + productMoney;
            const discountType = ticketOrigin.discountType;
            let discountPercent = ticketOrigin.discountPercent;
            let discountMoney = ticketOrigin.discountMoney;
            if (discountType === variable_1.DiscountType.VND) {
                discountPercent =
                    itemsActualMoney == 0 ? 0 : Math.floor((discountMoney * 100) / itemsActualMoney);
            }
            if (discountType === variable_1.DiscountType.Percent) {
                discountMoney = Math.floor((discountPercent * itemsActualMoney) / 100);
            }
            const totalMoney = itemsActualMoney - discountMoney;
            const setTicket = {
                productMoney,
                totalCostAmount,
                itemsActualMoney,
                discountPercent,
                discountMoney,
                totalMoney,
                debt: () => `${totalMoney} - "paid"`,
            };
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticketBasic = entities_1.Ticket.fromRaw(ticketUpdateResult.raw[0]);
            return {
                ticketBasic,
                productList,
                batchList,
                ticketProductList,
            };
        });
    }
};
exports.TicketClinicReturnProduct = TicketClinicReturnProduct;
exports.TicketClinicReturnProduct = TicketClinicReturnProduct = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], TicketClinicReturnProduct);


/***/ }),
/* 142 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicUpdateItemsMoney = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const ticket_entity_1 = __webpack_require__(50);
let TicketClinicUpdateItemsMoney = class TicketClinicUpdateItemsMoney {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async updateItemsMoney(params) {
        const { oid, ticketId, ticketProductUpdateList, ticketProcedureUpdateList, ticketLaboratoryUpdateList, ticketRadiologyUpdateList, } = params;
        const PREFIX = `ticketId=${ticketId} update items quantity and discount failed`;
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                oid,
                id: ticketId,
                ticketStatus: ticket_entity_1.TicketStatus.Executing,
            };
            const ticketUpdateTime = await manager.update(entities_1.Ticket, whereTicket, {
                updatedAt: Date.now(),
            });
            if (ticketUpdateTime.affected !== 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            if (ticketProductUpdateList.length) {
                const ticketProductUpdateResult = await manager.query(`
          UPDATE "TicketProduct" tp
          SET "quantity"        = temp."quantity",
              "costAmount"      = temp."costAmount",
              "discountMoney"   = temp."discountMoney",
              "discountPercent" = temp."discountPercent",
              "discountType"    = temp."discountType",
              "actualPrice"     = temp."actualPrice",
              "deliveryStatus"  = CASE 
                                      WHEN (temp."quantity" = 0) THEN ${variable_1.DeliveryStatus.NoStock} 
                                      ELSE ${variable_1.DeliveryStatus.Pending} 
                                  END
          FROM (VALUES `
                    + ticketProductUpdateList
                        .map((i) => {
                        return (`(${i.ticketProductId}, ${ticketId}, ${i.productId}, `
                            + `${i.quantity}, ${i.costAmount}, `
                            + `${i.discountMoney}, ${i.discountPercent}, '${i.discountType}', ${i.actualPrice})`);
                    })
                        .join(', ')
                    + `   ) AS temp("ticketProductId", "ticketId", "productId", "quantity", "costAmount",
                       "discountMoney", "discountPercent", "discountType", "actualPrice"
                      )
          WHERE   tp."id"             = temp."ticketProductId"
              AND tp."ticketId"       = temp."ticketId"
              AND tp."productId"      = temp."productId"
              AND tp."deliveryStatus" IN (${variable_1.DeliveryStatus.NoStock}, ${variable_1.DeliveryStatus.Pending}) 
              AND tp."oid"            = ${oid}
          RETURNING tp.*;   
          `);
                if (ticketProductUpdateResult[0].length != ticketProductUpdateList.length) {
                    throw new Error(`${PREFIX}: Update TicketProduct, affected = ${ticketProductUpdateResult[1]}`);
                }
            }
            if (ticketProcedureUpdateList.length) {
                const ticketProcedureUpdateResult = await manager.query(`
          UPDATE "TicketProcedure" tp
          SET "discountMoney"   = temp."discountMoney",
              "discountPercent" = temp."discountPercent",
              "discountType"    = temp."discountType",
              "actualPrice"     = temp."actualPrice"
          FROM (VALUES `
                    + ticketProcedureUpdateList
                        .map((i) => {
                        return (`(${i.ticketProcedureId}, ${ticketId}, ${i.procedureId}, ${i.discountMoney}, `
                            + ` ${i.discountPercent}, '${i.discountType}', ${i.actualPrice})`);
                    })
                        .join(', ')
                    + `   ) AS temp("ticketProcedureId", "ticketId", "procedureId", "discountMoney",
                      "discountPercent", "discountType", "actualPrice"
                      )
          WHERE   tp."id"           = temp."ticketProcedureId"
              AND tp."ticketId"     = temp."ticketId"
              AND tp."procedureId"  = temp."procedureId"
              AND tp."oid"          = ${oid}
          RETURNING tp.*;
          `);
                if (ticketProcedureUpdateResult[0].length != ticketProcedureUpdateList.length) {
                    throw new Error(`${PREFIX}: Update TicketProcedure, affected = ${ticketProcedureUpdateResult[1]}`);
                }
            }
            if (ticketLaboratoryUpdateList.length) {
                const ticketLaboratoryUpdateResult = await manager.query(`
            UPDATE "TicketLaboratory" tp
            SET "discountMoney"   = temp."discountMoney",
                "discountPercent" = temp."discountPercent",
                "discountType"    = temp."discountType",
                "actualPrice"     = temp."actualPrice"
            FROM (VALUES `
                    + ticketLaboratoryUpdateList
                        .map((i) => {
                        return (`(${i.ticketLaboratoryId}, ${ticketId}, ${i.laboratoryId}, ${i.discountMoney}, `
                            + ` ${i.discountPercent}, '${i.discountType}', ${i.actualPrice})`);
                    })
                        .join(', ')
                    + `   ) AS temp("ticketLaboratoryId", "ticketId", "laboratoryId", "discountMoney",
                        "discountPercent", "discountType", "actualPrice"
                        )
            WHERE   tp."id"           = temp."ticketLaboratoryId"
                AND tp."ticketId"     = temp."ticketId"
                AND tp."laboratoryId"  = temp."laboratoryId"
                AND tp."oid"          = ${oid}
            RETURNING tp.*;
            `);
                if (ticketLaboratoryUpdateResult[0].length != ticketLaboratoryUpdateList.length) {
                    throw new Error(`${PREFIX}: Update TicketLaboratory, affected = ${ticketLaboratoryUpdateResult[1]}`);
                }
            }
            if (ticketRadiologyUpdateList.length) {
                const ticketRadiologyUpdateResult = await manager.query(`
            UPDATE "TicketRadiology" tp
            SET "discountMoney"   = temp."discountMoney",
                "discountPercent" = temp."discountPercent",
                "discountType"    = temp."discountType",
                "actualPrice"     = temp."actualPrice"
            FROM (VALUES `
                    + ticketRadiologyUpdateList
                        .map((i) => {
                        return (`(${i.ticketRadiologyId}, ${ticketId}, ${i.radiologyId}, ${i.discountMoney}, `
                            + ` ${i.discountPercent}, '${i.discountType}', ${i.actualPrice})`);
                    })
                        .join(', ')
                    + `   ) AS temp("ticketRadiologyId", "ticketId", "radiologyId", "discountMoney",
                        "discountPercent", "discountType", "actualPrice"
                        )
            WHERE   tp."id"           = temp."ticketRadiologyId"
                AND tp."ticketId"     = temp."ticketId"
                AND tp."radiologyId"  = temp."radiologyId"
                AND tp."oid"          = ${oid}
            RETURNING tp.*;
            `);
                if (ticketRadiologyUpdateResult[0].length != ticketRadiologyUpdateList.length) {
                    throw new Error(`${PREFIX}: Update TicketRadiology, affected = ${ticketRadiologyUpdateResult[1]}`);
                }
            }
            const ticketProcedureList = await manager.find(entities_1.TicketProcedure, {
                relations: { procedure: true },
                relationLoadStrategy: 'join',
                where: { ticketId },
                order: { id: 'ASC' },
            });
            const ticketProductList = await manager.find(entities_1.TicketProduct, {
                relations: { product: true, batch: true },
                relationLoadStrategy: 'join',
                where: { ticketId },
                order: { id: 'ASC' },
            });
            const ticketLaboratoryList = await manager.find(entities_1.TicketLaboratory, {
                where: { ticketId },
                order: { id: 'ASC' },
            });
            const ticketRadiologyList = await manager.find(entities_1.TicketRadiology, {
                relations: { radiology: true },
                relationLoadStrategy: 'join',
                where: { ticketId },
                order: { id: 'ASC' },
            });
            const procedureMoney = ticketProcedureList.reduce((acc, item) => {
                return acc + item.actualPrice * item.quantity;
            }, 0);
            const productMoney = ticketProductList.reduce((acc, item) => {
                return acc + item.actualPrice * item.quantity;
            }, 0);
            const laboratoryMoney = ticketLaboratoryList.reduce((acc, item) => {
                return acc + item.actualPrice;
            }, 0);
            const radiologyMoney = ticketRadiologyList.reduce((acc, item) => {
                return acc + item.actualPrice;
            }, 0);
            const totalCostAmount = ticketProductList.reduce((acc, item) => {
                return acc + item.costAmount;
            }, 0);
            const itemsActualMoney = procedureMoney + productMoney + laboratoryMoney + radiologyMoney;
            const discountMoney = params.discountMoney;
            const discountPercent = params.discountPercent;
            const discountType = params.discountType;
            const totalMoney = itemsActualMoney - discountMoney;
            const setTicket = {
                totalCostAmount,
                procedureMoney,
                productMoney,
                laboratoryMoney,
                radiologyMoney,
                itemsActualMoney,
                discountMoney,
                discountPercent,
                discountType,
                totalMoney,
                debt: () => `${totalMoney} - "paid"`,
                profit: () => `${totalMoney} - ${totalCostAmount} - "expense"`,
            };
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticketBasic = entities_1.Ticket.fromRaw(ticketUpdateResult.raw[0]);
            return {
                ticketBasic,
                ticketProcedureList,
                ticketProductList,
                ticketRadiologyList,
                ticketLaboratoryList,
            };
        });
    }
};
exports.TicketClinicUpdateItemsMoney = TicketClinicUpdateItemsMoney;
exports.TicketClinicUpdateItemsMoney = TicketClinicUpdateItemsMoney = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], TicketClinicUpdateItemsMoney);


/***/ }),
/* 143 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicUpdateTicketLaboratoryList = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const ticket_entity_1 = __webpack_require__(50);
let TicketClinicUpdateTicketLaboratoryList = class TicketClinicUpdateTicketLaboratoryList {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async updateTicketLaboratoryList(params) {
        const { oid, ticketId, ticketLaboratoryListInsert } = params;
        const PREFIX = `ticketId=${ticketId} updateTicketLaboratoryList failed`;
        const transaction = await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                oid,
                id: ticketId,
                ticketStatus: ticket_entity_1.TicketStatus.Executing,
            };
            const setTicketOrigin = {
                updatedAt: Date.now(),
            };
            const ticketOriginUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicketOrigin)
                .returning('*')
                .execute();
            if (ticketOriginUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticketOrigin = entities_1.Ticket.fromRaw(ticketOriginUpdateResult.raw[0]);
            const whereTicketLaboratoryDelete = {
                oid,
                ticketId,
                startedAt: (0, typeorm_1.IsNull)(),
            };
            await manager.delete(entities_1.TicketLaboratory, whereTicketLaboratoryDelete);
            if (ticketLaboratoryListInsert.length) {
                await manager.insert(entities_1.TicketLaboratory, ticketLaboratoryListInsert);
            }
            const ticketLaboratoryList = await manager.find(entities_1.TicketLaboratory, {
                where: { ticketId },
                order: { id: 'ASC' },
            });
            const laboratoryMoney = ticketLaboratoryList.reduce((acc, item) => {
                return acc + item.actualPrice;
            }, 0);
            const itemsActualMoney = ticketOrigin.itemsActualMoney - ticketOrigin.laboratoryMoney + laboratoryMoney;
            const discountType = ticketOrigin.discountType;
            let discountPercent = ticketOrigin.discountPercent;
            let discountMoney = ticketOrigin.discountMoney;
            if (discountType === variable_1.DiscountType.VND) {
                discountPercent =
                    itemsActualMoney == 0 ? 0 : Math.floor((discountMoney * 100) / itemsActualMoney);
            }
            if (discountType === variable_1.DiscountType.Percent) {
                discountMoney = Math.floor((discountPercent * itemsActualMoney) / 100);
            }
            const totalMoney = itemsActualMoney - discountMoney;
            const setTicket = {
                laboratoryMoney,
                itemsActualMoney,
                discountPercent,
                discountMoney,
                totalMoney,
                debt: () => `${totalMoney} - "paid"`,
            };
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticketBasic = entities_1.Ticket.fromRaw(ticketUpdateResult.raw[0]);
            return { ticketBasic, ticketLaboratoryList };
        });
        return transaction;
    }
};
exports.TicketClinicUpdateTicketLaboratoryList = TicketClinicUpdateTicketLaboratoryList;
exports.TicketClinicUpdateTicketLaboratoryList = TicketClinicUpdateTicketLaboratoryList = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], TicketClinicUpdateTicketLaboratoryList);


/***/ }),
/* 144 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicUpdateTicketProcedureList = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const ticket_procedure_entity_1 = __webpack_require__(58);
const ticket_entity_1 = __webpack_require__(50);
let TicketClinicUpdateTicketProcedureList = class TicketClinicUpdateTicketProcedureList {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async updateTicketProcedureList(params) {
        const { oid, ticketId, ticketProcedureListDto } = params;
        const PREFIX = `ticketId=${ticketId} updateTicketProcedureList failed`;
        const transaction = await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                oid,
                id: ticketId,
                ticketStatus: ticket_entity_1.TicketStatus.Executing,
            };
            const setTicketOrigin = {
                updatedAt: Date.now(),
            };
            const ticketOriginUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicketOrigin)
                .returning('*')
                .execute();
            if (ticketOriginUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticketOrigin = entities_1.Ticket.fromRaw(ticketOriginUpdateResult.raw[0]);
            const whereTicketProcedureDelete = {
                oid,
                ticketId,
            };
            await manager.delete(ticket_procedure_entity_1.default, whereTicketProcedureDelete);
            if (ticketProcedureListDto.length) {
                const ticketProcedureListInsert = ticketProcedureListDto.map((i) => {
                    const draft = Object.assign(Object.assign({}, i), { oid,
                        ticketId, customerId: ticketOrigin.customerId, imageIds: JSON.stringify([]), result: '', startedAt: null, status: ticket_procedure_entity_1.TicketProcedureStatus.Completed });
                    return draft;
                });
                await manager.insert(ticket_procedure_entity_1.default, ticketProcedureListInsert);
            }
            const ticketProcedureList = await manager.find(ticket_procedure_entity_1.default, {
                relations: { procedure: true },
                relationLoadStrategy: 'join',
                where: { ticketId },
                order: { id: 'ASC' },
            });
            const procedureMoney = ticketProcedureList.reduce((acc, item) => {
                return acc + item.actualPrice * item.quantity;
            }, 0);
            const itemsActualMoney = ticketOrigin.itemsActualMoney - ticketOrigin.procedureMoney + procedureMoney;
            const discountType = ticketOrigin.discountType;
            let discountPercent = ticketOrigin.discountPercent;
            let discountMoney = ticketOrigin.discountMoney;
            if (discountType === variable_1.DiscountType.VND) {
                discountPercent =
                    itemsActualMoney == 0 ? 0 : Math.floor((discountMoney * 100) / itemsActualMoney);
            }
            if (discountType === variable_1.DiscountType.Percent) {
                discountMoney = Math.floor((discountPercent * itemsActualMoney) / 100);
            }
            const totalMoney = itemsActualMoney - discountMoney;
            const setTicket = {
                procedureMoney,
                itemsActualMoney,
                discountPercent,
                discountMoney,
                totalMoney,
                debt: () => `${totalMoney} - "paid"`,
            };
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticketBasic = entities_1.Ticket.fromRaw(ticketUpdateResult.raw[0]);
            return { ticketBasic, ticketProcedureList };
        });
        return transaction;
    }
};
exports.TicketClinicUpdateTicketProcedureList = TicketClinicUpdateTicketProcedureList;
exports.TicketClinicUpdateTicketProcedureList = TicketClinicUpdateTicketProcedureList = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], TicketClinicUpdateTicketProcedureList);


/***/ }),
/* 145 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicUpdateTicketProductList = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const ticket_product_entity_1 = __webpack_require__(61);
const ticket_entity_1 = __webpack_require__(50);
let TicketClinicUpdateTicketProductList = class TicketClinicUpdateTicketProductList {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async updateTicketProductList(params) {
        const { oid, ticketId, ticketProductListDto, type } = params;
        const PREFIX = `ticketId=${ticketId} updateTicketProductList failed`;
        const transaction = await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                oid,
                id: ticketId,
                ticketStatus: ticket_entity_1.TicketStatus.Executing,
            };
            const setTicketOrigin = {
                updatedAt: Date.now(),
            };
            const ticketOriginUpdateResult = await manager
                .createQueryBuilder()
                .update(ticket_entity_1.default)
                .where(whereTicket)
                .set(setTicketOrigin)
                .returning('*')
                .execute();
            if (ticketOriginUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticketOrigin = ticket_entity_1.default.fromRaw(ticketOriginUpdateResult.raw[0]);
            const whereTicketProductDelete = {
                oid,
                ticketId,
                deliveryStatus: (0, typeorm_1.In)([variable_1.DeliveryStatus.NoStock, variable_1.DeliveryStatus.Pending]),
                type,
            };
            await manager.delete(ticket_product_entity_1.default, whereTicketProductDelete);
            if (ticketProductListDto.length) {
                const ticketProductListInsert = ticketProductListDto.map((i) => {
                    const draft = Object.assign(Object.assign({}, i), { oid,
                        ticketId, customerId: ticketOrigin.customerId, deliveryStatus: variable_1.DeliveryStatus.Pending, quantityReturn: 0, type });
                    return draft;
                });
                await manager.insert(ticket_product_entity_1.default, ticketProductListInsert);
            }
            const ticketProductList = await manager.find(ticket_product_entity_1.default, {
                relations: { product: true, batch: true },
                relationLoadStrategy: 'join',
                where: { ticketId },
                order: { id: 'ASC' },
            });
            const productMoney = ticketProductList.reduce((acc, item) => {
                return acc + item.actualPrice * item.quantity;
            }, 0);
            const totalCostAmount = ticketProductList.reduce((acc, item) => {
                return acc + item.costAmount;
            }, 0);
            const itemsActualMoney = ticketOrigin.itemsActualMoney - ticketOrigin.productMoney + productMoney;
            const discountType = ticketOrigin.discountType;
            let discountPercent = ticketOrigin.discountPercent;
            let discountMoney = ticketOrigin.discountMoney;
            if (discountType === variable_1.DiscountType.VND) {
                discountPercent =
                    itemsActualMoney == 0 ? 0 : Math.floor((discountMoney * 100) / itemsActualMoney);
            }
            if (discountType === variable_1.DiscountType.Percent) {
                discountMoney = Math.floor((discountPercent * itemsActualMoney) / 100);
            }
            const totalMoney = itemsActualMoney - discountMoney;
            const setTicket = {
                productMoney,
                totalCostAmount,
                itemsActualMoney,
                discountPercent,
                discountMoney,
                totalMoney,
                debt: () => `${totalMoney} - "paid"`,
            };
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(ticket_entity_1.default)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticketBasic = ticket_entity_1.default.fromRaw(ticketUpdateResult.raw[0]);
            return { ticketBasic, ticketProductList };
        });
        return transaction;
    }
};
exports.TicketClinicUpdateTicketProductList = TicketClinicUpdateTicketProductList;
exports.TicketClinicUpdateTicketProductList = TicketClinicUpdateTicketProductList = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], TicketClinicUpdateTicketProductList);


/***/ }),
/* 146 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicUpdateTicketRadiologyList = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const ticket_entity_1 = __webpack_require__(50);
let TicketClinicUpdateTicketRadiologyList = class TicketClinicUpdateTicketRadiologyList {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async updateTicketRadiologyList(params) {
        const { oid, ticketId, ticketRadiologyListInsert } = params;
        const PREFIX = `ticketId=${ticketId} updateTicketRadiologyList failed`;
        const transaction = await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                oid,
                id: ticketId,
                ticketStatus: ticket_entity_1.TicketStatus.Executing,
            };
            const setTicketOrigin = {
                updatedAt: Date.now(),
            };
            const ticketOriginUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicketOrigin)
                .returning('*')
                .execute();
            if (ticketOriginUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticketOrigin = entities_1.Ticket.fromRaw(ticketOriginUpdateResult.raw[0]);
            const whereTicketRadiologyDelete = {
                oid,
                ticketId,
                startedAt: (0, typeorm_1.IsNull)(),
            };
            await manager.delete(entities_1.TicketRadiology, whereTicketRadiologyDelete);
            if (ticketRadiologyListInsert.length) {
                await manager.insert(entities_1.TicketRadiology, ticketRadiologyListInsert);
            }
            const ticketRadiologyList = await manager.find(entities_1.TicketRadiology, {
                relations: { radiology: true },
                relationLoadStrategy: 'join',
                where: { ticketId },
                order: { id: 'ASC' },
            });
            const radiologyMoney = ticketRadiologyList.reduce((acc, item) => {
                return acc + item.actualPrice;
            }, 0);
            const itemsActualMoney = ticketOrigin.itemsActualMoney - ticketOrigin.radiologyMoney + radiologyMoney;
            const discountType = ticketOrigin.discountType;
            let discountPercent = ticketOrigin.discountPercent;
            let discountMoney = ticketOrigin.discountMoney;
            if (discountType === variable_1.DiscountType.VND) {
                discountPercent =
                    itemsActualMoney == 0 ? 0 : Math.floor((discountMoney * 100) / itemsActualMoney);
            }
            if (discountType === variable_1.DiscountType.Percent) {
                discountMoney = Math.floor((discountPercent * itemsActualMoney) / 100);
            }
            const totalMoney = itemsActualMoney - discountMoney;
            const setTicket = {
                radiologyMoney,
                itemsActualMoney,
                discountPercent,
                discountMoney,
                totalMoney,
                debt: () => `${totalMoney} - "paid"`,
            };
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticketBasic = entities_1.Ticket.fromRaw(ticketUpdateResult.raw[0]);
            return { ticketBasic, ticketRadiologyList };
        });
        return transaction;
    }
};
exports.TicketClinicUpdateTicketRadiologyList = TicketClinicUpdateTicketRadiologyList;
exports.TicketClinicUpdateTicketRadiologyList = TicketClinicUpdateTicketRadiologyList = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], TicketClinicUpdateTicketRadiologyList);


/***/ }),
/* 147 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketOrderCancel = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const object_helper_1 = __webpack_require__(85);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const batch_movement_entity_1 = __webpack_require__(42);
const ticket_entity_1 = __webpack_require__(50);
let TicketOrderCancel = class TicketOrderCancel {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async cancel(params) {
        const { oid, ticketId, time, description } = params;
        const PREFIX = `ticketId=${ticketId} pay debt failed`;
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                oid,
                id: ticketId,
                ticketStatus: (0, typeorm_1.In)([
                    ticket_entity_1.TicketStatus.Approved,
                    ticket_entity_1.TicketStatus.Executing,
                    ticket_entity_1.TicketStatus.Debt,
                    ticket_entity_1.TicketStatus.Completed,
                ]),
            };
            const setTicketRoot = {
                updatedAt: Date.now(),
            };
            const ticketUpdateRootResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicketRoot)
                .returning('*')
                .execute();
            if (ticketUpdateRootResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticketRoot = entities_1.Ticket.fromRaw(ticketUpdateRootResult.raw[0]);
            const { customerId } = ticketRoot;
            let customer;
            let customerPayment;
            if (ticketRoot.paid !== 0 || ticketRoot.debt !== 0) {
                if ([ticket_entity_1.TicketStatus.Debt].includes(ticketRoot.ticketStatus)) {
                    const whereCustomer = { oid, id: customerId };
                    const customerUpdateResult = await manager
                        .createQueryBuilder()
                        .update(entities_1.Customer)
                        .where(whereCustomer)
                        .set({
                        debt: () => `debt - ${ticketRoot.debt}`,
                    })
                        .returning('*')
                        .execute();
                    if (customerUpdateResult.affected !== 1) {
                        throw new Error(`${PREFIX}: customerId=${customerId} update failed`);
                    }
                    customer = entities_1.Customer.fromRaw(customerUpdateResult.raw[0]);
                }
                else {
                    customer = await manager.findOneBy(entities_1.Customer, { oid, id: customerId });
                }
                const debt = ticketRoot.ticketStatus === ticket_entity_1.TicketStatus.Debt ? ticketRoot.debt : 0;
                const customerCloseDebt = customer.debt;
                const customerOpenDebt = customerCloseDebt + debt;
                const customerPaymentInsert = {
                    oid,
                    customerId,
                    ticketId,
                    createdAt: time,
                    paymentType: variable_1.PaymentType.ReceiveRefund,
                    paid: -ticketRoot.paid,
                    debit: -debt,
                    openDebt: customerOpenDebt,
                    closeDebt: customerCloseDebt,
                    note: '',
                    description,
                };
                const customerPaymentInsertResult = await manager
                    .createQueryBuilder()
                    .insert()
                    .into(entities_1.CustomerPayment)
                    .values(customerPaymentInsert)
                    .returning('*')
                    .execute();
                const customerPaymentList = entities_1.CustomerPayment.fromRaws(customerPaymentInsertResult.raw);
                customerPayment = customerPaymentList[0];
                if (!customerPayment) {
                    throw new Error(`${PREFIX}: Insert CustomerPayment failed:`
                        + ` ${JSON.stringify(customerPaymentInsertResult)}`);
                }
            }
            const ticketProductList = await manager.find(entities_1.TicketProduct, {
                where: {
                    oid,
                    ticketId,
                    deliveryStatus: variable_1.DeliveryStatus.Delivered,
                },
            });
            if (ticketProductList.length) {
                const ticketProductMap = (0, object_helper_1.arrayToKeyValue)(ticketProductList, 'id');
                const productIdMapValue = {};
                const batchIdMapValue = {};
                for (let i = 0; i < ticketProductList.length; i++) {
                    const quantityReturn = ticketProductList[i].quantity;
                    const costAmountReturn = ticketProductList[i].costAmount;
                    const ticketProductId = ticketProductList[i].id;
                    const { productId, batchId } = ticketProductMap[ticketProductId];
                    if (!productIdMapValue[productId]) {
                        productIdMapValue[productId] = {
                            quantityReturn: 0,
                            costAmountReturn: 0,
                            openQuantity: 0,
                            openCostAmount: 0,
                            hasManageQuantity: 1,
                        };
                    }
                    productIdMapValue[productId].quantityReturn += quantityReturn;
                    productIdMapValue[productId].costAmountReturn += costAmountReturn;
                    if (batchId != 0) {
                        if (!batchIdMapValue[batchId]) {
                            batchIdMapValue[batchId] = { quantityReturn: 0, openQuantity: 0 };
                        }
                        batchIdMapValue[batchId].quantityReturn += quantityReturn;
                    }
                }
                let productList = [];
                const productIdEntriesValue = Object.entries(productIdMapValue);
                if (productIdEntriesValue.length) {
                    const productUpdateResult = await manager.query(`
            UPDATE "Product" AS "product"
            SET "quantity"    = CASE 
                                    WHEN  (product."hasManageQuantity" = 0) THEN 0 
                                    ELSE "product"."quantity" + temp."quantityReturn"
                                END,
                "costAmount"  = CASE 
                                    WHEN  (product."hasManageQuantity" = 0) THEN 0 
                                    ELSE "product"."costAmount" + temp."costAmountReturn"
                                END
            FROM (VALUES `
                        + productIdEntriesValue
                            .map(([productId, sl]) => {
                            return `(${productId}, ${sl.quantityReturn}, ${sl.costAmountReturn})`;
                        })
                            .join(', ')
                        + `   ) AS temp("productId", "quantityReturn", "costAmountReturn")
            WHERE   "product"."oid" = ${oid} 
                AND "product"."id" = temp."productId" 
            RETURNING "product".*;   
          `);
                    if (productUpdateResult[1] != productIdEntriesValue.length) {
                        throw new Error(`${PREFIX}: Update Product failed, ${JSON.stringify(productUpdateResult)}`);
                    }
                    productList = entities_1.Product.fromRaws(productUpdateResult[0]);
                }
                let batchList = [];
                const batchIdEntriesQuantity = Object.entries(batchIdMapValue);
                if (batchIdEntriesQuantity.length) {
                    const batchUpdateResult = await manager.query(`
          UPDATE "Batch" "batch"
          SET "quantity" = "batch"."quantity" + temp."quantityReturn"
          FROM (VALUES `
                        + batchIdEntriesQuantity
                            .map(([batchId, sl]) => `(${batchId}, ${sl.quantityReturn})`)
                            .join(', ')
                        + `   ) AS temp("batchId", "quantityReturn")
          WHERE   "batch"."oid" = ${oid}
              AND "batch"."id" = temp."batchId" 
          RETURNING "batch".*;        
          `);
                    if (batchUpdateResult[1] != batchIdEntriesQuantity.length) {
                        throw new Error(`${PREFIX}: Update Batch failed, ${JSON.stringify(batchUpdateResult)}`);
                    }
                    batchList = entities_1.Batch.fromRaws(batchUpdateResult[0]);
                    if (batchList.length) {
                        const productReCalculatorIds = batchList.map((i) => i.productId);
                        const productReCalculatorResult = await manager.query(`
              UPDATE "Product" product
              SET "expiryDate" = (
                  SELECT MIN("expiryDate")
                  FROM "Batch" batch
                  WHERE   batch."productId" = product.id
                      AND batch."expiryDate" IS NOT NULL
                      AND batch."quantity" <> 0
              )
              WHERE product."hasManageBatches" = 1
                  AND "product"."id" IN (${productReCalculatorIds.toString()})
              RETURNING "product".*;  
            `);
                        const productReCalculatorList = entities_1.Product.fromRaws(productReCalculatorResult[0]);
                        for (let i = 0; i < productList.length; i++) {
                            const productId = productList[i].id;
                            const productReCalculatorFind = productReCalculatorList.find((i) => {
                                return i.id === productId;
                            });
                            if (productReCalculatorFind) {
                                productList[i] = productReCalculatorFind;
                            }
                        }
                    }
                }
                productList.forEach((i) => {
                    const currentMap = productIdMapValue[i.id];
                    currentMap.hasManageQuantity = i.hasManageQuantity;
                    if (currentMap.hasManageQuantity == 0) {
                        currentMap.openQuantity = 0;
                        currentMap.openCostAmount = 0;
                        currentMap.quantityReturn = 0;
                        currentMap.costAmountReturn = 0;
                    }
                    else {
                        currentMap.openQuantity = i.quantity - currentMap.quantityReturn;
                        currentMap.openCostAmount = i.costAmount - currentMap.costAmountReturn;
                    }
                });
                batchList.forEach((i) => {
                    const currentMap = batchIdMapValue[i.id];
                    currentMap.openQuantity = i.quantity - currentMap.quantityReturn;
                });
                const productMovementListDraft = ticketProductList.map((ticketProduct) => {
                    const currentMap = productIdMapValue[ticketProduct.productId];
                    if (!currentMap) {
                        throw new Error(`${PREFIX}: Not found movement with ${ticketProduct.productId}`);
                    }
                    const quantityReturn = currentMap.hasManageQuantity ? ticketProduct.quantity : 0;
                    const costAmountReturn = currentMap.hasManageQuantity ? ticketProduct.costAmount : 0;
                    const draft = {
                        oid,
                        productId: ticketProduct.productId,
                        voucherId: ticketId,
                        contactId: customerId,
                        voucherType: variable_1.VoucherType.Ticket,
                        isRefund: 1,
                        createdAt: time,
                        unitRate: ticketProduct.unitRate,
                        actualPrice: ticketProduct.actualPrice,
                        expectedPrice: ticketProduct.expectedPrice,
                        openQuantity: currentMap.openQuantity,
                        quantity: ticketProduct.quantity,
                        closeQuantity: currentMap.openQuantity + quantityReturn,
                        openCostAmount: currentMap.openCostAmount,
                        costAmount: costAmountReturn,
                        closeCostAmount: currentMap.openCostAmount + costAmountReturn,
                    };
                    currentMap.openQuantity = draft.closeQuantity;
                    currentMap.openCostAmount = draft.closeCostAmount;
                    return draft;
                });
                if (productMovementListDraft.length) {
                    await manager.insert(entities_1.ProductMovement, productMovementListDraft);
                }
                const batchMovementsDraft = ticketProductList
                    .filter((i) => i.batchId !== 0)
                    .map((ticketProduct) => {
                    const currentMap = batchIdMapValue[ticketProduct.batchId];
                    if (!currentMap) {
                        throw new Error(`${PREFIX}: ` + `Not found movement with ${ticketProduct.productId}`);
                    }
                    const draft = {
                        oid,
                        productId: ticketProduct.productId,
                        batchId: ticketProduct.batchId,
                        voucherId: ticketId,
                        contactId: customerId,
                        voucherType: variable_1.VoucherType.Ticket,
                        isRefund: 1,
                        createdAt: time,
                        unitRate: ticketProduct.unitRate,
                        actualPrice: ticketProduct.actualPrice,
                        expectedPrice: ticketProduct.expectedPrice,
                        openQuantity: currentMap.openQuantity,
                        quantity: ticketProduct.quantity,
                        closeQuantity: currentMap.openQuantity + ticketProduct.quantity,
                    };
                    currentMap.openQuantity = draft.closeQuantity;
                    return draft;
                });
                if (batchMovementsDraft.length) {
                    await manager.insert(batch_movement_entity_1.default, batchMovementsDraft);
                }
            }
            const setTicket = {
                ticketStatus: ticket_entity_1.TicketStatus.Cancelled,
                paid: 0,
                debt: 0,
            };
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticket = entities_1.Ticket.fromRaw(ticketUpdateResult.raw[0]);
            if (customer)
                ticket.customer = customer;
            return { ticketBasic: ticket, customerPayment };
        });
    }
};
exports.TicketOrderCancel = TicketOrderCancel;
exports.TicketOrderCancel = TicketOrderCancel = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], TicketOrderCancel);


/***/ }),
/* 148 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketOrderDebtSuccessUpdate = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const object_helper_1 = __webpack_require__(85);
const time_helper_1 = __webpack_require__(119);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const batch_movement_entity_1 = __webpack_require__(42);
const product_movement_entity_1 = __webpack_require__(75);
const ticket_procedure_entity_1 = __webpack_require__(58);
const ticket_product_entity_1 = __webpack_require__(61);
const ticket_entity_1 = __webpack_require__(50);
let TicketOrderDebtSuccessUpdate = class TicketOrderDebtSuccessUpdate {
    constructor(dataSource, manager) {
        this.dataSource = dataSource;
        this.manager = manager;
    }
    async update(params) {
        const { oid, ticketId, ticketOrderDebtSuccessUpdate, ticketOrderProductDraftList, ticketOrderProcedureDraftList, ticketOrderSurchargeDraftList, ticketOrderExpenseDraftList, description, allowNegativeQuantity, } = params;
        const time = ticketOrderDebtSuccessUpdate.registeredAt;
        const PREFIX = `TicketId = ${ticketId}, Update failed`;
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                oid,
                id: ticketId,
                ticketStatus: (0, typeorm_2.In)([ticket_entity_1.TicketStatus.Debt, ticket_entity_1.TicketStatus.Completed]),
            };
            const setTicketRoot = {
                updatedAt: Date.now(),
            };
            const ticketRootUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicketRoot)
                .returning('*')
                .execute();
            if (ticketRootUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticketRoot = entities_1.Ticket.fromRaw(ticketRootUpdateResult.raw[0]);
            const { customerId } = ticketRoot;
            const setTicket = Object.assign(Object.assign({}, ticketOrderDebtSuccessUpdate), { ticketStatus: ticketOrderDebtSuccessUpdate.paid === ticketOrderDebtSuccessUpdate.totalMoney
                    ? ticket_entity_1.TicketStatus.Completed
                    : ticket_entity_1.TicketStatus.Debt, paid: ticketOrderDebtSuccessUpdate.paid, debt: ticketOrderDebtSuccessUpdate.totalMoney - ticketOrderDebtSuccessUpdate.paid, endedAt: ticketOrderDebtSuccessUpdate.registeredAt, year: time_helper_1.DTimer.info(time, 7).year, month: time_helper_1.DTimer.info(time, 7).month + 1, date: time_helper_1.DTimer.info(time, 7).date });
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected !== 1) {
                throw new Error(`Update Ticket ${ticketId} failed: Status invalid`);
            }
            const ticketBasic = entities_1.Ticket.fromRaw(ticketUpdateResult.raw[0]);
            let customer = null;
            let customerPayment = null;
            if (ticketBasic.debt != ticketRoot.debt || ticketBasic.paid != ticketRoot.paid) {
                const debtChange = ticketBasic.debt - ticketRoot.debt;
                const paidChange = ticketBasic.paid - ticketRoot.paid;
                if (debtChange != 0) {
                    const whereCustomer = { oid, id: customerId };
                    const customerUpdateResult = await manager
                        .createQueryBuilder()
                        .update(entities_1.Customer)
                        .where(whereCustomer)
                        .set({
                        debt: () => `debt + ${debtChange}`,
                    })
                        .returning('*')
                        .execute();
                    if (customerUpdateResult.affected !== 1) {
                        throw new Error(`${PREFIX}: customerId=${customerId} update failed`);
                    }
                    customer = entities_1.Customer.fromRaw(customerUpdateResult.raw[0]);
                }
                else {
                    customer = await manager.findOneBy(entities_1.Customer, { oid, id: customerId });
                }
                const customerCloseDebt = customer.debt;
                const customerOpenDebt = customerCloseDebt - debtChange;
                const customerPaymentInsert = {
                    oid,
                    customerId,
                    ticketId,
                    createdAt: time,
                    paymentType: variable_1.PaymentType.Close,
                    paid: paidChange,
                    debit: debtChange,
                    openDebt: customerOpenDebt,
                    closeDebt: customerCloseDebt,
                    note: '',
                    description,
                };
                const customerPaymentInsertResult = await manager
                    .createQueryBuilder()
                    .insert()
                    .into(entities_1.CustomerPayment)
                    .values(customerPaymentInsert)
                    .returning('*')
                    .execute();
                const customerPaymentList = entities_1.CustomerPayment.fromRaws(customerPaymentInsertResult.raw);
                if (!customerPaymentList.length) {
                    throw new Error(`${PREFIX}: Insert CustomerPayment failed: `
                        + `${JSON.stringify(customerPaymentInsertResult)}`);
                }
                customerPayment = customerPaymentList[0];
            }
            const ticketProductReturnList = await manager.find(entities_1.TicketProduct, {
                where: {
                    oid,
                    ticketId,
                    deliveryStatus: variable_1.DeliveryStatus.Delivered,
                },
            });
            await manager.delete(entities_1.TicketProduct, { oid, ticketId });
            await manager.delete(entities_1.TicketProcedure, { oid, ticketId });
            await manager.delete(entities_1.TicketRadiology, { oid, ticketId });
            await manager.delete(entities_1.TicketSurcharge, { oid, ticketId });
            await manager.delete(entities_1.TicketExpense, { oid, ticketId });
            let ticketProductSendList = [];
            if (ticketOrderProductDraftList.length) {
                const ticketProductListInsert = ticketOrderProductDraftList.map((i) => {
                    const ticketProduct = Object.assign(Object.assign({}, i), { oid,
                        ticketId,
                        customerId, quantityPrescription: i.quantity, quantityReturn: 0, deliveryStatus: variable_1.DeliveryStatus.Delivered, type: ticket_product_entity_1.TicketProductType.Prescription });
                    return ticketProduct;
                });
                const ticketProductSendListInsertResult = await manager
                    .createQueryBuilder()
                    .insert()
                    .into(entities_1.TicketProduct)
                    .values(ticketProductListInsert)
                    .returning('*')
                    .execute();
                ticketProductSendList = entities_1.TicketProduct.fromRaws(ticketProductSendListInsertResult.raw);
            }
            if (ticketOrderProcedureDraftList.length) {
                const ticketProcedureListInsert = ticketOrderProcedureDraftList.map((i) => {
                    const ticketProcedure = Object.assign(Object.assign({}, i), { oid,
                        ticketId,
                        customerId, startedAt: ticketOrderDebtSuccessUpdate.registeredAt, status: ticket_procedure_entity_1.TicketProcedureStatus.Completed, imageIds: JSON.stringify([]), result: '' });
                    return ticketProcedure;
                });
                await manager.insert(entities_1.TicketProcedure, ticketProcedureListInsert);
            }
            if (ticketOrderSurchargeDraftList.length) {
                const ticketSurchargeListInsert = ticketOrderSurchargeDraftList.map((i) => {
                    const ticketSurcharge = Object.assign(Object.assign({}, i), { oid,
                        ticketId });
                    return ticketSurcharge;
                });
                await manager.insert(entities_1.TicketSurcharge, ticketSurchargeListInsert);
            }
            if (ticketOrderExpenseDraftList.length) {
                const ticketExpenseListInsert = ticketOrderExpenseDraftList.map((i) => {
                    const ticketExpense = Object.assign(Object.assign({}, i), { oid,
                        ticketId });
                    return ticketExpense;
                });
                await manager.insert(entities_1.TicketExpense, ticketExpenseListInsert);
            }
            const productIdMapValue = {};
            const batchIdMapValue = {};
            for (let i = 0; i < ticketProductReturnList.length; i++) {
                const itemReturn = ticketProductReturnList[i];
                const { productId, batchId } = itemReturn;
                if (!productIdMapValue[productId]) {
                    productIdMapValue[productId] = {
                        quantityReturn: 0,
                        costAmountReturn: 0,
                        actualAmountReturn: 0,
                        quantitySend: 0,
                        costAmountSend: 0,
                        actualAmountSend: 0,
                        openQuantity: 0,
                        openCostAmount: 0,
                        hasManageQuantity: 1,
                    };
                }
                productIdMapValue[productId].quantityReturn += itemReturn.quantity;
                productIdMapValue[productId].costAmountReturn += itemReturn.costAmount;
                productIdMapValue[productId].actualAmountReturn
                    += itemReturn.quantity * itemReturn.actualPrice;
                if (batchId != 0) {
                    if (!batchIdMapValue[batchId]) {
                        batchIdMapValue[batchId] = {
                            quantityReturn: 0,
                            quantitySend: 0,
                            openQuantity: 0,
                            actualAmountReturn: 0,
                            actualAmountSend: 0,
                        };
                    }
                    batchIdMapValue[batchId].quantityReturn += itemReturn.quantity;
                    batchIdMapValue[batchId].actualAmountReturn
                        += itemReturn.quantity * itemReturn.actualPrice;
                }
            }
            for (let i = 0; i < ticketProductSendList.length; i++) {
                const itemSend = ticketProductSendList[i];
                const { productId, batchId } = itemSend;
                if (!productIdMapValue[productId]) {
                    productIdMapValue[productId] = {
                        quantityReturn: 0,
                        costAmountReturn: 0,
                        actualAmountReturn: 0,
                        quantitySend: 0,
                        costAmountSend: 0,
                        actualAmountSend: 0,
                        openQuantity: 0,
                        openCostAmount: 0,
                        hasManageQuantity: 1,
                    };
                }
                productIdMapValue[productId].quantitySend += itemSend.quantity;
                productIdMapValue[productId].costAmountSend += itemSend.costAmount;
                productIdMapValue[productId].actualAmountSend += itemSend.quantity * itemSend.actualPrice;
                if (batchId != 0) {
                    if (!batchIdMapValue[batchId]) {
                        batchIdMapValue[batchId] = {
                            quantityReturn: 0,
                            quantitySend: 0,
                            openQuantity: 0,
                            actualAmountReturn: 0,
                            actualAmountSend: 0,
                        };
                    }
                    batchIdMapValue[batchId].quantitySend += itemSend.quantity;
                    batchIdMapValue[batchId].actualAmountSend
                        += itemSend.quantity * itemSend.actualPrice;
                }
            }
            let productList = [];
            let productMap = {};
            const productIdEntriesValue = Object.entries(productIdMapValue).filter(([productId, v]) => {
                return (v.quantityReturn != v.quantitySend
                    || v.costAmountReturn != v.costAmountSend
                    || v.actualAmountReturn != v.actualAmountSend);
            });
            if (productIdEntriesValue.length) {
                const productUpdateResult = await manager.query(`
        UPDATE "Product" AS "product"
        SET "quantity"    = CASE 
                                WHEN  (product."hasManageQuantity" = 0) THEN 0 
                                ELSE "product"."quantity" - temp."quantitySend"
                            END,
            "costAmount"  = CASE 
                                WHEN  (product."hasManageQuantity" = 0) THEN 0 
                                ELSE "product"."costAmount" - temp."costAmountSend"
                            END
        FROM (VALUES `
                    + productIdEntriesValue
                        .map(([productId, v]) => {
                        return (`(${productId}, ${v.quantitySend - v.quantityReturn},`
                            + ` ${v.costAmountSend - v.costAmountReturn})`);
                    })
                        .join(', ')
                    + `   ) AS temp("productId", "quantitySend", "costAmountSend")
        WHERE   "product"."id" = temp."productId" 
            AND "product"."oid" = ${oid} 
        RETURNING "product".*;   
        `);
                if (productUpdateResult[1] != productIdEntriesValue.length) {
                    throw new Error(`${PREFIX}: Update Product failed, ${JSON.stringify(productUpdateResult)}`);
                }
                productList = entities_1.Product.fromRaws(productUpdateResult[0]);
                productMap = (0, object_helper_1.arrayToKeyValue)(productList, 'id');
                if (!allowNegativeQuantity) {
                    productList.forEach((i) => {
                        if (i.quantity < 0) {
                            throw new Error(`Sản phẩm ${i.brandName} không đủ số lượng tồn kho`);
                        }
                    });
                }
            }
            let batchList = [];
            const batchIdEntriesValue = Object.entries(batchIdMapValue).filter(([batchId, v]) => {
                return v.quantityReturn != v.quantitySend || v.actualAmountReturn != v.actualAmountSend;
            });
            if (batchIdEntriesValue.length) {
                const batchUpdateResult = await manager.query(`
        UPDATE  "Batch" "batch"
        SET     "quantity" = "batch"."quantity" - temp."quantitySend"
        FROM    (VALUES `
                    + batchIdEntriesValue
                        .map(([batchId, v]) => `(${batchId}, ${v.quantitySend - v.quantityReturn})`)
                        .join(', ')
                    + `   ) AS temp("batchId", "quantitySend")
        WHERE   "batch"."id" = temp."batchId" 
            AND "batch"."oid" = ${oid}
            AND "batch"."quantity" >= temp."quantitySend"
        RETURNING "batch".*;        
        `);
                if (batchUpdateResult[1] != batchIdEntriesValue.length) {
                    throw new Error(`${PREFIX}: Update Batch, affected = ${batchUpdateResult[1]}`);
                }
                batchList = entities_1.Batch.fromRaws(batchUpdateResult[0]);
                if (!allowNegativeQuantity) {
                    batchList.forEach((i) => {
                        if (i.quantity < 0) {
                            const product = productMap[i.productId];
                            throw new Error(`Sản phẩm ${product.brandName},`
                                + ` lô ${i.lotNumber} HSD ${time_helper_1.DTimer.timeToText(i.expiryDate, 'DD/MM/YYYY')}`
                                + ` không đủ số lượng tồn kho`);
                        }
                    });
                }
            }
            productList.forEach((i) => {
                const currentMap = productIdMapValue[i.id];
                currentMap.hasManageQuantity = i.hasManageQuantity;
                if (currentMap.hasManageQuantity == 0) {
                    currentMap.openQuantity = 0;
                    currentMap.openCostAmount = 0;
                    currentMap.quantitySend = 0;
                    currentMap.costAmountSend = 0;
                    currentMap.quantityReturn = 0;
                    currentMap.costAmountReturn = 0;
                }
                else {
                    currentMap.openQuantity = i.quantity + currentMap.quantitySend - currentMap.quantityReturn;
                    currentMap.openCostAmount =
                        i.costAmount + currentMap.costAmountSend - currentMap.costAmountReturn;
                }
            });
            batchList.forEach((i) => {
                const currentMap = batchIdMapValue[i.id];
                currentMap.openQuantity = i.quantity + currentMap.quantitySend - currentMap.quantityReturn;
            });
            const productMovementListDraft = [];
            productIdEntriesValue.forEach(([productId, v]) => {
                ticketProductReturnList
                    .filter((i) => i.productId === Number(productId))
                    .forEach((ticketProductReturn) => {
                    const quantityReturn = v.hasManageQuantity ? ticketProductReturn.quantity : 0;
                    const costAmountReturn = v.hasManageQuantity ? ticketProductReturn.costAmount : 0;
                    const draft = {
                        oid,
                        productId: Number(productId),
                        voucherId: ticketId,
                        contactId: customerId,
                        voucherType: variable_1.VoucherType.Ticket,
                        isRefund: 1,
                        createdAt: time,
                        unitRate: ticketProductReturn.unitRate,
                        actualPrice: ticketProductReturn.actualPrice,
                        expectedPrice: ticketProductReturn.expectedPrice,
                        openQuantity: v.openQuantity,
                        quantity: ticketProductReturn.quantity,
                        closeQuantity: v.openQuantity + quantityReturn,
                        openCostAmount: v.openCostAmount,
                        costAmount: ticketProductReturn.costAmount,
                        closeCostAmount: v.openCostAmount + costAmountReturn,
                    };
                    productMovementListDraft.push(draft);
                    v.openQuantity = draft.closeQuantity;
                    v.openCostAmount = draft.closeCostAmount;
                });
                ticketProductSendList
                    .filter((i) => i.productId === Number(productId))
                    .forEach((ticketProductSend) => {
                    const quantitySend = v.hasManageQuantity ? ticketProductSend.quantity : 0;
                    const costAmountSend = v.hasManageQuantity ? ticketProductSend.costAmount : 0;
                    const draft = {
                        oid,
                        productId: Number(productId),
                        voucherId: ticketId,
                        contactId: customerId,
                        voucherType: variable_1.VoucherType.Ticket,
                        isRefund: 0,
                        createdAt: time,
                        unitRate: ticketProductSend.unitRate,
                        actualPrice: ticketProductSend.actualPrice,
                        expectedPrice: ticketProductSend.expectedPrice,
                        openQuantity: v.openQuantity,
                        quantity: -ticketProductSend.quantity,
                        closeQuantity: v.openQuantity - quantitySend,
                        openCostAmount: v.openCostAmount,
                        costAmount: -ticketProductSend.costAmount,
                        closeCostAmount: v.openCostAmount - costAmountSend,
                    };
                    productMovementListDraft.push(draft);
                    v.openQuantity = draft.closeQuantity;
                    v.openCostAmount = draft.closeCostAmount;
                });
            });
            if (productMovementListDraft.length) {
                await manager.insert(product_movement_entity_1.default, productMovementListDraft);
            }
            const batchMovementListDraft = [];
            batchIdEntriesValue.forEach(([batchId, v]) => {
                ticketProductReturnList
                    .filter((i) => i.batchId === Number(batchId))
                    .forEach((ticketProductReturn) => {
                    const quantityReturn = ticketProductReturn.quantity;
                    const draft = {
                        oid,
                        productId: ticketProductReturn.productId,
                        batchId: Number(batchId),
                        voucherId: ticketId,
                        contactId: customerId,
                        voucherType: variable_1.VoucherType.Ticket,
                        isRefund: 1,
                        createdAt: time,
                        unitRate: ticketProductReturn.unitRate,
                        actualPrice: ticketProductReturn.actualPrice,
                        expectedPrice: ticketProductReturn.expectedPrice,
                        openQuantity: v.openQuantity,
                        quantity: quantityReturn,
                        closeQuantity: v.openQuantity + quantityReturn,
                    };
                    batchMovementListDraft.push(draft);
                    v.openQuantity = draft.closeQuantity;
                });
                ticketProductSendList
                    .filter((i) => i.batchId === Number(batchId))
                    .forEach((ticketProductSend) => {
                    const quantitySend = ticketProductSend.quantity;
                    const draft = {
                        oid,
                        productId: ticketProductSend.productId,
                        batchId: Number(batchId),
                        voucherId: ticketId,
                        contactId: customerId,
                        voucherType: variable_1.VoucherType.Ticket,
                        isRefund: 0,
                        createdAt: time,
                        unitRate: ticketProductSend.unitRate,
                        actualPrice: ticketProductSend.actualPrice,
                        expectedPrice: ticketProductSend.expectedPrice,
                        openQuantity: v.openQuantity,
                        quantity: -ticketProductSend.quantity,
                        closeQuantity: v.openQuantity - quantitySend,
                    };
                    batchMovementListDraft.push(draft);
                    v.openQuantity = draft.closeQuantity;
                });
            });
            if (batchMovementListDraft.length) {
                await manager.insert(batch_movement_entity_1.default, batchMovementListDraft);
            }
            return { ticketBasic, productList, batchList };
        });
    }
};
exports.TicketOrderDebtSuccessUpdate = TicketOrderDebtSuccessUpdate;
exports.TicketOrderDebtSuccessUpdate = TicketOrderDebtSuccessUpdate = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectEntityManager)()),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _b : Object])
], TicketOrderDebtSuccessUpdate);


/***/ }),
/* 149 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketOrderDraftApprovedUpdate = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const time_helper_1 = __webpack_require__(119);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const ticket_procedure_entity_1 = __webpack_require__(58);
const ticket_product_entity_1 = __webpack_require__(61);
const ticket_entity_1 = __webpack_require__(50);
let TicketOrderDraftApprovedUpdate = class TicketOrderDraftApprovedUpdate {
    constructor(dataSource, manager) {
        this.dataSource = dataSource;
        this.manager = manager;
    }
    async update(params) {
        const { oid, ticketId, ticketOrderDraftApprovedUpdate, ticketOrderProductDraftList, ticketOrderProcedureDraftList, ticketOrderSurchargeDraftList, ticketOrderExpenseDraftList, ticketAttributeDraftList, } = params;
        const registeredAt = ticketOrderDraftApprovedUpdate.registeredAt;
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                id: ticketId,
                oid,
                ticketStatus: (0, typeorm_2.In)([ticket_entity_1.TicketStatus.Draft, ticket_entity_1.TicketStatus.Approved]),
            };
            const setTicket = Object.assign(Object.assign({}, ticketOrderDraftApprovedUpdate), { paid: 0, debt: ticketOrderDraftApprovedUpdate.totalMoney, registeredAt, startedAt: registeredAt, year: time_helper_1.DTimer.info(registeredAt, 7).year, month: time_helper_1.DTimer.info(registeredAt, 7).month + 1, date: time_helper_1.DTimer.info(registeredAt, 7).date });
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected !== 1) {
                throw new Error(`Update Ticket ${ticketId} failed: Status invalid`);
            }
            const ticketBasic = entities_1.Ticket.fromRaw(ticketUpdateResult.raw[0]);
            await manager.delete(entities_1.TicketAttribute, { oid, ticketId });
            await manager.delete(entities_1.TicketProduct, { oid, ticketId });
            await manager.delete(entities_1.TicketProcedure, { oid, ticketId });
            await manager.delete(entities_1.TicketSurcharge, { oid, ticketId });
            await manager.delete(entities_1.TicketExpense, { oid, ticketId });
            if (ticketOrderProductDraftList.length) {
                const ticketProductListInsert = ticketOrderProductDraftList.map((i) => {
                    const ticketProduct = Object.assign(Object.assign({}, i), { oid,
                        ticketId, customerId: ticketBasic.customerId, quantityPrescription: i.quantity, quantityReturn: 0, deliveryStatus: variable_1.DeliveryStatus.Pending, type: ticket_product_entity_1.TicketProductType.Prescription });
                    return ticketProduct;
                });
                await manager.insert(entities_1.TicketProduct, ticketProductListInsert);
            }
            if (ticketOrderProcedureDraftList.length) {
                const ticketProcedureListInsert = ticketOrderProcedureDraftList.map((i) => {
                    const ticketProcedure = Object.assign(Object.assign({}, i), { oid,
                        ticketId, customerId: ticketBasic.customerId, startedAt: ticketBasic.registeredAt, status: ticket_procedure_entity_1.TicketProcedureStatus.Completed, imageIds: JSON.stringify([]), result: '' });
                    return ticketProcedure;
                });
                await manager.insert(entities_1.TicketProcedure, ticketProcedureListInsert);
            }
            if (ticketOrderSurchargeDraftList.length) {
                const ticketSurchargeListInsert = ticketOrderSurchargeDraftList.map((i) => {
                    const ticketSurcharge = Object.assign(Object.assign({}, i), { oid,
                        ticketId });
                    return ticketSurcharge;
                });
                await manager.insert(entities_1.TicketSurcharge, ticketSurchargeListInsert);
            }
            if (ticketOrderExpenseDraftList.length) {
                const ticketExpenseListInsert = ticketOrderExpenseDraftList.map((i) => {
                    const ticketExpense = Object.assign(Object.assign({}, i), { oid,
                        ticketId });
                    return ticketExpense;
                });
                await manager.insert(entities_1.TicketExpense, ticketExpenseListInsert);
            }
            if (ticketAttributeDraftList.length) {
                const ticketAttributeListInsert = ticketAttributeDraftList.map((i) => {
                    const ticketAttribute = Object.assign(Object.assign({}, i), { oid, ticketId: ticketBasic.id });
                    return ticketAttribute;
                });
                await manager.insert(entities_1.TicketAttribute, ticketAttributeListInsert);
            }
            return { ticketBasic };
        });
    }
};
exports.TicketOrderDraftApprovedUpdate = TicketOrderDraftApprovedUpdate;
exports.TicketOrderDraftApprovedUpdate = TicketOrderDraftApprovedUpdate = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectEntityManager)()),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _b : Object])
], TicketOrderDraftApprovedUpdate);


/***/ }),
/* 150 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketOrderRefundOverpaid = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const ticket_entity_1 = __webpack_require__(50);
let TicketOrderRefundOverpaid = class TicketOrderRefundOverpaid {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async refundOverpaid(params) {
        const { oid, ticketId, time, money } = params;
        const PREFIX = `ticketId=${ticketId} refund overpaid failed`;
        if (money <= 0) {
            throw new Error(`${PREFIX}: money = ${money}`);
        }
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                oid,
                id: ticketId,
                ticketStatus: (0, typeorm_1.In)([ticket_entity_1.TicketStatus.Approved, ticket_entity_1.TicketStatus.Executing]),
                totalMoney: (0, typeorm_1.Raw)((alias) => `${alias} <= (paid - :money)`, { money }),
            };
            const setTicket = {
                ticketStatus: () => `CASE 
                WHEN("totalMoney" = paid - ${money}) THEN ${ticket_entity_1.TicketStatus.Completed} 
                ELSE "ticketStatus"
            END
          `,
                paid: () => `paid - ${money}`,
                debt: () => `debt + ${money}`,
            };
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticket = entities_1.Ticket.fromRaw(ticketUpdateResult.raw[0]);
            const customer = await manager.findOneBy(entities_1.Customer, {
                oid,
                id: ticket.customerId,
            });
            const customerCloseDebt = customer.debt;
            const customerOpenDebt = customer.debt;
            const customerPaymentInsert = {
                oid,
                customerId: ticket.customerId,
                ticketId,
                createdAt: time,
                paymentType: variable_1.PaymentType.ReceiveRefund,
                paid: -money,
                debit: 0,
                openDebt: customerOpenDebt,
                closeDebt: customerCloseDebt,
                note: '',
                description: '',
            };
            const customerPaymentInsertResult = await manager
                .createQueryBuilder()
                .insert()
                .into(entities_1.CustomerPayment)
                .values(customerPaymentInsert)
                .returning('*')
                .execute();
            const customerPaymentList = entities_1.CustomerPayment.fromRaws(customerPaymentInsertResult.raw);
            if (!customerPaymentList.length) {
                throw new Error(`${PREFIX}: Insert CustomerPayment failed: `
                    + `${JSON.stringify(customerPaymentInsertResult)}`);
            }
            const customerPayment = customerPaymentList[0];
            return { ticketBasic: ticket, customerPayment };
        });
    }
};
exports.TicketOrderRefundOverpaid = TicketOrderRefundOverpaid;
exports.TicketOrderRefundOverpaid = TicketOrderRefundOverpaid = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], TicketOrderRefundOverpaid);


/***/ }),
/* 151 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketOrderReturnProductList = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const object_helper_1 = __webpack_require__(85);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const customer_payment_entity_1 = __webpack_require__(51);
const ticket_entity_1 = __webpack_require__(50);
let TicketOrderReturnProductList = class TicketOrderReturnProductList {
    constructor(dataSource) {
        this.dataSource = dataSource;
    }
    async returnProductList(params) {
        const { oid, ticketId, time, description, ticketProductReturnList, ticketProcedureReturnList, totalCostAmountUpdate, productMoneyUpdate, procedureMoneyUpdate, itemsActualMoneyUpdate, itemsDiscountUpdate, discountMoneyUpdate, discountPercentUpdate, surchargeUpdate, expenseUpdate, totalMoneyUpdate, profitUpdate, paidUpdate, debtUpdate, } = params;
        const PREFIX = `TicketId = ${ticketId}, Return TicketProduct failed`;
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const whereTicket = {
                oid,
                id: ticketId,
                ticketStatus: (0, typeorm_1.In)([ticket_entity_1.TicketStatus.Debt, ticket_entity_1.TicketStatus.Completed]),
            };
            const setTicketRoot = {
                updatedAt: Date.now(),
            };
            const ticketOriginUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicketRoot)
                .returning('*')
                .execute();
            if (ticketOriginUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticketOrigin = entities_1.Ticket.fromRaw(ticketOriginUpdateResult.raw[0]);
            const { customerId } = ticketOrigin;
            const debtReturn = ticketOrigin.debt - debtUpdate;
            const paidReturn = ticketOrigin.paid - paidUpdate;
            let customer = null;
            let customerPayment = null;
            if (debtReturn !== 0 || paidReturn !== 0) {
                if (debtReturn !== 0) {
                    const whereCustomer = { oid, id: customerId };
                    const customerUpdateResult = await manager
                        .createQueryBuilder()
                        .update(entities_1.Customer)
                        .where(whereCustomer)
                        .set({
                        debt: () => `debt - ${debtReturn}`,
                    })
                        .returning('*')
                        .execute();
                    if (customerUpdateResult.affected !== 1) {
                        throw new Error(`${PREFIX}: customerId=${customerId} update failed`);
                    }
                    customer = entities_1.Customer.fromRaw(customerUpdateResult.raw[0]);
                }
                else {
                    customer = await manager.findOneBy(entities_1.Customer, { oid, id: customerId });
                }
                const customerCloseDebt = customer.debt;
                const customerOpenDebt = customerCloseDebt + debtReturn;
                const customerPaymentInsert = {
                    oid,
                    customerId,
                    ticketId,
                    createdAt: time,
                    paymentType: variable_1.PaymentType.ReceiveRefund,
                    paid: -paidReturn,
                    debit: -debtReturn,
                    openDebt: customerOpenDebt,
                    closeDebt: customerCloseDebt,
                    note: '',
                    description,
                };
                const customerPaymentInsertResult = await manager
                    .createQueryBuilder()
                    .insert()
                    .into(customer_payment_entity_1.default)
                    .values(customerPaymentInsert)
                    .returning('*')
                    .execute();
                const customerPaymentList = customer_payment_entity_1.default.fromRaws(customerPaymentInsertResult.raw);
                customerPayment = customerPaymentList[0];
            }
            if (ticketProcedureReturnList.length) {
                const ticketProcedureUpdateResult = await manager.query(`
          UPDATE "TicketProcedure" tp
          SET "quantity"        = tp."quantity" - temp."quantityReturn"
          FROM (VALUES `
                    + ticketProcedureReturnList
                        .map((i) => `(${i.ticketProcedureId}, ${i.quantityReturn})`)
                        .join(', ')
                    + `   ) AS temp("ticketProcedureId", "quantityReturn")
          WHERE   tp."oid" = ${oid} 
              AND tp."ticketId" = ${ticketId}
              AND tp."id" = temp."ticketProcedureId" 
          RETURNING tp.*;    
          `);
                if (ticketProcedureUpdateResult[0].length != ticketProcedureReturnList.length) {
                    throw new Error(`${PREFIX}: Update TicketProcedure, affected = ${ticketProcedureUpdateResult[1]}`);
                }
            }
            let productList = [];
            let batchList = [];
            if (ticketProductReturnList.length) {
                const ticketProductUpdateResult = await manager.query(`
        UPDATE "TicketProduct" tp
        SET "costAmount"      = tp."costAmount" - temp."costAmountReturn",
            "quantity"        = tp."quantity" - temp."quantityReturn",
            "quantityReturn"  = tp."quantityReturn" + temp."quantityReturn",
            "deliveryStatus"  = CASE 
                                    WHEN  (tp."quantity" = temp."quantityReturn") 
                                      THEN ${variable_1.DeliveryStatus.NoStock} 
                                    ELSE ${variable_1.DeliveryStatus.Delivered} 
                                END
        FROM (VALUES `
                    + ticketProductReturnList
                        .map((i) => `(${i.ticketProductId}, ${i.quantityReturn}, ${i.costAmountReturn})`)
                        .join(', ')
                    + `   ) AS temp("ticketProductId", "quantityReturn", "costAmountReturn")
        WHERE   tp."oid" = ${oid} 
            AND tp."ticketId" = ${ticketId}
            AND tp."id" = temp."ticketProductId" 
            AND tp."deliveryStatus" = ${variable_1.DeliveryStatus.Delivered}
        RETURNING tp.*;    
        `);
                if (ticketProductUpdateResult[0].length != ticketProductReturnList.length) {
                    throw new Error(`${PREFIX}: Update TicketProduct, affected = ${ticketProductUpdateResult[1]}`);
                }
                const ticketProductActionedList = entities_1.TicketProduct.fromRaws(ticketProductUpdateResult[0]);
                const ticketProductActionedMap = (0, object_helper_1.arrayToKeyValue)(ticketProductActionedList, 'id');
                ticketProductActionedList.forEach((i) => {
                    if (i.quantity < 0) {
                        throw new Error(`Số lượng trả vượt quá số lượng mua hàng`);
                    }
                });
                const productIdMapValue = {};
                const batchIdMapValue = {};
                for (let i = 0; i < ticketProductReturnList.length; i++) {
                    const { quantityReturn, costAmountReturn, ticketProductId } = ticketProductReturnList[i];
                    const { productId, batchId } = ticketProductActionedMap[ticketProductId];
                    if (!productIdMapValue[productId]) {
                        productIdMapValue[productId] = {
                            quantityReturn: 0,
                            costAmountReturn: 0,
                            openQuantity: 0,
                            openCostAmount: 0,
                            hasManageQuantity: 1,
                        };
                    }
                    productIdMapValue[productId].quantityReturn += quantityReturn;
                    productIdMapValue[productId].costAmountReturn += costAmountReturn;
                    if (batchId != 0) {
                        if (!batchIdMapValue[batchId]) {
                            batchIdMapValue[batchId] = { quantityReturn: 0, openQuantity: 0 };
                        }
                        batchIdMapValue[batchId].quantityReturn += quantityReturn;
                    }
                }
                const productIdEntriesValue = Object.entries(productIdMapValue);
                if (productIdEntriesValue.length) {
                    const productUpdateResult = await manager.query(`
        UPDATE "Product" AS "product"
        SET "quantity"    = CASE 
                                WHEN  (product."hasManageQuantity" = 0) THEN 0 
                                ELSE "product"."quantity" + temp."quantityReturn"
                            END,
            "costAmount"  = CASE 
                                WHEN  (product."hasManageQuantity" = 0) THEN 0 
                                ELSE "product"."costAmount" + temp."costAmountReturn"
                            END
        FROM (VALUES `
                        + productIdEntriesValue
                            .map(([productId, sl]) => {
                            return `(${productId}, ${sl.quantityReturn}, ${sl.costAmountReturn})`;
                        })
                            .join(', ')
                        + `   ) AS temp("productId", "quantityReturn", "costAmountReturn")
        WHERE   "product"."oid" = ${oid} 
            AND "product"."id" = temp."productId" 
        RETURNING "product".*;   
        `);
                    if (productUpdateResult[1] != productIdEntriesValue.length) {
                        throw new Error(`${PREFIX}: Update Product failed, ${JSON.stringify(productUpdateResult)}`);
                    }
                    productList = entities_1.Product.fromRaws(productUpdateResult[0]);
                }
                const batchIdEntriesQuantity = Object.entries(batchIdMapValue);
                if (batchIdEntriesQuantity.length) {
                    const batchUpdateResult = await manager.query(`
        UPDATE "Batch" "batch"
        SET "quantity" = "batch"."quantity" + temp."quantityReturn"
        FROM (VALUES `
                        + batchIdEntriesQuantity
                            .map(([batchId, sl]) => `(${batchId}, ${sl.quantityReturn})`)
                            .join(', ')
                        + `   ) AS temp("batchId", "quantityReturn")
        WHERE   "batch"."oid" = ${oid}
            AND "batch"."id" = temp."batchId" 
        RETURNING "batch".*;        
        `);
                    if (batchUpdateResult[1] != batchIdEntriesQuantity.length) {
                        throw new Error(`${PREFIX}: Update Batch failed, ${JSON.stringify(batchUpdateResult)}`);
                    }
                    batchList = entities_1.Batch.fromRaws(batchUpdateResult[0]);
                    if (batchList.length) {
                        const productReCalculatorIds = batchList.map((i) => i.productId);
                        const productReCalculatorResult = await manager.query(`
            UPDATE "Product" product
            SET "expiryDate" = (
                SELECT MIN("expiryDate")
                FROM "Batch" batch
                WHERE   batch."productId" = product.id
                    AND batch."expiryDate" IS NOT NULL
                    AND batch."quantity" <> 0
            )
            WHERE product."hasManageBatches" = 1
                AND "product"."id" IN (${productReCalculatorIds.toString()})
            RETURNING "product".*;  
          `);
                        const productReCalculatorList = entities_1.Product.fromRaws(productReCalculatorResult[0]);
                        for (let i = 0; i < productList.length; i++) {
                            const productId = productList[i].id;
                            const productReCalculatorFind = productReCalculatorList.find((i) => {
                                return i.id === productId;
                            });
                            if (productReCalculatorFind) {
                                productList[i] = productReCalculatorFind;
                            }
                        }
                    }
                }
                productList.forEach((i) => {
                    const currentMap = productIdMapValue[i.id];
                    currentMap.hasManageQuantity = i.hasManageQuantity;
                    if (currentMap.hasManageQuantity == 0) {
                        currentMap.openQuantity = 0;
                        currentMap.openCostAmount = 0;
                        currentMap.quantityReturn = 0;
                        currentMap.costAmountReturn = 0;
                    }
                    else {
                        currentMap.openQuantity = i.quantity - currentMap.quantityReturn;
                        currentMap.openCostAmount = i.costAmount - currentMap.costAmountReturn;
                    }
                });
                batchList.forEach((i) => {
                    const currentMap = batchIdMapValue[i.id];
                    currentMap.openQuantity = i.quantity - currentMap.quantityReturn;
                });
                const productMovementListDraft = ticketProductActionedList.map((ticketProductActioned) => {
                    const currentMap = productIdMapValue[ticketProductActioned.productId];
                    if (!currentMap) {
                        throw new Error(`${PREFIX}: Not found movement with ${ticketProductActioned.productId}`);
                    }
                    const currentReturn = ticketProductReturnList.find((i) => {
                        return i.ticketProductId === ticketProductActioned.id;
                    });
                    const quantityReturn = currentMap.hasManageQuantity ? currentReturn.quantityReturn : 0;
                    const costAmountReturn = currentMap.hasManageQuantity ? currentReturn.costAmountReturn : 0;
                    const draft = {
                        oid,
                        productId: ticketProductActioned.productId,
                        voucherId: ticketId,
                        contactId: customerId,
                        voucherType: variable_1.VoucherType.Ticket,
                        isRefund: 1,
                        createdAt: time,
                        unitRate: ticketProductActioned.unitRate,
                        actualPrice: ticketProductActioned.actualPrice,
                        expectedPrice: ticketProductActioned.expectedPrice,
                        openQuantity: currentMap.openQuantity,
                        quantity: currentReturn.quantityReturn,
                        closeQuantity: currentMap.openQuantity + quantityReturn,
                        openCostAmount: currentMap.openCostAmount,
                        costAmount: currentReturn.costAmountReturn,
                        closeCostAmount: currentMap.openCostAmount + costAmountReturn,
                    };
                    currentMap.openQuantity = draft.closeQuantity;
                    currentMap.openCostAmount = draft.closeCostAmount;
                    return draft;
                });
                if (productMovementListDraft.length) {
                    await manager.insert(entities_1.ProductMovement, productMovementListDraft);
                }
                const batchMovementsDraft = ticketProductActionedList
                    .filter((i) => i.batchId !== 0)
                    .map((ticketProductActioned) => {
                    const currentMap = batchIdMapValue[ticketProductActioned.batchId];
                    if (!currentMap) {
                        throw new Error(`${PREFIX}: Not found movement with ${ticketProductActioned.productId}`);
                    }
                    const currentReturn = ticketProductReturnList.find((i) => {
                        return i.ticketProductId === ticketProductActioned.id;
                    });
                    const quantityReturn = currentReturn.quantityReturn;
                    const draft = {
                        oid,
                        productId: ticketProductActioned.productId,
                        batchId: ticketProductActioned.batchId,
                        voucherId: ticketId,
                        contactId: customerId,
                        voucherType: variable_1.VoucherType.Ticket,
                        isRefund: 1,
                        createdAt: time,
                        unitRate: ticketProductActioned.unitRate,
                        actualPrice: ticketProductActioned.actualPrice,
                        expectedPrice: ticketProductActioned.expectedPrice,
                        openQuantity: currentMap.openQuantity,
                        quantity: quantityReturn,
                        closeQuantity: currentMap.openQuantity + quantityReturn,
                    };
                    currentMap.openQuantity = draft.closeQuantity;
                    return draft;
                });
                if (batchMovementsDraft.length) {
                    await manager.insert(entities_1.BatchMovement, batchMovementsDraft);
                }
            }
            const setTicket = {
                ticketStatus: () => `CASE 
            WHEN("ticketStatus" = ${ticket_entity_1.TicketStatus.Executing}) THEN ${ticket_entity_1.TicketStatus.Executing}
            WHEN(${debtUpdate} != 0) THEN ${ticket_entity_1.TicketStatus.Debt}
            ELSE ${ticket_entity_1.TicketStatus.Completed}
          END
        `,
                totalCostAmount: totalCostAmountUpdate,
                productMoney: productMoneyUpdate,
                procedureMoney: procedureMoneyUpdate,
                itemsActualMoney: itemsActualMoneyUpdate,
                itemsDiscount: itemsDiscountUpdate,
                discountMoney: discountMoneyUpdate,
                discountPercent: discountPercentUpdate,
                surcharge: surchargeUpdate,
                expense: expenseUpdate,
                totalMoney: totalMoneyUpdate,
                profit: profitUpdate,
                paid: paidUpdate,
                debt: debtUpdate,
            };
            const ticketUpdateResult = await manager
                .createQueryBuilder()
                .update(entities_1.Ticket)
                .where(whereTicket)
                .set(setTicket)
                .returning('*')
                .execute();
            if (ticketUpdateResult.affected != 1) {
                throw new Error(`${PREFIX}: Update Ticket failed`);
            }
            const ticket = entities_1.Ticket.fromRaw(ticketUpdateResult.raw[0]);
            return {
                ticketBasic: ticket,
                productList,
                batchList,
                customer: customer || null,
                customerPayment: customerPayment || null,
            };
        });
    }
};
exports.TicketOrderReturnProductList = TicketOrderReturnProductList;
exports.TicketOrderReturnProductList = TicketOrderReturnProductList = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], TicketOrderReturnProductList);


/***/ }),
/* 152 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketOrderDraft = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const time_helper_1 = __webpack_require__(119);
const variable_1 = __webpack_require__(41);
const entities_1 = __webpack_require__(36);
const ticket_attribute_entity_1 = __webpack_require__(52);
const ticket_procedure_entity_1 = __webpack_require__(58);
const ticket_product_entity_1 = __webpack_require__(61);
const ticket_entity_1 = __webpack_require__(50);
let TicketOrderDraft = class TicketOrderDraft {
    constructor(dataSource, manager) {
        this.dataSource = dataSource;
        this.manager = manager;
    }
    async create(params) {
        const { oid, ticketOrderProductDraftList, ticketOrderProcedureDraftList, ticketOrderSurchargeDraftList, ticketOrderExpenseDraftList, ticketAttributeDraftList, } = params;
        const ticketOrderDraftInsert = params.ticketOrderDraftInsert;
        const registeredAt = ticketOrderDraftInsert.registeredAt;
        return await this.dataSource.transaction('READ UNCOMMITTED', async (manager) => {
            const ticketInsert = Object.assign(Object.assign({}, ticketOrderDraftInsert), { oid, ticketStatus: ticket_entity_1.TicketStatus.Draft, ticketType: ticket_entity_1.TicketType.Order, paid: 0, debt: ticketOrderDraftInsert.totalMoney, registeredAt, startedAt: registeredAt, year: time_helper_1.DTimer.info(registeredAt, 7).year, month: time_helper_1.DTimer.info(registeredAt, 7).month + 1, date: time_helper_1.DTimer.info(registeredAt, 7).date, endedAt: null });
            const ticketInsertResult = await manager
                .createQueryBuilder()
                .insert()
                .into(entities_1.Ticket)
                .values(ticketInsert)
                .returning('*')
                .execute();
            const [ticketBasic] = entities_1.Ticket.fromRaws(ticketInsertResult.raw);
            if (!ticketBasic) {
                throw new Error(`Create TicketOrder failed: ${JSON.stringify(ticketInsertResult)}`);
            }
            if (ticketOrderProductDraftList.length) {
                const ticketProductListInsert = ticketOrderProductDraftList.map((i) => {
                    const ticketProduct = Object.assign(Object.assign({}, i), { oid, ticketId: ticketBasic.id, customerId: ticketOrderDraftInsert.customerId, deliveryStatus: variable_1.DeliveryStatus.Pending, quantityPrescription: i.quantity, quantityReturn: 0, type: ticket_product_entity_1.TicketProductType.Prescription });
                    return ticketProduct;
                });
                await manager.insert(entities_1.TicketProduct, ticketProductListInsert);
            }
            if (ticketOrderProcedureDraftList) {
                const ticketProcedureListInsert = ticketOrderProcedureDraftList.map((i) => {
                    const ticketProcedure = Object.assign(Object.assign({}, i), { oid, ticketId: ticketBasic.id, customerId: ticketOrderDraftInsert.customerId, startedAt: ticketOrderDraftInsert.registeredAt, status: ticket_procedure_entity_1.TicketProcedureStatus.Completed, imageIds: JSON.stringify([]), result: '' });
                    return ticketProcedure;
                });
                await manager.insert(entities_1.TicketProcedure, ticketProcedureListInsert);
            }
            if (ticketOrderSurchargeDraftList.length) {
                const ticketSurchargeListInsert = ticketOrderSurchargeDraftList.map((i) => {
                    const ticketSurcharge = Object.assign(Object.assign({}, i), { oid, ticketId: ticketBasic.id });
                    return ticketSurcharge;
                });
                await manager.insert(entities_1.TicketSurcharge, ticketSurchargeListInsert);
            }
            if (ticketOrderExpenseDraftList.length) {
                const ticketExpenseListInsert = ticketOrderExpenseDraftList.map((i) => {
                    const ticketExpense = Object.assign(Object.assign({}, i), { oid, ticketId: ticketBasic.id });
                    return ticketExpense;
                });
                await manager.insert(entities_1.TicketExpense, ticketExpenseListInsert);
            }
            if (ticketAttributeDraftList.length) {
                const ticketAttributeListInsert = ticketAttributeDraftList.map((i) => {
                    const ticketAttribute = Object.assign(Object.assign({}, i), { oid, ticketId: ticketBasic.id });
                    return ticketAttribute;
                });
                await manager.insert(ticket_attribute_entity_1.default, ticketAttributeListInsert);
            }
            return { ticketBasic };
        });
    }
};
exports.TicketOrderDraft = TicketOrderDraft;
exports.TicketOrderDraft = TicketOrderDraft = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectEntityManager)()),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _b : Object])
], TicketOrderDraft);


/***/ }),
/* 153 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WarehouseRepository = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const entities_1 = __webpack_require__(36);
const postgresql_repository_1 = __webpack_require__(77);
let WarehouseRepository = class WarehouseRepository extends postgresql_repository_1.PostgreSqlRepository {
    constructor(dataSource, warehouseRepository) {
        super(warehouseRepository);
        this.dataSource = dataSource;
        this.warehouseRepository = warehouseRepository;
    }
    async insertOneAndReturnEntity(data) {
        const raw = await this.insertOneAndReturnRaw(data);
        return entities_1.Warehouse.fromRaw(raw);
    }
    async insertOneFullFieldAndReturnEntity(data) {
        const raw = await this.insertOneFullFieldAndReturnRaw(data);
        return entities_1.Warehouse.fromRaw(raw);
    }
    async updateAndReturnEntity(condition, data) {
        const raws = await this.updateAndReturnRaw(condition, data);
        return entities_1.Warehouse.fromRaws(raws);
    }
};
exports.WarehouseRepository = WarehouseRepository;
exports.WarehouseRepository = WarehouseRepository = __decorate([
    (0, common_1.Injectable)(),
    __param(1, (0, typeorm_1.InjectRepository)(entities_1.Warehouse)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object])
], WarehouseRepository);


/***/ }),
/* 154 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SqlModule = void 0;
const common_1 = __webpack_require__(3);
const config_1 = __webpack_require__(21);
const typeorm_1 = __webpack_require__(35);
const sql_config_1 = __webpack_require__(155);
let SqlModule = class SqlModule {
};
exports.SqlModule = SqlModule;
exports.SqlModule = SqlModule = __decorate([
    (0, common_1.Module)({
        imports: [
            typeorm_1.TypeOrmModule.forRootAsync({
                imports: [config_1.ConfigModule.forFeature(sql_config_1.SqlConfig)],
                inject: [sql_config_1.SqlConfig.KEY],
                useFactory: (sqlConfig) => sqlConfig,
            }),
        ],
    })
], SqlModule);


/***/ }),
/* 155 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SqlConfig = void 0;
const config_1 = __webpack_require__(21);
exports.SqlConfig = (0, config_1.registerAs)('postgres', () => ({
    type: process.env.SQL_TYPE,
    host: process.env.SQL_HOST,
    port: Number(process.env.SQL_PORT),
    database: process.env.SQL_DATABASE,
    username: process.env.SQL_USERNAME,
    password: process.env.SQL_PASSWORD,
    autoLoadEntities: true,
    logging: process.env.NODE_ENV !== 'production' ? 'all' : ['error'],
}));


/***/ }),
/* 156 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GoogleDriverModule = void 0;
const common_1 = __webpack_require__(3);
const config_1 = __webpack_require__(21);
const google_driver_config_1 = __webpack_require__(157);
const google_driver_service_1 = __webpack_require__(158);
let GoogleDriverModule = class GoogleDriverModule {
};
exports.GoogleDriverModule = GoogleDriverModule;
exports.GoogleDriverModule = GoogleDriverModule = __decorate([
    (0, common_1.Module)({
        imports: [config_1.ConfigModule.forFeature(google_driver_config_1.GoogleDriverConfig)],
        controllers: [],
        providers: [google_driver_service_1.GoogleDriverService],
        exports: [google_driver_service_1.GoogleDriverService],
    })
], GoogleDriverModule);


/***/ }),
/* 157 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GoogleDriverConfig = void 0;
const config_1 = __webpack_require__(21);
exports.GoogleDriverConfig = (0, config_1.registerAs)('google_driver', () => ({
    clientId: process.env.GG_DRIVER_CLIENT_ID,
    clientSecret: process.env.GG_DRIVER_CLIENT_SECRET,
    redirectURI: process.env.GG_DRIVER_REDIRECT_URI,
}));


/***/ }),
/* 158 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var GoogleDriverService_1;
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GoogleDriverService = void 0;
const common_1 = __webpack_require__(3);
const config_1 = __webpack_require__(21);
const googleapis_1 = __webpack_require__(159);
const stream = __webpack_require__(160);
const time_helper_1 = __webpack_require__(119);
const google_driver_config_1 = __webpack_require__(157);
let GoogleDriverService = GoogleDriverService_1 = class GoogleDriverService {
    constructor(googleDriverConfig) {
        this.googleDriverConfig = googleDriverConfig;
        this.logger = new common_1.Logger(GoogleDriverService_1.name);
        this.cache = {};
    }
    setCache(email, data) {
        this.cache[email] = data;
    }
    getRootFolderName() {
        return 'MEA.VN';
    }
    getDefaultFolderName(oid) {
        return `MEA_${oid.toString().padStart(3, '000')}_${new Date().getFullYear()}`;
    }
    createOAuth2Client() {
        return new googleapis_1.google.auth.OAuth2(this.googleDriverConfig.clientId, this.googleDriverConfig.clientSecret, this.googleDriverConfig.redirectURI);
    }
    createDrive(email) {
        if (!email || !this.cache[email]) {
            throw new Error('Chưa đăng nhập tài khoản Google Driver, email = ' + email);
        }
        const oAuth2Client = this.createOAuth2Client();
        oAuth2Client.setCredentials({ refresh_token: this.cache[email].refreshToken });
        const drive = googleapis_1.google.drive({
            version: 'v3',
            auth: oAuth2Client,
        });
        return drive;
    }
    async getAuthUrl(options) {
        const url = this.createOAuth2Client().generateAuthUrl({
            access_type: 'offline',
            prompt: 'consent',
            scope: [
                'https://www.googleapis.com/auth/drive',
                'https://www.googleapis.com/auth/userinfo.email',
            ],
            state: options.state,
        });
        return { url };
    }
    async logout(email) {
        this.cache[email] = null;
    }
    async loginCallback(query) {
        const oid = Number(query.state);
        const oAuth2Client = this.createOAuth2Client();
        const { tokens } = await oAuth2Client.getToken(query.code);
        const refreshToken = tokens.refresh_token;
        oAuth2Client.setCredentials({ refresh_token: refreshToken });
        const oauth2 = googleapis_1.google.oauth2({
            auth: oAuth2Client,
            version: 'v2',
        });
        const userInfo = await oauth2.userinfo.get();
        const email = userInfo.data.email;
        this.cache[email] = { refreshToken };
        const drive = this.createDrive(email);
        const rootFolder = await this.createRootFolder(drive);
        const defaultFolder = await this.createDefaultFolder(drive, {
            oid,
            rootFolderId: rootFolder.id,
        });
        this.cache[email] = {
            refreshToken,
            rootFolderId: rootFolder.id,
            defaultFolderId: defaultFolder.id,
            defaultFolderName: defaultFolder.name,
        };
        return { email, refreshToken, oid };
    }
    async createRootFolder(drive) {
        const rootFolderName = this.getRootFolderName();
        let rootFolder;
        const folderList = await this.findFolderList(drive, { folderName: rootFolderName });
        rootFolder = folderList[0];
        if (!rootFolder) {
            rootFolder = await this.createFolder(drive, { folderName: rootFolderName });
        }
        return rootFolder;
    }
    async createDefaultFolder(drive, params) {
        const { oid, rootFolderId } = params;
        const defaultFolderName = this.getDefaultFolderName(oid);
        let defaultFolder;
        const folderList = await this.findFolderList(drive, {
            folderName: defaultFolderName,
            parentId: rootFolderId,
        });
        defaultFolder = folderList[0];
        if (!defaultFolder) {
            defaultFolder = await this.createFolder(drive, {
                folderName: defaultFolderName,
                parentFolderId: rootFolderId,
            });
        }
        return defaultFolder;
    }
    async getAllFolders(email) {
        const drive = this.createDrive(email);
        const response = await drive.files.list({
            q: "mimeType='application/vnd.google-apps.folder' and trashed=false and 'me' in owners",
            fields: 'nextPageToken, files(id, name, mimeType, trashed, parents, modifiedTime)',
        });
        const folderList = response.data.files;
        return folderList;
    }
    async findFolderList(drive, condition) {
        const { folderName, parentId } = condition;
        let queryString = '';
        if (folderName)
            queryString += ` and name='${folderName}'`;
        if (parentId)
            queryString += ` and '${parentId}' in parents`;
        const response = await drive.files.list({
            q: `mimeType='application/vnd.google-apps.folder' and trashed=false and 'me' in owners`
                + queryString,
            fields: 'nextPageToken, files(id, name, mimeType, trashed, parents, modifiedTime)',
        });
        const folderList = response.data.files;
        return folderList;
    }
    async createFolder(drive, params) {
        const { folderName, parentFolderId } = params;
        const response = await drive.files.create({
            requestBody: {
                name: folderName,
                mimeType: 'application/vnd.google-apps.folder',
                parents: parentFolderId ? [parentFolderId] : [],
            },
        });
        const folder = response.data;
        await drive.permissions.create({
            fileId: folder.id,
            requestBody: {
                role: 'reader',
                type: 'anyone',
            },
        });
        return folder;
    }
    async getById(drive, fileId) {
        const response = await drive.files.get({
            fileId,
            fields: 'id, name, mimeType, parents, trashed, modifiedTime, size',
        });
        return response.data;
    }
    async trashById(drive, fileId) {
        const response = await drive.files.update({
            fileId,
            requestBody: { trashed: true },
        });
        const fileTrash = response.data;
        return fileTrash;
    }
    async deleteById(drive, fileId) {
        const response = await drive.files.update({
            fileId,
            requestBody: { trashed: true },
        });
        return response.data;
    }
    async trashMultipleFiles(options) {
        const { email, fileIds, oid } = options;
        if (!fileIds.length)
            return { success: [], failed: [] };
        let drive;
        try {
            this.logger.debug(`[OID=${oid}] GoogleDriver ${email} start trashMultipleFiles, with ${fileIds.length} file`);
            drive = this.createDrive(email);
        }
        catch (error) {
            return { success: [], failed: fileIds };
        }
        const promiseSettled = await Promise.allSettled(fileIds.map((id) => this.trashById(drive, id)));
        const result = { success: [], failed: [] };
        promiseSettled.forEach((i, index) => {
            if (i.status === 'fulfilled') {
                result.success.push(i.value.id);
            }
            else {
                this.logger.error('Google Driver trash file error: ' + index);
                this.logger.error(i);
                result.failed.push(fileIds[index]);
            }
        });
        return result;
    }
    async deleteMultipleFiles(email, fileIds) {
        if (!fileIds.length)
            return { success: [], failed: [] };
        let drive;
        try {
            drive = this.createDrive(email);
        }
        catch (error) {
            return { success: [], failed: fileIds };
        }
        const promiseSettled = await Promise.allSettled(fileIds.map((id) => this.deleteById(drive, id)));
        const result = { success: [], failed: [] };
        promiseSettled.forEach((i, index) => {
            if (i.status === 'fulfilled') {
                result.success.push(i.value.id);
            }
            else {
                this.logger.error('Google Driver trash file error: ' + index);
                this.logger.error(i);
                result.failed.push(fileIds[index]);
            }
        });
        return result;
    }
    async createFile(drive, options) {
        const { title, parent, buffer, mimetype } = options;
        const bufferStream = new stream.PassThrough();
        bufferStream.end(buffer);
        const response = await drive.files.create({
            requestBody: {
                name: title,
                parents: [parent],
                mimeType: mimetype,
            },
            media: {
                mimeType: mimetype,
                body: bufferStream,
            },
            fields: 'id, name, mimeType, kind, size',
        });
        const file = response.data;
        await drive.permissions.create({
            fileId: file.id,
            requestBody: {
                role: 'reader',
                type: 'anyone',
            },
        });
        return file;
    }
    async uploadMultipleFiles(options) {
        const { files, email, oid, customerId } = options;
        if (!files.length)
            return [];
        this.logger.debug(`[OID=${oid}] GoogleDriver ${email} start uploadMultipleFiles, with ${files.length} file`);
        const drive = this.createDrive(email);
        if (!this.cache[email].rootFolderId) {
            const rootFolder = await this.createRootFolder(drive);
            this.cache[email].rootFolderId = rootFolder.id;
        }
        if (this.cache[email].defaultFolderName !== this.getDefaultFolderName(oid)) {
            const defaultFolder = await this.createDefaultFolder(drive, {
                oid,
                rootFolderId: this.cache[email].rootFolderId,
            });
            this.cache[email].defaultFolderId = defaultFolder.id;
            this.cache[email].defaultFolderName = defaultFolder.name;
        }
        const now = Date.now();
        const data = await Promise.all(files.map((item, index) => {
            return this.createFile(drive, {
                buffer: item.buffer,
                mimetype: item.mimetype,
                parent: this.cache[email].defaultFolderId,
                title: oid
                    + '-'
                    + customerId
                    + '-'
                    + time_helper_1.DTimer.timeToText(now + index, 'YYYY-MM-DD-hh-mm-ss-xxx'),
            });
        }));
        return data;
    }
};
exports.GoogleDriverService = GoogleDriverService;
exports.GoogleDriverService = GoogleDriverService = GoogleDriverService_1 = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, common_1.Inject)(google_driver_config_1.GoogleDriverConfig.KEY)),
    __metadata("design:paramtypes", [typeof (_a = typeof config_1.ConfigType !== "undefined" && config_1.ConfigType) === "function" ? _a : Object])
], GoogleDriverService);


/***/ }),
/* 159 */
/***/ ((module) => {

module.exports = require("googleapis");

/***/ }),
/* 160 */
/***/ ((module) => {

module.exports = require("stream");

/***/ }),
/* 161 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AuthModule = void 0;
const common_1 = __webpack_require__(3);
const api_auth_module_1 = __webpack_require__(162);
const api_me_module_1 = __webpack_require__(179);
let AuthModule = class AuthModule {
};
exports.AuthModule = AuthModule;
exports.AuthModule = AuthModule = __decorate([
    (0, common_1.Module)({
        imports: [api_auth_module_1.ApiAuthModule, api_me_module_1.ApiMeModule],
        controllers: [],
        providers: [],
    })
], AuthModule);


/***/ }),
/* 162 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiAuthModule = void 0;
const common_1 = __webpack_require__(3);
const config_1 = __webpack_require__(21);
const jwt_extend_module_1 = __webpack_require__(88);
const jwt_config_1 = __webpack_require__(91);
const environments_1 = __webpack_require__(20);
const email_module_1 = __webpack_require__(163);
const api_auth_controller_1 = __webpack_require__(166);
const api_auth_service_1 = __webpack_require__(168);
let ApiAuthModule = class ApiAuthModule {
};
exports.ApiAuthModule = ApiAuthModule;
exports.ApiAuthModule = ApiAuthModule = __decorate([
    (0, common_1.Module)({
        imports: [
            config_1.ConfigModule.forFeature(environments_1.GlobalConfig),
            config_1.ConfigModule.forFeature(jwt_config_1.JwtConfig),
            jwt_extend_module_1.JwtExtendModule,
            email_module_1.EmailModule,
        ],
        controllers: [api_auth_controller_1.ApiAuthController],
        providers: [api_auth_service_1.ApiAuthService],
    })
], ApiAuthModule);


/***/ }),
/* 163 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EmailModule = void 0;
const mailer_1 = __webpack_require__(164);
const common_1 = __webpack_require__(3);
const config_1 = __webpack_require__(21);
const environments_1 = __webpack_require__(20);
const email_service_1 = __webpack_require__(165);
let EmailModule = class EmailModule {
};
exports.EmailModule = EmailModule;
exports.EmailModule = EmailModule = __decorate([
    (0, common_1.Module)({
        imports: [
            mailer_1.MailerModule.forRootAsync({
                imports: [config_1.ConfigModule.forFeature(environments_1.EmailConfig)],
                inject: [environments_1.EmailConfig.KEY],
                useFactory: (mailConfig) => {
                    return {
                        transport: {
                            host: mailConfig.host,
                            port: mailConfig.port,
                            auth: {
                                user: mailConfig.user,
                                pass: mailConfig.password,
                            },
                        },
                        defaults: { from: `"${mailConfig.name}" <${mailConfig.from}>` },
                    };
                },
            }),
        ],
        providers: [email_service_1.EmailService],
        exports: [email_service_1.EmailService],
    })
], EmailModule);


/***/ }),
/* 164 */
/***/ ((module) => {

module.exports = require("@nestjs-modules/mailer");

/***/ }),
/* 165 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var EmailService_1;
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EmailService = void 0;
const mailer_1 = __webpack_require__(164);
const common_1 = __webpack_require__(3);
const config_1 = __webpack_require__(21);
let EmailService = EmailService_1 = class EmailService {
    constructor(configService, mailerService) {
        this.configService = configService;
        this.mailerService = mailerService;
        this.logger = new common_1.Logger(EmailService_1.name);
        this.subjectPrefix = this.configService.get('mail.subject_prefix');
    }
    async send(options) {
        return await this.mailerService.sendMail(options);
    }
};
exports.EmailService = EmailService;
exports.EmailService = EmailService = EmailService_1 = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof config_1.ConfigService !== "undefined" && config_1.ConfigService) === "function" ? _a : Object, typeof (_b = typeof mailer_1.MailerService !== "undefined" && mailer_1.MailerService) === "function" ? _b : Object])
], EmailService);


/***/ }),
/* 166 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiAuthController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const external_request_1 = __webpack_require__(167);
const api_auth_service_1 = __webpack_require__(168);
const request_1 = __webpack_require__(170);
let ApiAuthController = class ApiAuthController {
    constructor(apiAuthService) {
        this.apiAuthService = apiAuthService;
    }
    async login(loginDto, dataExternal) {
        return await this.apiAuthService.login(loginDto, dataExternal);
    }
    async loginRoot(loginDto, dataExternal) {
        return await this.apiAuthService.loginRoot(loginDto, dataExternal);
    }
    async loginDemo(dataExternal) {
        return await this.apiAuthService.loginDemo(dataExternal);
    }
    async forgotPassword(body) {
        return await this.apiAuthService.forgotPassword(body);
    }
    async resetPassword(body) {
        return await this.apiAuthService.resetPassword(body);
    }
    async grantAccessToken(dataExternal, body) {
        return await this.apiAuthService.grantAccessToken(body.refreshToken, dataExternal);
    }
    async logout(body) {
        return this.apiAuthService.logout(body.refreshToken);
    }
};
exports.ApiAuthController = ApiAuthController;
__decorate([
    (0, common_1.Post)('login'),
    __param(0, (0, common_1.Body)()),
    __param(1, (0, external_request_1.External)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof request_1.LoginBody !== "undefined" && request_1.LoginBody) === "function" ? _b : Object, typeof (_c = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _c : Object]),
    __metadata("design:returntype", Promise)
], ApiAuthController.prototype, "login", null);
__decorate([
    (0, common_1.Post)('login-root'),
    __param(0, (0, common_1.Body)()),
    __param(1, (0, external_request_1.External)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof request_1.LoginRootBody !== "undefined" && request_1.LoginRootBody) === "function" ? _d : Object, typeof (_e = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _e : Object]),
    __metadata("design:returntype", Promise)
], ApiAuthController.prototype, "loginRoot", null);
__decorate([
    (0, common_1.Post)('login-demo'),
    __param(0, (0, external_request_1.External)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object]),
    __metadata("design:returntype", Promise)
], ApiAuthController.prototype, "loginDemo", null);
__decorate([
    (0, common_1.Post)('forgot-password'),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_g = typeof request_1.ForgotPasswordBody !== "undefined" && request_1.ForgotPasswordBody) === "function" ? _g : Object]),
    __metadata("design:returntype", Promise)
], ApiAuthController.prototype, "forgotPassword", null);
__decorate([
    (0, common_1.Post)('reset-password'),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_h = typeof request_1.ResetPasswordBody !== "undefined" && request_1.ResetPasswordBody) === "function" ? _h : Object]),
    __metadata("design:returntype", Promise)
], ApiAuthController.prototype, "resetPassword", null);
__decorate([
    (0, common_1.Post)('refresh-token'),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_j = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _j : Object, typeof (_k = typeof request_1.RefreshTokenBody !== "undefined" && request_1.RefreshTokenBody) === "function" ? _k : Object]),
    __metadata("design:returntype", Promise)
], ApiAuthController.prototype, "grantAccessToken", null);
__decorate([
    (0, common_1.Post)('logout'),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_l = typeof request_1.RefreshTokenBody !== "undefined" && request_1.RefreshTokenBody) === "function" ? _l : Object]),
    __metadata("design:returntype", Promise)
], ApiAuthController.prototype, "logout", null);
exports.ApiAuthController = ApiAuthController = __decorate([
    (0, swagger_1.ApiTags)('Auth'),
    (0, common_1.Controller)('auth'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_auth_service_1.ApiAuthService !== "undefined" && api_auth_service_1.ApiAuthService) === "function" ? _a : Object])
], ApiAuthController);


/***/ }),
/* 167 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.External = void 0;
const common_1 = __webpack_require__(3);
exports.External = (0, common_1.createParamDecorator)((data, ctx) => {
    const request = ctx.switchToHttp().getRequest();
    const requestExternal = request.raw;
    return requestExternal.external;
});


/***/ }),
/* 168 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiAuthService = void 0;
const common_1 = __webpack_require__(3);
const config_1 = __webpack_require__(21);
const typeorm_1 = __webpack_require__(35);
const bcrypt = __webpack_require__(169);
const typeorm_2 = __webpack_require__(33);
const cache_token_service_1 = __webpack_require__(86);
const exception_filter_1 = __webpack_require__(9);
const string_helper_1 = __webpack_require__(98);
const jwt_extend_service_1 = __webpack_require__(90);
const jwt_config_1 = __webpack_require__(91);
const user_entity_1 = __webpack_require__(69);
const customer_repository_1 = __webpack_require__(100);
const distributor_repository_1 = __webpack_require__(102);
const organization_repository_1 = __webpack_require__(34);
const user_repository_1 = __webpack_require__(84);
const environments_1 = __webpack_require__(20);
const email_service_1 = __webpack_require__(165);
let ApiAuthService = class ApiAuthService {
    constructor(globalConfig, jwtConfig, dataSource, manager, emailService, cacheTokenService, jwtExtendService, organizationRepository, customerRepository, userRepository, distributorRepository) {
        this.globalConfig = globalConfig;
        this.jwtConfig = jwtConfig;
        this.dataSource = dataSource;
        this.manager = manager;
        this.emailService = emailService;
        this.cacheTokenService = cacheTokenService;
        this.jwtExtendService = jwtExtendService;
        this.organizationRepository = organizationRepository;
        this.customerRepository = customerRepository;
        this.userRepository = userRepository;
        this.distributorRepository = distributorRepository;
    }
    async login(loginDto, dataExternal) {
        var _a;
        const { ip, os, browser, mobile } = dataExternal;
        const [user] = await this.dataSource.getRepository(user_entity_1.default).find({
            relations: { organization: true },
            relationLoadStrategy: 'join',
            where: {
                username: loginDto.username,
                organization: { phone: loginDto.orgPhone },
            },
        });
        if (!user)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        if (!user.isActive || !((_a = user.organization) === null || _a === void 0 ? void 0 : _a.isActive)) {
            throw new exception_filter_1.BusinessException('common.AccountInactive');
        }
        const checkPassword = await bcrypt.compare(loginDto.password, user.hashPassword);
        if (!checkPassword)
            throw new exception_filter_1.BusinessException('error.User.WrongPassword');
        const token = this.jwtExtendService.createTokenFromUser(user, ip);
        await this.cacheTokenService.addAccessToken({
            oid: user.oid,
            uid: user.id,
            accessExp: token.accessExp,
            refreshExp: token.refreshExp,
            ip,
            os,
            browser,
            mobile,
        });
        return {
            data: {
                user,
                accessToken: token.accessToken,
                accessExp: token.accessExp,
                refreshToken: token.refreshToken,
                refreshExp: token.refreshExp,
            },
        };
    }
    async loginRoot(loginRootDto, dataExternal) {
        var _a;
        const { ip, os, browser, mobile } = dataExternal;
        const [root] = await this.dataSource.getRepository(user_entity_1.default).find({
            relations: { organization: true },
            relationLoadStrategy: 'join',
            where: {
                username: loginRootDto.username,
                organization: { phone: loginRootDto.orgPhone },
            },
        });
        if (!root)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        if (!root.isActive || !((_a = root.organization) === null || _a === void 0 ? void 0 : _a.isActive)) {
            throw new exception_filter_1.BusinessException('common.AccountInactive');
        }
        const checkPassword = await bcrypt.compare(loginRootDto.password, root.hashPassword);
        if (!checkPassword)
            throw new exception_filter_1.BusinessException('error.User.WrongPassword');
        const [user] = await this.dataSource.getRepository(user_entity_1.default).find({
            relations: { organization: true },
            relationLoadStrategy: 'join',
            where: {
                oid: loginRootDto.oid,
                isAdmin: 1,
            },
        });
        const token = this.jwtExtendService.createTokenFromUser(user, ip);
        await this.cacheTokenService.addAccessToken({
            oid: user.oid,
            uid: user.id,
            accessExp: token.accessExp,
            refreshExp: token.refreshExp,
            ip,
            os,
            browser,
            mobile,
        });
        return {
            data: {
                user,
                accessToken: token.accessToken,
                accessExp: token.accessExp,
                refreshToken: token.refreshToken,
                refreshExp: token.refreshExp,
            },
        };
    }
    async loginDemo(dataExternal) {
        var _a;
        const { ip, os, browser, mobile } = dataExternal;
        const [user] = await this.dataSource.getRepository(user_entity_1.default).find({
            relations: { organization: true },
            relationLoadStrategy: 'query',
            where: { id: 4, oid: 4 },
        });
        if (!user)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        if (!user.isActive || !((_a = user.organization) === null || _a === void 0 ? void 0 : _a.isActive)) {
            throw new exception_filter_1.BusinessException('common.AccountInactive');
        }
        const token = this.jwtExtendService.createTokenFromUser(user, ip);
        await this.cacheTokenService.addAccessToken({
            oid: user.oid,
            uid: user.id,
            accessExp: token.accessExp,
            refreshExp: token.refreshExp,
            ip,
            os,
            browser,
            mobile,
        });
        return {
            data: {
                user,
                accessToken: token.accessToken,
                accessExp: token.accessExp,
                refreshToken: token.refreshToken,
                refreshExp: token.refreshExp,
            },
        };
    }
    async forgotPassword(body) {
        const organization = await this.organizationRepository.findOneBy({
            phone: body.organizationPhone,
            email: body.organizationEmail,
        });
        if (!organization) {
            throw exception_filter_1.BusinessException.create({ message: 'error.Database.NotFound', details: 'Organization' });
        }
        const user = await this.userRepository.findOne({
            condition: {
                oid: organization.id,
                username: body.username,
            },
        });
        if (!user) {
            throw exception_filter_1.BusinessException.create({ message: 'error.Database.NotFound', details: 'User' });
        }
        if (!user.isActive || !organization.isActive) {
            throw new exception_filter_1.BusinessException('common.AccountInactive');
        }
        const token = encodeURIComponent((0, string_helper_1.encrypt)(user.hashPassword, this.jwtConfig.accessKey, 30 * 60 * 1000));
        const link = `${this.globalConfig.DOMAIN_FRONT_END}/auth/reset-password`
            + `?token=${token}&organizationPhone=${body.organizationPhone}`
            + `&username=${body.username}&updatedAt=${user.updatedAt}`
            + `&ver=1`;
        const sendEmailResult = await this.emailService.send({
            to: body.organizationEmail,
            subject: '[MEA] - Quên mật khẩu',
            from: 'medihome.vn@gmail.com',
            text: 'forgot_password',
            html: '<p>Bạn nhận được yêu cầu reset mật khẩu. Nhấn vào đường link sau để cập nhật mật khẩu mới: </p>'
                + `<p><a href="${link}">${link}</a></p>`
                + '<p>Link sẽ bị vô hiệu hóa sau 30 phút</p>',
        });
        return { data: { sendEmailResult } };
    }
    async resetPassword(body) {
        const organization = await this.organizationRepository.findOneBy({
            phone: body.organizationPhone,
        });
        if (!organization) {
            throw exception_filter_1.BusinessException.create({ message: 'error.Database.NotFound', details: 'Organization' });
        }
        const user = await this.userRepository.findOne({
            condition: {
                oid: organization.id,
                username: body.username,
            },
        });
        if (!user) {
            throw exception_filter_1.BusinessException.create({ message: 'error.Database.NotFound', details: 'User' });
        }
        if (user.updatedAt !== body.updatedAt) {
            throw new common_1.HttpException('Token đã được sử dụng', common_1.HttpStatus.BAD_GATEWAY);
        }
        let hash;
        try {
            hash = (0, string_helper_1.decrypt)(body.token, this.jwtConfig.accessKey);
        }
        catch (error) {
            throw new common_1.HttpException('Thời gian reset password đã quá hạn', common_1.HttpStatus.BAD_GATEWAY);
        }
        if (user.hashPassword !== hash) {
            throw new exception_filter_1.BusinessException('error.Token.Invalid');
        }
        const hashPassword = await bcrypt.hash(body.password, 5);
        const secret = (0, string_helper_1.encrypt)(body.password, body.username);
        await this.userRepository.update({ id: user.id }, { hashPassword, secret });
        await this.cacheTokenService.removeAllRefreshToken({ oid: user.oid, uid: user.id });
        return { data: true };
    }
    async grantAccessToken(refreshToken, dataExternal) {
        const { ip, os, browser, mobile } = dataExternal;
        const jwtPayloadRefresh = this.jwtExtendService.verifyRefreshToken(refreshToken, ip);
        const checkTokenCache = await this.cacheTokenService.checkRefreshToken({
            oid: jwtPayloadRefresh.data.oid,
            uid: jwtPayloadRefresh.data.uid,
            refreshExp: jwtPayloadRefresh.exp,
        });
        if (!checkTokenCache) {
            throw new exception_filter_1.BusinessException('error.Token.RefreshTokenNoCache', {}, common_1.HttpStatus.UNAUTHORIZED);
        }
        const user = await this.userRepository.findOne({
            relation: { organization: true },
            condition: {
                id: jwtPayloadRefresh.data.uid,
                oid: jwtPayloadRefresh.data.oid,
            },
        });
        if (!user)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        const token = this.jwtExtendService.createAccessToken(user, ip);
        await this.cacheTokenService.updateAccessToken({
            oid: user.oid,
            uid: user.id,
            accessExp: token.accessExp,
            refreshExp: jwtPayloadRefresh.exp,
            ip,
            os,
            browser,
            mobile,
        });
        return {
            data: { accessExp: token.accessExp, accessToken: token.accessToken },
        };
    }
    async logout(refreshToken) {
        const jwtPayload = this.jwtExtendService.decodeRefreshToken(refreshToken);
        await this.cacheTokenService.removeRefreshToken({
            oid: jwtPayload.data.oid,
            uid: jwtPayload.data.uid,
            refreshExp: jwtPayload.exp,
        });
        return { data: true };
    }
};
exports.ApiAuthService = ApiAuthService;
exports.ApiAuthService = ApiAuthService = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, common_1.Inject)(environments_1.GlobalConfig.KEY)),
    __param(1, (0, common_1.Inject)(jwt_config_1.JwtConfig.KEY)),
    __param(3, (0, typeorm_1.InjectEntityManager)()),
    __metadata("design:paramtypes", [typeof (_a = typeof config_1.ConfigType !== "undefined" && config_1.ConfigType) === "function" ? _a : Object, typeof (_b = typeof config_1.ConfigType !== "undefined" && config_1.ConfigType) === "function" ? _b : Object, typeof (_c = typeof typeorm_2.DataSource !== "undefined" && typeorm_2.DataSource) === "function" ? _c : Object, typeof (_d = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _d : Object, typeof (_e = typeof email_service_1.EmailService !== "undefined" && email_service_1.EmailService) === "function" ? _e : Object, typeof (_f = typeof cache_token_service_1.CacheTokenService !== "undefined" && cache_token_service_1.CacheTokenService) === "function" ? _f : Object, typeof (_g = typeof jwt_extend_service_1.JwtExtendService !== "undefined" && jwt_extend_service_1.JwtExtendService) === "function" ? _g : Object, typeof (_h = typeof organization_repository_1.OrganizationRepository !== "undefined" && organization_repository_1.OrganizationRepository) === "function" ? _h : Object, typeof (_j = typeof customer_repository_1.CustomerRepository !== "undefined" && customer_repository_1.CustomerRepository) === "function" ? _j : Object, typeof (_k = typeof user_repository_1.UserRepository !== "undefined" && user_repository_1.UserRepository) === "function" ? _k : Object, typeof (_l = typeof distributor_repository_1.DistributorRepository !== "undefined" && distributor_repository_1.DistributorRepository) === "function" ? _l : Object])
], ApiAuthService);


/***/ }),
/* 169 */
/***/ ((module) => {

module.exports = require("bcrypt");

/***/ }),
/* 170 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(171), exports);
__exportStar(__webpack_require__(175), exports);
__exportStar(__webpack_require__(176), exports);
__exportStar(__webpack_require__(177), exports);
__exportStar(__webpack_require__(178), exports);


/***/ }),
/* 171 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ForgotPasswordBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
class ForgotPasswordBody {
}
exports.ForgotPasswordBody = ForgotPasswordBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: '0376899866' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.Validate)(class_validator_custom_1.IsPhone),
    __metadata("design:type", String)
], ForgotPasswordBody.prototype, "organizationPhone", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'duycodecom@gmail.com' }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        const [mail, domain] = value.split('@');
        const mailFormat = mail.replace(/\./g, '').replace(/\+.*?$/g, '');
        return `${mailFormat}@${domain}`;
    }),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.Validate)(class_validator_custom_1.IsGmail),
    __metadata("design:type", String)
], ForgotPasswordBody.prototype, "organizationEmail", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'admin' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.MinLength)(4),
    __metadata("design:type", String)
], ForgotPasswordBody.prototype, "username", void 0);


/***/ }),
/* 172 */
/***/ ((module) => {

module.exports = require("class-validator");

/***/ }),
/* 173 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IsGmail = exports.IsPhone = void 0;
exports.IsNumberGreaterThan = IsNumberGreaterThan;
exports.IsEnumValue = IsEnumValue;
const class_validator_1 = __webpack_require__(172);
const typescript_helper_1 = __webpack_require__(174);
let IsPhone = class IsPhone {
    validate(text, args) {
        if (text === '')
            return true;
        if (typeof text !== 'string' || text.length !== 10)
            return false;
        return /((09|03|07|08|05)+([0-9]{8})\b)/g.test(text);
    }
    defaultMessage(args) {
        return '$property must be real phone number !';
    }
};
exports.IsPhone = IsPhone;
exports.IsPhone = IsPhone = __decorate([
    (0, class_validator_1.ValidatorConstraint)({ name: 'isPhone', async: false })
], IsPhone);
let IsGmail = class IsGmail {
    validate(text, args) {
        if (typeof text !== 'string')
            return false;
        return /^([a-zA-Z0-9]|\.|-|_)+(@gmail.com)$/.test(text);
    }
    defaultMessage(args) {
        return '$property must be a gmail address !';
    }
};
exports.IsGmail = IsGmail;
exports.IsGmail = IsGmail = __decorate([
    (0, class_validator_1.ValidatorConstraint)({ name: 'isGmail', async: false })
], IsGmail);
function IsNumberGreaterThan(options, validationOptions) {
    return function (object, propertyName) {
        (0, class_validator_1.registerDecorator)({
            name: 'isNumberGreaterThan',
            target: object.constructor,
            propertyName,
            constraints: [options],
            options: validationOptions,
            validator: {
                validate(value, args) {
                    const [options] = args.constraints;
                    return typeof value === 'number' && value > options;
                },
                defaultMessage(args) {
                    const [options] = args.constraints;
                    return `$property ($value) must be a number and greater than ${options}`;
                },
            },
        });
    };
}
function IsEnumValue(options, validationOptions) {
    return function (object, propertyName) {
        (0, class_validator_1.registerDecorator)({
            name: 'isEnumValue',
            target: object.constructor,
            propertyName,
            constraints: [options],
            options: validationOptions,
            validator: {
                validate(value, args) {
                    const [options] = args.constraints;
                    const valueOptions = (0, typescript_helper_1.valuesEnum)(options);
                    return valueOptions.includes(value);
                },
                defaultMessage(args) {
                    const [options] = args.constraints;
                    return `$property ($value) must be an enum ${(0, typescript_helper_1.stringEnum)(options)}`;
                },
            },
        });
    };
}


/***/ }),
/* 174 */
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stringEnum = exports.objectEnum = exports.valuesEnum = exports.keysEnum = void 0;
const keysEnum = (e) => {
    return Object.keys(e).filter((key) => isNaN(parseInt(key)));
};
exports.keysEnum = keysEnum;
const valuesEnum = (e) => {
    return (0, exports.keysEnum)(e).map((key) => e[key]);
};
exports.valuesEnum = valuesEnum;
const objectEnum = (e) => {
    return (0, exports.keysEnum)(e).reduce((acc, key) => {
        acc[key] = e[key];
        return acc;
    }, {});
};
exports.objectEnum = objectEnum;
const stringEnum = (e) => {
    const str = (0, exports.keysEnum)(e)
        .map((key) => `${key}:${e[key]}`)
        .join(', ');
    return `{ ${str} }`;
};
exports.stringEnum = stringEnum;


/***/ }),
/* 175 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LoginRootBody = exports.LoginBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
class LoginBody {
}
exports.LoginBody = LoginBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: '0376899866' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.Validate)(class_validator_custom_1.IsPhone),
    __metadata("design:type", String)
], LoginBody.prototype, "orgPhone", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'admin' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.MinLength)(4),
    __metadata("design:type", String)
], LoginBody.prototype, "username", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Abc@123456' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.MinLength)(6),
    __metadata("design:type", String)
], LoginBody.prototype, "password", void 0);
class LoginRootBody extends LoginBody {
}
exports.LoginRootBody = LoginRootBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 4 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], LoginRootBody.prototype, "oid", void 0);


/***/ }),
/* 176 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RefreshTokenBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class RefreshTokenBody {
}
exports.RefreshTokenBody = RefreshTokenBody;
__decorate([
    (0, swagger_1.ApiProperty)(),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    __metadata("design:type", String)
], RefreshTokenBody.prototype, "refreshToken", void 0);


/***/ }),
/* 177 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RegisterBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
class RegisterBody {
}
exports.RegisterBody = RegisterBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'example-2@gmail.com' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.Validate)(class_validator_custom_1.IsGmail),
    __metadata("design:type", String)
], RegisterBody.prototype, "email", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: '0376899866' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.Validate)(class_validator_custom_1.IsPhone),
    __metadata("design:type", String)
], RegisterBody.prototype, "phone", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'admin' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.MinLength)(4),
    __metadata("design:type", String)
], RegisterBody.prototype, "username", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Abc@123456' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.MinLength)(6),
    __metadata("design:type", String)
], RegisterBody.prototype, "password", void 0);


/***/ }),
/* 178 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ResetPasswordBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
class ResetPasswordBody {
}
exports.ResetPasswordBody = ResetPasswordBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: '0376899866' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.Validate)(class_validator_custom_1.IsPhone),
    __metadata("design:type", String)
], ResetPasswordBody.prototype, "organizationPhone", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'admin' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.MinLength)(4),
    __metadata("design:type", String)
], ResetPasswordBody.prototype, "username", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Abc@123456' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.MinLength)(6),
    __metadata("design:type", String)
], ResetPasswordBody.prototype, "password", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: '$2b$05$G17lx6yO8fK2iJK6tqX2XODsCrawFzSht5vJQjE7wlDJO0.4zxPxO' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.MinLength)(6),
    __metadata("design:type", String)
], ResetPasswordBody.prototype, "token", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: Date.now() }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ResetPasswordBody.prototype, "updatedAt", void 0);


/***/ }),
/* 179 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiMeModule = void 0;
const common_1 = __webpack_require__(3);
const api_me_controller_1 = __webpack_require__(180);
const api_me_service_1 = __webpack_require__(181);
let ApiMeModule = class ApiMeModule {
};
exports.ApiMeModule = ApiMeModule;
exports.ApiMeModule = ApiMeModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_me_controller_1.ApiMeController],
        providers: [api_me_service_1.ApiMeService],
        exports: [],
    })
], ApiMeModule);


/***/ }),
/* 180 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiMeController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const api_me_service_1 = __webpack_require__(181);
const request_1 = __webpack_require__(182);
let ApiMeController = class ApiMeController {
    constructor(apiUserService) {
        this.apiUserService = apiUserService;
    }
    async info({ oid, uid, permissionIds }) {
        return await this.apiUserService.info({ oid, uid, permissionIds });
    }
    async detail({ oid, uid }, body) {
        return await this.apiUserService.changePassword(oid, uid, body);
    }
    async updateInfo({ oid, uid }, body) {
        return await this.apiUserService.updateInfo(oid, uid, body);
    }
};
exports.ApiMeController = ApiMeController;
__decorate([
    (0, common_1.Get)('info'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object]),
    __metadata("design:returntype", Promise)
], ApiMeController.prototype, "info", null);
__decorate([
    (0, common_1.Patch)('change-password'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_c = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _c : Object, typeof (_d = typeof request_1.UserChangePasswordBody !== "undefined" && request_1.UserChangePasswordBody) === "function" ? _d : Object]),
    __metadata("design:returntype", Promise)
], ApiMeController.prototype, "detail", null);
__decorate([
    (0, common_1.Patch)('update-info'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_e = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _e : Object, typeof (_f = typeof request_1.UserUpdateInfoBody !== "undefined" && request_1.UserUpdateInfoBody) === "function" ? _f : Object]),
    __metadata("design:returntype", Promise)
], ApiMeController.prototype, "updateInfo", null);
exports.ApiMeController = ApiMeController = __decorate([
    (0, swagger_1.ApiTags)('Me'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('me'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_me_service_1.ApiMeService !== "undefined" && api_me_service_1.ApiMeService) === "function" ? _a : Object])
], ApiMeController);


/***/ }),
/* 181 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiMeService = void 0;
const common_1 = __webpack_require__(3);
const bcrypt = __webpack_require__(169);
const cache_data_service_1 = __webpack_require__(30);
const exception_filter_1 = __webpack_require__(9);
const string_helper_1 = __webpack_require__(98);
const user_repository_1 = __webpack_require__(84);
let ApiMeService = class ApiMeService {
    constructor(userRepository, cacheDataService) {
        this.userRepository = userRepository;
        this.cacheDataService = cacheDataService;
    }
    async info(params) {
        const { uid, oid, permissionIds } = params;
        const [user, organization, permissionAll, settingMap, settingMapRoot] = await Promise.all([
            this.cacheDataService.getUser(oid, uid),
            this.cacheDataService.getOrganization(oid),
            this.cacheDataService.getPermissionAllList(),
            this.cacheDataService.getSettingMap(oid),
            this.cacheDataService.getSettingMap(1),
        ]);
        return {
            data: {
                user,
                organization,
                permissionIds,
                permissionAll,
                settingMap,
                rootSetting: settingMapRoot.ROOT_SETTING,
            },
        };
    }
    async changePassword(oid, id, body) {
        const { oldPassword, newPassword } = body;
        const user = await this.userRepository.findOneBy({ id, oid });
        if (!user)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        const checkPassword = await bcrypt.compare(oldPassword, user.hashPassword);
        if (!checkPassword)
            throw new exception_filter_1.BusinessException('error.User.WrongPassword');
        const hashPassword = await bcrypt.hash(newPassword, 5);
        const secret = (0, string_helper_1.encrypt)(newPassword, user.username);
        await this.userRepository.update({ oid, id }, { hashPassword, secret });
        return { data: true };
    }
    async updateInfo(oid, id, body) {
        await this.userRepository.update({ oid, id }, {
            fullName: body.fullName,
            birthday: body.birthday,
            gender: body.gender,
            phone: body.phone,
        });
        const user = await this.userRepository.findOneBy({ oid, id });
        return { data: { user } };
    }
};
exports.ApiMeService = ApiMeService;
exports.ApiMeService = ApiMeService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof user_repository_1.UserRepository !== "undefined" && user_repository_1.UserRepository) === "function" ? _a : Object, typeof (_b = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _b : Object])
], ApiMeService);


/***/ }),
/* 182 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(183), exports);
__exportStar(__webpack_require__(184), exports);
__exportStar(__webpack_require__(186), exports);
__exportStar(__webpack_require__(187), exports);


/***/ }),
/* 183 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UserChangePasswordBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class UserChangePasswordBody {
}
exports.UserChangePasswordBody = UserChangePasswordBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Abc@123456' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.MinLength)(6),
    __metadata("design:type", String)
], UserChangePasswordBody.prototype, "oldPassword", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Abc@123456' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.MinLength)(6),
    __metadata("design:type", String)
], UserChangePasswordBody.prototype, "newPassword", void 0);


/***/ }),
/* 184 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UserGetOneQuery = exports.UserGetManyQuery = exports.UserPaginationQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const user_options_request_1 = __webpack_require__(186);
class UserPaginationQuery extends query_1.PaginationQuery {
}
exports.UserPaginationQuery = UserPaginationQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: user_options_request_1.UserFilterQuery }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => user_options_request_1.UserFilterQuery),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof user_options_request_1.UserFilterQuery !== "undefined" && user_options_request_1.UserFilterQuery) === "function" ? _a : Object)
], UserPaginationQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: user_options_request_1.UserSortQuery }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => user_options_request_1.UserSortQuery),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof user_options_request_1.UserSortQuery !== "undefined" && user_options_request_1.UserSortQuery) === "function" ? _b : Object)
], UserPaginationQuery.prototype, "sort", void 0);
class UserGetManyQuery {
}
exports.UserGetManyQuery = UserGetManyQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 10 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => Number),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], UserGetManyQuery.prototype, "limit", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: user_options_request_1.UserFilterQuery }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => user_options_request_1.UserFilterQuery),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof user_options_request_1.UserFilterQuery !== "undefined" && user_options_request_1.UserFilterQuery) === "function" ? _c : Object)
], UserGetManyQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: user_options_request_1.UserRelationQuery }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => user_options_request_1.UserRelationQuery),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_d = typeof user_options_request_1.UserRelationQuery !== "undefined" && user_options_request_1.UserRelationQuery) === "function" ? _d : Object)
], UserGetManyQuery.prototype, "relation", void 0);
class UserGetOneQuery {
}
exports.UserGetOneQuery = UserGetOneQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: user_options_request_1.UserRelationQuery }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => user_options_request_1.UserRelationQuery),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_e = typeof user_options_request_1.UserRelationQuery !== "undefined" && user_options_request_1.UserRelationQuery) === "function" ? _e : Object)
], UserGetOneQuery.prototype, "relation", void 0);


/***/ }),
/* 185 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MultiMongoIdQuery = exports.SortQuery = exports.LimitQuery = exports.PaginationQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class PaginationQuery {
}
exports.PaginationQuery = PaginationQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => parseInt(value)),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], PaginationQuery.prototype, "page", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 10 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => parseInt(value)),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(3),
    (0, class_validator_1.Max)(100),
    __metadata("design:type", Number)
], PaginationQuery.prototype, "limit", void 0);
class LimitQuery {
}
exports.LimitQuery = LimitQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 10 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value ? parseInt(value) : undefined)),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(3),
    (0, class_validator_1.Max)(100),
    __metadata("design:type", Number)
], LimitQuery.prototype, "limit", void 0);
class SortQuery {
}
exports.SortQuery = SortQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], SortQuery.prototype, "id", void 0);
class MultiMongoIdQuery {
}
exports.MultiMongoIdQuery = MultiMongoIdQuery;
__decorate([
    (0, swagger_1.ApiProperty)({
        type: String,
        example: '63fdde9517a7317f0e8f959a,63fdde9517a7317f0e8f959a',
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (value === null || value === void 0 ? void 0 : value.length)
            return value === null || value === void 0 ? void 0 : value.split(',');
        else
            return [];
    }),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsMongoId)({ each: true }),
    __metadata("design:type", Array)
], MultiMongoIdQuery.prototype, "ids", void 0);


/***/ }),
/* 186 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UserSortQuery = exports.UserFilterQuery = exports.UserRelationQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
class UserRelationQuery {
}
exports.UserRelationQuery = UserRelationQuery;
class UserFilterQuery {
}
exports.UserFilterQuery = UserFilterQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ name: 'filter[isActive]', example: 1 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (['1', 'true'].includes(value))
            return 1;
        if (['0', 'false'].includes(value))
            return 0;
        return undefined;
    }),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], UserFilterQuery.prototype, "isActive", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ name: 'filter[fullName]' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], UserFilterQuery.prototype, "fullName", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ name: 'filter[phone]' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], UserFilterQuery.prototype, "phone", void 0);
class UserSortQuery extends query_1.SortQuery {
}
exports.UserSortQuery = UserSortQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ name: 'sort[fullName]', enum: ['ASC', 'DESC'], example: 'DESC' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], UserSortQuery.prototype, "fullName", void 0);


/***/ }),
/* 187 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UserUpdateInfoBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
class UserUpdateInfoBody {
}
exports.UserUpdateInfoBody = UserUpdateInfoBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Phạm Hoàng Mai' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], UserUpdateInfoBody.prototype, "fullName", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1678890707005 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], UserUpdateInfoBody.prototype, "birthday", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: '0376899866' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Validate)(class_validator_custom_1.IsPhone),
    __metadata("design:type", String)
], UserUpdateInfoBody.prototype, "phone", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ enum: [0, 1], example: variable_1.EGender.Female }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", typeof (_a = typeof variable_1.EGender !== "undefined" && variable_1.EGender) === "function" ? _a : Object)
], UserUpdateInfoBody.prototype, "gender", void 0);


/***/ }),
/* 188 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRootModule = void 0;
const common_1 = __webpack_require__(3);
const api_root_data_module_1 = __webpack_require__(189);
const api_root_organization_module_1 = __webpack_require__(193);
const api_root_user_module_1 = __webpack_require__(211);
let ApiRootModule = class ApiRootModule {
};
exports.ApiRootModule = ApiRootModule;
exports.ApiRootModule = ApiRootModule = __decorate([
    (0, common_1.Module)({
        imports: [api_root_organization_module_1.ApiRootOrganizationModule, api_root_user_module_1.ApiRootUserModule, api_root_data_module_1.ApiRootDataModule],
        controllers: [],
        providers: [],
    })
], ApiRootModule);


/***/ }),
/* 189 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRootDataModule = void 0;
const common_1 = __webpack_require__(3);
const api_root_data_controller_1 = __webpack_require__(190);
const api_root_data_service_1 = __webpack_require__(191);
let ApiRootDataModule = class ApiRootDataModule {
};
exports.ApiRootDataModule = ApiRootDataModule;
exports.ApiRootDataModule = ApiRootDataModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_root_data_controller_1.ApiRootDataController],
        providers: [api_root_data_service_1.ApiRootDataService],
    })
], ApiRootDataModule);


/***/ }),
/* 190 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRootDataController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const root_guard_1 = __webpack_require__(14);
const api_root_data_service_1 = __webpack_require__(191);
const root_migration_data_body_1 = __webpack_require__(192);
let ApiRootDataController = class ApiRootDataController {
    constructor(apiRootDataService) {
        this.apiRootDataService = apiRootDataService;
    }
    async migration(body) {
        return await this.apiRootDataService.startMigrationData(body);
    }
};
exports.ApiRootDataController = ApiRootDataController;
__decorate([
    (0, common_1.Post)('migration'),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof root_migration_data_body_1.RootMigrationDataBody !== "undefined" && root_migration_data_body_1.RootMigrationDataBody) === "function" ? _b : Object]),
    __metadata("design:returntype", Promise)
], ApiRootDataController.prototype, "migration", null);
exports.ApiRootDataController = ApiRootDataController = __decorate([
    (0, common_1.Controller)('root/data'),
    (0, swagger_1.ApiTags)('Root'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, root_guard_1.IsRoot)(),
    __metadata("design:paramtypes", [typeof (_a = typeof api_root_data_service_1.ApiRootDataService !== "undefined" && api_root_data_service_1.ApiRootDataService) === "function" ? _a : Object])
], ApiRootDataController);


/***/ }),
/* 191 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var ApiRootDataService_1;
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRootDataService = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(33);
const ticket_attribute_repository_1 = __webpack_require__(127);
let ApiRootDataService = ApiRootDataService_1 = class ApiRootDataService {
    constructor(dataSource, ticketAttributeRepository) {
        this.dataSource = dataSource;
        this.ticketAttributeRepository = ticketAttributeRepository;
        this.logger = new common_1.Logger(ApiRootDataService_1.name);
    }
    async startMigrationData(body) {
        if (body.key !== '8aobvoyupp8')
            return;
        return { data: true };
    }
};
exports.ApiRootDataService = ApiRootDataService;
exports.ApiRootDataService = ApiRootDataService = ApiRootDataService_1 = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object, typeof (_b = typeof ticket_attribute_repository_1.TicketAttributeRepository !== "undefined" && ticket_attribute_repository_1.TicketAttributeRepository) === "function" ? _b : Object])
], ApiRootDataService);


/***/ }),
/* 192 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RootMigrationDataBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class RootMigrationDataBody {
}
exports.RootMigrationDataBody = RootMigrationDataBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'admin' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.MinLength)(10),
    __metadata("design:type", String)
], RootMigrationDataBody.prototype, "key", void 0);


/***/ }),
/* 193 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRootOrganizationModule = void 0;
const common_1 = __webpack_require__(3);
const api_root_organization_controller_1 = __webpack_require__(194);
const api_root_organization_service_1 = __webpack_require__(203);
let ApiRootOrganizationModule = class ApiRootOrganizationModule {
};
exports.ApiRootOrganizationModule = ApiRootOrganizationModule;
exports.ApiRootOrganizationModule = ApiRootOrganizationModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_root_organization_controller_1.ApiRootOrganizationController],
        providers: [api_root_organization_service_1.ApiRootOrganizationService],
    })
], ApiRootOrganizationModule);


/***/ }),
/* 194 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRootOrganizationController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const dto_1 = __webpack_require__(195);
const root_guard_1 = __webpack_require__(14);
const api_root_organization_service_1 = __webpack_require__(203);
const request_1 = __webpack_require__(206);
let ApiRootOrganizationController = class ApiRootOrganizationController {
    constructor(apiRootOrganizationService) {
        this.apiRootOrganizationService = apiRootOrganizationService;
    }
    pagination(query) {
        return this.apiRootOrganizationService.pagination(query);
    }
    async createOne(body) {
        return await this.apiRootOrganizationService.createOne(body);
    }
    async updateOne({ id }, body) {
        return await this.apiRootOrganizationService.updateOne(id, body);
    }
    async clearOne({ id }, body) {
        return await this.apiRootOrganizationService.clearOne(id, body);
    }
};
exports.ApiRootOrganizationController = ApiRootOrganizationController;
__decorate([
    (0, common_1.Get)('organization/pagination'),
    __param(0, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof request_1.RootOrganizationPaginationQuery !== "undefined" && request_1.RootOrganizationPaginationQuery) === "function" ? _b : Object]),
    __metadata("design:returntype", void 0)
], ApiRootOrganizationController.prototype, "pagination", null);
__decorate([
    (0, common_1.Post)('organization/create'),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_c = typeof request_1.RootOrganizationCreateBody !== "undefined" && request_1.RootOrganizationCreateBody) === "function" ? _c : Object]),
    __metadata("design:returntype", Promise)
], ApiRootOrganizationController.prototype, "createOne", null);
__decorate([
    (0, common_1.Patch)('organization/update/:id'),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, common_1.Param)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _d : Object, typeof (_e = typeof request_1.RootOrganizationUpdateBody !== "undefined" && request_1.RootOrganizationUpdateBody) === "function" ? _e : Object]),
    __metadata("design:returntype", Promise)
], ApiRootOrganizationController.prototype, "updateOne", null);
__decorate([
    (0, common_1.Put)('organization/clear/:id'),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, common_1.Param)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _f : Object, typeof (_g = typeof request_1.RootOrganizationClearBody !== "undefined" && request_1.RootOrganizationClearBody) === "function" ? _g : Object]),
    __metadata("design:returntype", Promise)
], ApiRootOrganizationController.prototype, "clearOne", null);
exports.ApiRootOrganizationController = ApiRootOrganizationController = __decorate([
    (0, swagger_1.ApiTags)('Root'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, root_guard_1.IsRoot)(),
    (0, common_1.Controller)('root'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_root_organization_service_1.ApiRootOrganizationService !== "undefined" && api_root_organization_service_1.ApiRootOrganizationService) === "function" ? _a : Object])
], ApiRootOrganizationController);


/***/ }),
/* 195 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(79), exports);
__exportStar(__webpack_require__(196), exports);
__exportStar(__webpack_require__(197), exports);
__exportStar(__webpack_require__(198), exports);
__exportStar(__webpack_require__(199), exports);
__exportStar(__webpack_require__(200), exports);
__exportStar(__webpack_require__(201), exports);
__exportStar(__webpack_require__(202), exports);
__exportStar(__webpack_require__(185), exports);


/***/ }),
/* 196 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.transformConditionDate = exports.ConditionDate = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class ConditionDate {
}
exports.ConditionDate = ConditionDate;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value ? new Date(value) : undefined)),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
], ConditionDate.prototype, ">", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value ? new Date(value) : undefined)),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], ConditionDate.prototype, "GT", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value ? new Date(value) : undefined)),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], ConditionDate.prototype, ">=", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value ? new Date(value) : undefined)),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_d = typeof Date !== "undefined" && Date) === "function" ? _d : Object)
], ConditionDate.prototype, "GTE", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value ? new Date(value) : undefined)),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_e = typeof Date !== "undefined" && Date) === "function" ? _e : Object)
], ConditionDate.prototype, "<", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value ? new Date(value) : undefined)),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_f = typeof Date !== "undefined" && Date) === "function" ? _f : Object)
], ConditionDate.prototype, "LT", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value ? new Date(value) : undefined)),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_g = typeof Date !== "undefined" && Date) === "function" ? _g : Object)
], ConditionDate.prototype, "<=", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value ? new Date(value) : undefined)),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_h = typeof Date !== "undefined" && Date) === "function" ? _h : Object)
], ConditionDate.prototype, "LTE", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value ? new Date(value) : undefined)),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_j = typeof Date !== "undefined" && Date) === "function" ? _j : Object)
], ConditionDate.prototype, "==", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value ? new Date(value) : undefined)),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_k = typeof Date !== "undefined" && Date) === "function" ? _k : Object)
], ConditionDate.prototype, "EQUAL", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value ? new Date(value) : undefined)),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_l = typeof Date !== "undefined" && Date) === "function" ? _l : Object)
], ConditionDate.prototype, "!=", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value ? new Date(value) : undefined)),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_m = typeof Date !== "undefined" && Date) === "function" ? _m : Object)
], ConditionDate.prototype, "NOT", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ConditionDate.prototype, "IS_NULL", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ConditionDate.prototype, "NOT_NULL", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return undefined;
        return value.map((v) => {
            if (v == null)
                return null;
            return new Date(v);
        });
    }),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.IsDate)({ each: true }),
    (0, class_validator_1.ArrayMinSize)(1),
    __metadata("design:type", Array)
], ConditionDate.prototype, "IN", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return undefined;
        return value.map((v) => {
            if (v == null)
                return null;
            return new Date(v);
        });
    }),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.IsDate)({ each: true }),
    (0, class_validator_1.ArrayMinSize)(2),
    (0, class_validator_1.ArrayMaxSize)(2),
    __metadata("design:type", Array)
], ConditionDate.prototype, "BETWEEN", void 0);
const transformConditionDate = ({ value, key }) => {
    if (!value)
        return undefined;
    if (typeof value === 'string') {
        const validate = (0, class_validator_1.isDateString)(value);
        if (!validate)
            throw new Error(`${key} must be a DateString`);
        return value;
    }
    else if (typeof value === 'object') {
        const instance = (0, class_transformer_1.plainToInstance)(ConditionDate, value, {
            exposeUnsetFields: false,
            excludeExtraneousValues: false,
        });
        const validate = (0, class_validator_1.validateSync)(instance, {
            whitelist: true,
            forbidNonWhitelisted: true,
            skipMissingProperties: true,
        });
        if (validate.length) {
            const validateMessage = JSON.stringify(validate.map((i) => i.constraints));
            throw new Error(`${key} ConditionDate failed: ${validateMessage}`);
        }
        return instance;
    }
    else {
        throw new Error(`${key} must be a DateString`);
    }
};
exports.transformConditionDate = transformConditionDate;


/***/ }),
/* 197 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.transformConditionEnum = void 0;
exports.createConditionEnum = createConditionEnum;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const typescript_helper_1 = __webpack_require__(174);
const class_validator_custom_1 = __webpack_require__(173);
function createConditionEnum(enumObject) {
    var _a, _b, _c, _d;
    const EValue = (0, typescript_helper_1.valuesEnum)(enumObject);
    class ConditionEnum {
    }
    __decorate([
        (0, class_transformer_1.Expose)(),
        (0, class_validator_custom_1.IsEnumValue)(enumObject),
        __metadata("design:type", typeof (_a = typeof T !== "undefined" && T) === "function" ? _a : Object)
    ], ConditionEnum.prototype, "==", void 0);
    __decorate([
        (0, class_transformer_1.Expose)(),
        (0, class_validator_custom_1.IsEnumValue)(enumObject),
        __metadata("design:type", typeof (_b = typeof T !== "undefined" && T) === "function" ? _b : Object)
    ], ConditionEnum.prototype, "EQUAL", void 0);
    __decorate([
        (0, class_transformer_1.Expose)(),
        (0, class_validator_custom_1.IsEnumValue)(enumObject),
        __metadata("design:type", typeof (_c = typeof T !== "undefined" && T) === "function" ? _c : Object)
    ], ConditionEnum.prototype, "!=", void 0);
    __decorate([
        (0, class_transformer_1.Expose)(),
        (0, class_validator_custom_1.IsEnumValue)(enumObject),
        __metadata("design:type", typeof (_d = typeof T !== "undefined" && T) === "function" ? _d : Object)
    ], ConditionEnum.prototype, "NOT", void 0);
    __decorate([
        (0, class_transformer_1.Expose)(),
        (0, class_validator_1.IsBoolean)(),
        __metadata("design:type", Boolean)
    ], ConditionEnum.prototype, "IS_NULL", void 0);
    __decorate([
        (0, class_transformer_1.Expose)(),
        (0, class_validator_1.IsBoolean)(),
        __metadata("design:type", Boolean)
    ], ConditionEnum.prototype, "NOT_NULL", void 0);
    __decorate([
        (0, class_transformer_1.Expose)(),
        (0, class_validator_1.IsArray)(),
        (0, class_validator_1.ArrayMinSize)(1),
        (0, class_validator_custom_1.IsEnumValue)(enumObject, { each: true }),
        __metadata("design:type", Array)
    ], ConditionEnum.prototype, "IN", void 0);
    return ConditionEnum;
}
const transformConditionEnum = ({ value, key }, enumObject) => {
    if (!value)
        return;
    if (typeof value === 'number' || typeof value === 'string') {
        const enumObjectValueList = (0, typescript_helper_1.valuesEnum)(enumObject);
        for (let i = 0; i < enumObjectValueList.length; i++) {
            const item = enumObjectValueList[i];
            if (item != value)
                continue;
            if (typeof item === 'number') {
                return Number(value);
            }
            if (typeof item === 'string') {
                return String(value);
            }
        }
        throw new Error(`${key} must be a enum ${(0, typescript_helper_1.stringEnum)(enumObject)}`);
    }
    else if (typeof value === 'object') {
        const ConditionEnum = createConditionEnum(enumObject);
        const instance = (0, class_transformer_1.plainToInstance)(ConditionEnum, value, {
            exposeUnsetFields: false,
            excludeExtraneousValues: false,
        });
        const validate = (0, class_validator_1.validateSync)(instance, {
            whitelist: true,
            forbidNonWhitelisted: true,
            skipMissingProperties: true,
        });
        if (validate.length) {
            const validateMessage = JSON.stringify(validate.map((i) => i.constraints));
            throw new Error(`${key} ConditionEnum failed: ${validateMessage}`);
        }
        return instance;
    }
    else {
        throw new Error(`${key} must be a Enum or condition of Enum`);
    }
};
exports.transformConditionEnum = transformConditionEnum;


/***/ }),
/* 198 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.transformConditionMongoId = exports.ConditionMongoId = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class ConditionMongoId {
}
exports.ConditionMongoId = ConditionMongoId;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsMongoId)(),
    __metadata("design:type", String)
], ConditionMongoId.prototype, "==", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsMongoId)(),
    __metadata("design:type", String)
], ConditionMongoId.prototype, "EQUAL", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsMongoId)(),
    __metadata("design:type", String)
], ConditionMongoId.prototype, "!=", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsMongoId)(),
    __metadata("design:type", String)
], ConditionMongoId.prototype, "NOT", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsMongoId)(),
    __metadata("design:type", Boolean)
], ConditionMongoId.prototype, "IS_NULL", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsMongoId)(),
    __metadata("design:type", Boolean)
], ConditionMongoId.prototype, "NOT_NULL", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsMongoId)(),
    __metadata("design:type", String)
], ConditionMongoId.prototype, "LIKE", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.IsMongoId)({ each: true }),
    (0, class_validator_1.ArrayMinSize)(1),
    __metadata("design:type", Array)
], ConditionMongoId.prototype, "IN", void 0);
const transformConditionMongoId = ({ value, key }) => {
    if (!value)
        return undefined;
    if (typeof value === 'string') {
        const validate = (0, class_validator_1.isMongoId)(value);
        if (!validate)
            throw new Error(`${key} must be a mongoID`);
        return value;
    }
    else if (typeof value === 'object') {
        const instance = (0, class_transformer_1.plainToInstance)(ConditionMongoId, value, {
            exposeUnsetFields: false,
            excludeExtraneousValues: false,
        });
        const validate = (0, class_validator_1.validateSync)(instance, {
            whitelist: true,
            forbidNonWhitelisted: true,
            skipMissingProperties: true,
        });
        if (validate.length) {
            const validateMessage = JSON.stringify(validate.map((i) => i.constraints));
            throw new Error(`${key} ConditionMongoID failed: ${validateMessage}`);
        }
        return instance;
    }
    else {
        throw new Error(`${key} must be a mongoID`);
    }
};
exports.transformConditionMongoId = transformConditionMongoId;


/***/ }),
/* 199 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.transformConditionNumber = exports.ConditionNumber = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class ConditionNumber {
}
exports.ConditionNumber = ConditionNumber;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionNumber.prototype, ">", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionNumber.prototype, "GT", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionNumber.prototype, ">=", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionNumber.prototype, "GTE", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionNumber.prototype, "<", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionNumber.prototype, "LT", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionNumber.prototype, "<=", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionNumber.prototype, "LTE", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionNumber.prototype, "==", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionNumber.prototype, "EQUAL", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionNumber.prototype, "!=", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionNumber.prototype, "NOT", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ConditionNumber.prototype, "IS_NULL", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ConditionNumber.prototype, "NOT_NULL", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ArrayMinSize)(1),
    (0, class_validator_1.IsNumber)({}, { each: true }),
    __metadata("design:type", Array)
], ConditionNumber.prototype, "IN", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.IsNumber)({}, { each: true }),
    (0, class_validator_1.ArrayMinSize)(2),
    (0, class_validator_1.ArrayMaxSize)(2),
    __metadata("design:type", Array)
], ConditionNumber.prototype, "BETWEEN", void 0);
const transformConditionNumber = ({ value, key }) => {
    if (!value) {
        return;
    }
    if (typeof value === 'number') {
        return value;
    }
    else if (typeof value === 'object') {
        const instance = (0, class_transformer_1.plainToInstance)(ConditionNumber, value, {
            exposeUnsetFields: false,
            excludeExtraneousValues: false,
        });
        const validate = (0, class_validator_1.validateSync)(instance, {
            whitelist: true,
            forbidNonWhitelisted: true,
            skipMissingProperties: true,
        });
        if (validate.length) {
            const validateMessage = JSON.stringify(validate.map((i) => i.constraints));
            throw new Error(`${key} ConditionNumber failed: ${validateMessage}`);
        }
        return instance;
    }
    else {
        throw new Error(`${key} must be a Number or condition of Number`);
    }
};
exports.transformConditionNumber = transformConditionNumber;


/***/ }),
/* 200 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.transformConditionString = exports.ConditionString = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class ConditionString {
}
exports.ConditionString = ConditionString;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ConditionString.prototype, "==", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ConditionString.prototype, "EQUAL", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ConditionString.prototype, "!=", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ConditionString.prototype, "NOT", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", Boolean)
], ConditionString.prototype, "IS_NULL", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", Boolean)
], ConditionString.prototype, "NOT_NULL", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ConditionString.prototype, "LIKE", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.IsString)({ each: true }),
    (0, class_validator_1.ArrayMinSize)(1),
    __metadata("design:type", Array)
], ConditionString.prototype, "IN", void 0);
const transformConditionString = ({ value, key }) => {
    if (!value) {
        return;
    }
    if (typeof value === 'string') {
        return value;
    }
    else if (typeof value === 'object') {
        const instance = (0, class_transformer_1.plainToInstance)(ConditionString, value, {
            exposeUnsetFields: false,
            excludeExtraneousValues: false,
        });
        const validate = (0, class_validator_1.validateSync)(instance, {
            whitelist: true,
            forbidNonWhitelisted: true,
            skipMissingProperties: true,
        });
        if (validate.length) {
            const validateMessage = JSON.stringify(validate.map((i) => i.constraints));
            throw new Error(`${key} ConditionString failed: ${validateMessage}`);
        }
        return instance;
    }
    else {
        throw new Error(`${key} must be a String`);
    }
};
exports.transformConditionString = transformConditionString;


/***/ }),
/* 201 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.transformConditionTimestamp = exports.ConditionTimestamp = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class ConditionTimestamp {
}
exports.ConditionTimestamp = ConditionTimestamp;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return undefined;
        return new Date(value).getTime();
    }),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionTimestamp.prototype, ">", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return undefined;
        return new Date(value).getTime();
    }),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionTimestamp.prototype, "GT", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return undefined;
        return new Date(value).getTime();
    }),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionTimestamp.prototype, ">=", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return undefined;
        return new Date(value).getTime();
    }),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionTimestamp.prototype, "GTE", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return undefined;
        return new Date(value).getTime();
    }),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionTimestamp.prototype, "<", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return undefined;
        return new Date(value).getTime();
    }),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionTimestamp.prototype, "LT", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return undefined;
        return new Date(value).getTime();
    }),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionTimestamp.prototype, "<=", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return undefined;
        return new Date(value).getTime();
    }),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionTimestamp.prototype, "LTE", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return undefined;
        return new Date(value).getTime();
    }),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionTimestamp.prototype, "==", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return undefined;
        return new Date(value).getTime();
    }),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionTimestamp.prototype, "EQUAL", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return undefined;
        return new Date(value).getTime();
    }),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionTimestamp.prototype, "!=", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return undefined;
        return new Date(value).getTime();
    }),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ConditionTimestamp.prototype, "NOT", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ConditionTimestamp.prototype, "IS_NULL", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ConditionTimestamp.prototype, "NOT_NULL", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return undefined;
        return value.map((v) => new Date(v).getTime());
    }),
    (0, class_validator_1.IsNumber)({}, { each: true }),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ArrayMinSize)(1),
    __metadata("design:type", Array)
], ConditionTimestamp.prototype, "IN", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return undefined;
        return value.map((v) => new Date(v).getTime());
    }),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ArrayMinSize)(2),
    (0, class_validator_1.ArrayMaxSize)(2),
    (0, class_validator_1.IsNumber)({}, { each: true }),
    __metadata("design:type", Array)
], ConditionTimestamp.prototype, "BETWEEN", void 0);
const transformConditionTimestamp = ({ value, key }) => {
    if (!value) {
        return;
    }
    if (typeof value === 'number') {
        return value;
    }
    else if (typeof value === 'object') {
        const instance = (0, class_transformer_1.plainToInstance)(ConditionTimestamp, value, {
            exposeUnsetFields: false,
            excludeExtraneousValues: false,
        });
        const validate = (0, class_validator_1.validateSync)(instance, {
            whitelist: true,
            forbidNonWhitelisted: true,
            skipMissingProperties: true,
        });
        if (validate.length) {
            const validateMessage = JSON.stringify(validate.map((i) => i.constraints));
            throw new Error(`${key} ConditionTimestamp failed: ${validateMessage}`);
        }
        return instance;
    }
    else {
        throw new Error(`${key} must be a Number or condition of Number`);
    }
};
exports.transformConditionTimestamp = transformConditionTimestamp;


/***/ }),
/* 202 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IdMongoParam = exports.IdParam = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
class IdParam {
}
exports.IdParam = IdParam;
__decorate([
    (0, swagger_1.ApiProperty)({ name: 'id', example: 45 }),
    (0, class_transformer_1.Expose)({ name: 'id' }),
    (0, class_transformer_1.Type)(() => Number),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], IdParam.prototype, "id", void 0);
class IdMongoParam {
}
exports.IdMongoParam = IdMongoParam;
__decorate([
    (0, swagger_1.ApiProperty)({ name: 'id', example: '63fdde9517a7317f0e8f959a' }),
    (0, class_transformer_1.Expose)({ name: 'id' }),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsMongoId)(),
    __metadata("design:type", String)
], IdMongoParam.prototype, "id", void 0);


/***/ }),
/* 203 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var ApiRootOrganizationService_1;
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRootOrganizationService = void 0;
const common_1 = __webpack_require__(3);
const typeorm_1 = __webpack_require__(35);
const typeorm_2 = __webpack_require__(33);
const cache_data_service_1 = __webpack_require__(30);
const exception_filter_1 = __webpack_require__(9);
const entities_1 = __webpack_require__(36);
const user_role_entity_1 = __webpack_require__(68);
const organization_repository_1 = __webpack_require__(34);
const socket_emit_service_1 = __webpack_require__(204);
let ApiRootOrganizationService = ApiRootOrganizationService_1 = class ApiRootOrganizationService {
    constructor(socketEmitService, cacheDataService, organizationRepository, manager) {
        this.socketEmitService = socketEmitService;
        this.cacheDataService = cacheDataService;
        this.organizationRepository = organizationRepository;
        this.manager = manager;
        this.logger = new common_1.Logger(ApiRootOrganizationService_1.name);
    }
    async pagination(query) {
        const { page, limit, filter, sort, relation } = query;
        const { data, total } = await this.organizationRepository.pagination({
            page,
            limit,
            relation,
            condition: {},
            sort,
        });
        return {
            data,
            meta: { page, limit, total },
        };
    }
    async createOne(body) {
        const organization = await this.organizationRepository.insertOneFullFieldAndReturnEntity(Object.assign(Object.assign({}, body), { emailVerify: 0, logoImageId: 0 }));
        this.cacheDataService.updateOrganizationInfo(organization);
        return { data: { organization } };
    }
    async updateOne(oid, body) {
        const organizationRoot = await this.organizationRepository.findOneById(oid);
        const [organization] = await this.organizationRepository.updateAndReturnEntity({ id: oid }, Object.assign(Object.assign({}, body), { emailVerify: organizationRoot.email === body.email ? organizationRoot.emailVerify : 0 }));
        if (!organization) {
            throw new exception_filter_1.BusinessException('error.Database.UpdateFailed');
        }
        this.cacheDataService.updateOrganizationInfo(organization);
        return { data: { organization } };
    }
    async clearOne(oid, body) {
        const { tableNameList } = body;
        if (tableNameList.includes(entities_1.Appointment.name)) {
            await this.manager.delete(entities_1.Appointment, { oid });
        }
        if (tableNameList.includes(entities_1.Batch.name)) {
            await this.manager.delete(entities_1.Batch, { oid });
        }
        if (tableNameList.includes(entities_1.BatchMovement.name)) {
            await this.manager.delete(entities_1.BatchMovement, { oid });
        }
        if (tableNameList.includes(entities_1.Customer.name)) {
            await this.manager.delete(entities_1.Customer, { oid });
        }
        else {
            await this.manager.update(entities_1.Customer, { oid }, { debt: 0 });
        }
        if (tableNameList.includes(entities_1.CustomerPayment.name)) {
            await this.manager.delete(entities_1.CustomerPayment, { oid });
        }
        if (tableNameList.includes(entities_1.CustomerSource.name)) {
            await this.manager.delete(entities_1.CustomerSource, { oid });
        }
        if (tableNameList.includes(entities_1.Distributor.name)) {
            await this.manager.delete(entities_1.Distributor, { oid });
        }
        else {
            await this.manager.update(entities_1.Distributor, { oid }, { debt: 0 });
        }
        if (tableNameList.includes(entities_1.DistributorPayment.name)) {
            await this.manager.delete(entities_1.DistributorPayment, { oid });
        }
        if (tableNameList.includes(entities_1.Image.name)) {
            await this.manager.delete(entities_1.Image, { oid });
        }
        else {
            await this.manager.update(entities_1.Image, { oid }, { waitDelete: 1 });
        }
        if (tableNameList.includes(entities_1.Laboratory.name)) {
            await this.manager.delete(entities_1.Laboratory, { oid });
        }
        if (tableNameList.includes(entities_1.LaboratoryGroup.name)) {
            await this.manager.delete(entities_1.LaboratoryGroup, { oid });
        }
        if (tableNameList.includes(entities_1.LaboratoryKit.name)) {
            await this.manager.delete(entities_1.LaboratoryKit, { oid });
        }
        if (tableNameList.includes(entities_1.PrescriptionSample.name)) {
            await this.manager.delete(entities_1.PrescriptionSample, { oid });
        }
        if (tableNameList.includes(entities_1.PrintHtml.name)) {
            await this.manager.delete(entities_1.PrintHtml, { oid });
        }
        if (tableNameList.includes(entities_1.Procedure.name)) {
            await this.manager.delete(entities_1.Procedure, { oid });
        }
        if (tableNameList.includes(entities_1.ProcedureGroup.name)) {
            await this.manager.delete(entities_1.ProcedureGroup, { oid });
        }
        if (tableNameList.includes(entities_1.Product.name)) {
            await this.manager.delete(entities_1.Product, { oid });
        }
        else {
            await this.manager.update(entities_1.Product, { oid }, { quantity: 0, costAmount: 0 });
        }
        if (tableNameList.includes(entities_1.ProductGroup.name)) {
            await this.manager.delete(entities_1.ProductGroup, { oid });
        }
        if (tableNameList.includes(entities_1.ProductMovement.name)) {
            await this.manager.delete(entities_1.ProductMovement, { oid });
        }
        if (tableNameList.includes(entities_1.Radiology.name)) {
            await this.manager.delete(entities_1.Radiology, { oid });
        }
        if (tableNameList.includes(entities_1.RadiologyGroup.name)) {
            await this.manager.delete(entities_1.RadiologyGroup, { oid });
        }
        if (tableNameList.includes(entities_1.Receipt.name)) {
            await this.manager.delete(entities_1.Receipt, { oid });
        }
        if (tableNameList.includes(entities_1.ReceiptItem.name)) {
            await this.manager.delete(entities_1.ReceiptItem, { oid });
        }
        if (tableNameList.includes(entities_1.Role.name)) {
            await this.manager.delete(entities_1.Role, { oid });
        }
        if (tableNameList.includes(entities_1.Setting.name)) {
            await this.manager.delete(entities_1.Setting, { oid });
        }
        if (tableNameList.includes(entities_1.TicketAttribute.name)) {
            await this.manager.delete(entities_1.TicketAttribute, { oid });
        }
        if (tableNameList.includes(entities_1.TicketExpense.name)) {
            await this.manager.delete(entities_1.TicketExpense, { oid });
        }
        if (tableNameList.includes(entities_1.TicketLaboratory.name)) {
            await this.manager.delete(entities_1.TicketLaboratory, { oid });
        }
        if (tableNameList.includes(entities_1.TicketProcedure.name)) {
            await this.manager.delete(entities_1.TicketProcedure, { oid });
        }
        if (tableNameList.includes(entities_1.TicketProduct.name)) {
            await this.manager.delete(entities_1.TicketProduct, { oid });
        }
        if (tableNameList.includes(entities_1.TicketRadiology.name)) {
            await this.manager.delete(entities_1.TicketRadiology, { oid });
        }
        if (tableNameList.includes(entities_1.TicketSurcharge.name)) {
            await this.manager.delete(entities_1.TicketSurcharge, { oid });
        }
        if (tableNameList.includes(entities_1.TicketUser.name)) {
            await this.manager.delete(entities_1.TicketUser, { oid });
        }
        if (tableNameList.includes(entities_1.Ticket.name)) {
            await this.manager.delete(entities_1.Ticket, { oid });
        }
        if (tableNameList.includes(entities_1.User.name)) {
            await this.manager.delete(entities_1.User, { oid });
        }
        if (tableNameList.includes(user_role_entity_1.default.name)) {
            await this.manager.delete(user_role_entity_1.default, { oid });
        }
        if (tableNameList.includes(entities_1.Warehouse.name)) {
            await this.manager.delete(entities_1.Warehouse, { oid });
        }
        if (tableNameList.includes(entities_1.Organization.name)) {
            await this.manager.delete(entities_1.Organization, { id: oid });
        }
        else {
            const organizationRoot = await this.organizationRepository.findOneById(oid);
            await this.organizationRepository.updateAndReturnEntity({ id: oid }, { dataVersion: organizationRoot.dataVersion + 1 });
        }
        this.cacheDataService.clearOrganization(oid);
        return { data: { oid } };
    }
};
exports.ApiRootOrganizationService = ApiRootOrganizationService;
exports.ApiRootOrganizationService = ApiRootOrganizationService = ApiRootOrganizationService_1 = __decorate([
    (0, common_1.Injectable)(),
    __param(3, (0, typeorm_1.InjectEntityManager)()),
    __metadata("design:paramtypes", [typeof (_a = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _a : Object, typeof (_b = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _b : Object, typeof (_c = typeof organization_repository_1.OrganizationRepository !== "undefined" && organization_repository_1.OrganizationRepository) === "function" ? _c : Object, typeof (_d = typeof typeorm_2.EntityManager !== "undefined" && typeorm_2.EntityManager) === "function" ? _d : Object])
], ApiRootOrganizationService);


/***/ }),
/* 204 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SocketEmitService = void 0;
const common_1 = __webpack_require__(3);
const socket_variable_1 = __webpack_require__(205);
let SocketEmitService = class SocketEmitService {
    constructor() {
        this.connections = null;
        this.io = null;
    }
    demo(oid) {
        if (!this.io)
            return;
        const dataDemo = new Date().toISOString();
        this.io.in(oid.toString()).emit(socket_variable_1.SOCKET_EVENT.SERVER_EMIT_DEMO, { dataDemo });
    }
    organizationUpdate(oid, data) {
        if (!this.io)
            return;
        this.io.in(oid.toString()).emit(socket_variable_1.SOCKET_EVENT.ORGANIZATION_UPDATE);
    }
    settingReload(oid) {
        if (!this.io)
            return;
        this.io.in(oid.toString()).emit(socket_variable_1.SOCKET_EVENT.SETTING_RELOAD);
    }
    customerUpsert(oid, data) {
        if (!this.io)
            return;
        this.io.in(oid.toString()).emit(socket_variable_1.SOCKET_EVENT.CUSTOMER_UPSERT, data);
    }
    distributorUpsert(oid, data) {
        if (!this.io)
            return;
        this.io.in(oid.toString()).emit(socket_variable_1.SOCKET_EVENT.DISTRIBUTOR_UPSERT, data);
    }
    productUpsert(oid, data) {
        if (!this.io)
            return;
        this.io.in(oid.toString()).emit(socket_variable_1.SOCKET_EVENT.PRODUCT_UPSERT, data);
    }
    productListUpdate(oid, data) {
        if (!this.io || !data.productList.length)
            return;
        this.io.in(oid.toString()).emit(socket_variable_1.SOCKET_EVENT.PRODUCT_LIST_UPDATE, data);
    }
    batchUpsert(oid, data) {
        if (!this.io)
            return;
        this.io.in(oid.toString()).emit(socket_variable_1.SOCKET_EVENT.BATCH_UPSERT, data);
    }
    batchListUpdate(oid, data) {
        if (!this.io || !data.batchList.length)
            return;
        this.io.in(oid.toString()).emit(socket_variable_1.SOCKET_EVENT.BATCH_LIST_UPDATE, data);
    }
    ticketClinicCreate(oid, data) {
        if (!this.io)
            return;
        this.io.in(oid.toString()).emit(socket_variable_1.SOCKET_EVENT.TICKET_CLINIC_CREATE, data);
    }
    ticketClinicDestroy(oid, data) {
        if (!this.io)
            return;
        this.io.in(oid.toString()).emit(socket_variable_1.SOCKET_EVENT.TICKET_CLINIC_DESTROY, data);
    }
    ticketClinicUpdate(oid, data) {
        if (!this.io)
            return;
        this.io.in(oid.toString()).emit(socket_variable_1.SOCKET_EVENT.TICKET_CLINIC_UPDATE, data);
    }
    ticketClinicUpdateTicketAttributeList(oid, data) {
        if (!this.io)
            return;
        this.io
            .in(oid.toString())
            .emit(socket_variable_1.SOCKET_EVENT.TICKET_CLINIC_UPDATE_TICKET_ATTRIBUTE_LIST, data);
    }
    ticketClinicUpdateTicketProcedureList(oid, data) {
        if (!this.io)
            return;
        this.io.in(oid.toString()).emit(socket_variable_1.SOCKET_EVENT.TICKET_CLINIC_UPDATE_TICKET_PROCEDURE_LIST, data);
    }
    ticketClinicUpdateTicketProductConsumableList(oid, data) {
        if (!this.io)
            return;
        this.io
            .in(oid.toString())
            .emit(socket_variable_1.SOCKET_EVENT.TICKET_CLINIC_UPDATE_TICKET_PRODUCT_CONSUMABLE_LIST, data);
    }
    ticketClinicUpdateTicketProductPrescriptionList(oid, data) {
        if (!this.io)
            return;
        this.io
            .in(oid.toString())
            .emit(socket_variable_1.SOCKET_EVENT.TICKET_CLINIC_UPDATE_TICKET_PRODUCT_PRESCRIPTION_LIST, data);
    }
    ticketClinicUpdateTicketLaboratoryList(oid, data) {
        if (!this.io)
            return;
        this.io
            .in(oid.toString())
            .emit(socket_variable_1.SOCKET_EVENT.TICKET_CLINIC_UPDATE_TICKET_LABORATORY_LIST, data);
    }
    ticketClinicUpdateTicketLaboratoryResult(oid, data) {
        if (!this.io)
            return;
        this.io
            .in(oid.toString())
            .emit(socket_variable_1.SOCKET_EVENT.TICKET_CLINIC_UPDATE_TICKET_LABORATORY_RESULT, data);
    }
    ticketClinicUpdateTicketRadiologyList(oid, data) {
        if (!this.io)
            return;
        this.io
            .in(oid.toString())
            .emit(socket_variable_1.SOCKET_EVENT.TICKET_CLINIC_UPDATE_TICKET_RADIOLOGY_LIST, data);
    }
    ticketClinicUpdateTicketRadiologyResult(oid, data) {
        if (!this.io)
            return;
        this.io
            .in(oid.toString())
            .emit(socket_variable_1.SOCKET_EVENT.TICKET_CLINIC_UPDATE_TICKET_RADIOLOGY_RESULT, data);
    }
    ticketClinicUpdateTicketUserList(oid, data) {
        if (!this.io)
            return;
        this.io.in(oid.toString()).emit(socket_variable_1.SOCKET_EVENT.TICKET_CLINIC_UPDATE_TICKET_USER_LIST, data);
    }
};
exports.SocketEmitService = SocketEmitService;
exports.SocketEmitService = SocketEmitService = __decorate([
    (0, common_1.Injectable)()
], SocketEmitService);


/***/ }),
/* 205 */
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SOCKET_EVENT = void 0;
var SOCKET_EVENT;
(function (SOCKET_EVENT) {
    SOCKET_EVENT["SERVER_EMIT_DEMO"] = "SERVER_EMIT_DEMO";
    SOCKET_EVENT["SERVER_EMIT_TICKET_CREATE"] = "SERVER_EMIT_TICKET_CREATE";
    SOCKET_EVENT["CLIENT_EMIT_TICKET_CREATE"] = "CLIENT_EMIT_TICKET_CREATE";
    SOCKET_EVENT["ORGANIZATION_UPDATE"] = "ORGANIZATION_UPDATE";
    SOCKET_EVENT["SETTING_RELOAD"] = "SETTING_RELOAD";
    SOCKET_EVENT["CUSTOMER_UPSERT"] = "CUSTOMER_UPSERT";
    SOCKET_EVENT["DISTRIBUTOR_UPSERT"] = "DISTRIBUTOR_UPSERT";
    SOCKET_EVENT["PRODUCT_UPSERT"] = "PRODUCT_UPSERT";
    SOCKET_EVENT["PRODUCT_LIST_UPDATE"] = "PRODUCT_LIST_UPDATE";
    SOCKET_EVENT["BATCH_UPSERT"] = "BATCH_UPSERT";
    SOCKET_EVENT["BATCH_LIST_UPDATE"] = "BATCH_LIST_UPDATE";
    SOCKET_EVENT["TICKET_CLINIC_CREATE"] = "TICKET_CLINIC_CREATE";
    SOCKET_EVENT["TICKET_CLINIC_UPDATE"] = "TICKET_CLINIC_UPDATE";
    SOCKET_EVENT["TICKET_CLINIC_DESTROY"] = "TICKET_CLINIC_DESTROY";
    SOCKET_EVENT["TICKET_CLINIC_UPDATE_TICKET_ATTRIBUTE_LIST"] = "TICKET_CLINIC_UPDATE_TICKET_ATTRIBUTE_LIST";
    SOCKET_EVENT["TICKET_CLINIC_UPDATE_TICKET_PROCEDURE_LIST"] = "TICKET_CLINIC_UPDATE_TICKET_PROCEDURE_LIST";
    SOCKET_EVENT["TICKET_CLINIC_UPDATE_TICKET_PRODUCT_CONSUMABLE_LIST"] = "TICKET_CLINIC_UPDATE_TICKET_PRODUCT_CONSUMABLE_LIST";
    SOCKET_EVENT["TICKET_CLINIC_UPDATE_TICKET_PRODUCT_PRESCRIPTION_LIST"] = "TICKET_CLINIC_UPDATE_TICKET_PRODUCT_PRESCRIPTION_LIST";
    SOCKET_EVENT["TICKET_CLINIC_UPDATE_TICKET_LABORATORY_LIST"] = "TICKET_CLINIC_UPDATE_TICKET_LABORATORY_LIST";
    SOCKET_EVENT["TICKET_CLINIC_UPDATE_TICKET_LABORATORY_RESULT"] = "TICKET_CLINIC_UPDATE_TICKET_LABORATORY_RESULT";
    SOCKET_EVENT["TICKET_CLINIC_UPDATE_TICKET_RADIOLOGY_LIST"] = "TICKET_CLINIC_UPDATE_TICKET_RADIOLOGY_LIST";
    SOCKET_EVENT["TICKET_CLINIC_UPDATE_TICKET_RADIOLOGY_RESULT"] = "TICKET_CLINIC_UPDATE_TICKET_RADIOLOGY_RESULT";
    SOCKET_EVENT["TICKET_CLINIC_UPDATE_TICKET_USER_LIST"] = "TICKET_CLINIC_UPDATE_TICKET_USER_LIST";
})(SOCKET_EVENT || (exports.SOCKET_EVENT = SOCKET_EVENT = {}));


/***/ }),
/* 206 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(207), exports);
__exportStar(__webpack_require__(208), exports);
__exportStar(__webpack_require__(209), exports);
__exportStar(__webpack_require__(210), exports);


/***/ }),
/* 207 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RootOrganizationClearBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class RootOrganizationClearBody {
}
exports.RootOrganizationClearBody = RootOrganizationClearBody;
__decorate([
    (0, swagger_1.ApiProperty)(),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsArray)(),
    __metadata("design:type", Array)
], RootOrganizationClearBody.prototype, "tableNameList", void 0);


/***/ }),
/* 208 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RootOrganizationGetOneQuery = exports.RootOrganizationGetManyQuery = exports.RootOrganizationPaginationQuery = exports.RootOrganizationGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const dto_1 = __webpack_require__(195);
const root_organization_options_request_1 = __webpack_require__(209);
class RootOrganizationGetQuery {
}
exports.RootOrganizationGetQuery = RootOrganizationGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            userList: true,
            logoImage: true,
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(root_organization_options_request_1.RootOrganizationRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof root_organization_options_request_1.RootOrganizationRelationQuery !== "undefined" && root_organization_options_request_1.RootOrganizationRelationQuery) === "function" ? _a : Object)
], RootOrganizationGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({}),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(root_organization_options_request_1.RootOrganizationFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof root_organization_options_request_1.RootOrganizationFilterQuery !== "undefined" && root_organization_options_request_1.RootOrganizationFilterQuery) === "function" ? _b : Object)
], RootOrganizationGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({}),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(root_organization_options_request_1.RootOrganizationSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof root_organization_options_request_1.RootOrganizationSortQuery !== "undefined" && root_organization_options_request_1.RootOrganizationSortQuery) === "function" ? _c : Object)
], RootOrganizationGetQuery.prototype, "sort", void 0);
class RootOrganizationPaginationQuery extends (0, swagger_1.IntersectionType)(RootOrganizationGetQuery, dto_1.PaginationQuery) {
}
exports.RootOrganizationPaginationQuery = RootOrganizationPaginationQuery;
class RootOrganizationGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(RootOrganizationGetQuery, ['filter', 'relation', 'sort']), dto_1.LimitQuery) {
}
exports.RootOrganizationGetManyQuery = RootOrganizationGetManyQuery;
class RootOrganizationGetOneQuery extends (0, swagger_1.PickType)(RootOrganizationGetQuery, ['relation']) {
}
exports.RootOrganizationGetOneQuery = RootOrganizationGetOneQuery;


/***/ }),
/* 209 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RootOrganizationSortQuery = exports.RootOrganizationFilterQuery = exports.RootOrganizationRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const dto_1 = __webpack_require__(195);
class RootOrganizationRelationQuery {
}
exports.RootOrganizationRelationQuery = RootOrganizationRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], RootOrganizationRelationQuery.prototype, "userList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], RootOrganizationRelationQuery.prototype, "logoImage", void 0);
class RootOrganizationFilterQuery {
}
exports.RootOrganizationFilterQuery = RootOrganizationFilterQuery;
class RootOrganizationSortQuery extends dto_1.SortQuery {
}
exports.RootOrganizationSortQuery = RootOrganizationSortQuery;


/***/ }),
/* 210 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RootOrganizationUpdateBody = exports.RootOrganizationCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
class RootOrganizationCreateBody {
}
exports.RootOrganizationCreateBody = RootOrganizationCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: '0376899866' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.Validate)(class_validator_custom_1.IsPhone),
    __metadata("design:type", String)
], RootOrganizationCreateBody.prototype, "phone", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ name: 'email', example: 'vm@gmail.com' }),
    (0, class_transformer_1.Expose)({ name: 'email' }),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (!value)
            return value;
        const [mail, domain] = value.split('@');
        const mailFormat = mail.replace(/\./g, '').replace(/\+.*?$/g, '');
        return `${mailFormat}@${domain}`;
    }),
    (0, class_validator_1.Validate)(class_validator_custom_1.IsGmail),
    __metadata("design:type", String)
], RootOrganizationCreateBody.prototype, "email", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 0 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], RootOrganizationCreateBody.prototype, "emailVerify", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Phòng khám đa khoa Medical' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RootOrganizationCreateBody.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], RootOrganizationCreateBody.prototype, "level", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RootOrganizationCreateBody.prototype, "dataVersion", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: JSON.stringify([1, 2, 3, 4]) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            const err = [];
            const result = JSON.parse(value).map((i) => {
                if (typeof i !== 'number')
                    err.push(`${i} is not number`);
                return i;
            });
            if (err.length)
                return err;
            else
                return JSON.stringify(result);
        }
        catch (error) {
            return [error.message];
        }
    }),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)({ message: `Validate permissionIds failed: Example: ${JSON.stringify([1, 2, 3, 4])}` }),
    __metadata("design:type", String)
], RootOrganizationCreateBody.prototype, "permissionIds", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Tỉnh Lâm Đồng' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RootOrganizationCreateBody.prototype, "addressProvince", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Huyện Cát Tiên' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RootOrganizationCreateBody.prototype, "addressDistrict", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Xã Tiên Hoàng' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RootOrganizationCreateBody.prototype, "addressWard", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Thôn Trần Lệ Mai' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RootOrganizationCreateBody.prototype, "addressStreet", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], RootOrganizationCreateBody.prototype, "isActive", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Đã thanh toán ngày' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RootOrganizationCreateBody.prototype, "note", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1679995369195 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], RootOrganizationCreateBody.prototype, "expiryDate", void 0);
class RootOrganizationUpdateBody extends RootOrganizationCreateBody {
}
exports.RootOrganizationUpdateBody = RootOrganizationUpdateBody;


/***/ }),
/* 211 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRootUserModule = void 0;
const common_1 = __webpack_require__(3);
const api_root_user_controller_1 = __webpack_require__(212);
const api_root_user_service_1 = __webpack_require__(213);
let ApiRootUserModule = class ApiRootUserModule {
};
exports.ApiRootUserModule = ApiRootUserModule;
exports.ApiRootUserModule = ApiRootUserModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_root_user_controller_1.ApiRootUserController],
        providers: [api_root_user_service_1.ApiRootUserService],
    })
], ApiRootUserModule);


/***/ }),
/* 212 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRootUserController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const dto_1 = __webpack_require__(195);
const root_guard_1 = __webpack_require__(14);
const user_entity_1 = __webpack_require__(69);
const api_root_user_service_1 = __webpack_require__(213);
const device_logout_query_1 = __webpack_require__(215);
const root_user_get_query_1 = __webpack_require__(216);
const root_user_upsert_body_1 = __webpack_require__(218);
let ApiRootUserController = class ApiRootUserController {
    constructor(apiRootUserService) {
        this.apiRootUserService = apiRootUserService;
    }
    pagination(query) {
        return this.apiRootUserService.pagination(query);
    }
    async create(body) {
        return await this.apiRootUserService.create(body);
    }
    async update({ id }, body) {
        return await this.apiRootUserService.update(id, body);
    }
    async userDeleteOne({ id }) {
        return await this.apiRootUserService.deleteOne(id);
    }
    deviceLogout({ id }, body) {
        return this.apiRootUserService.deviceLogout({
            oid: body.oid,
            userId: +id,
            refreshExp: body.refreshExp,
        });
    }
    logoutAll() {
        return this.apiRootUserService.logoutAll();
    }
};
exports.ApiRootUserController = ApiRootUserController;
__decorate([
    (0, common_1.Get)('pagination'),
    __param(0, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof root_user_get_query_1.RootUserPaginationQuery !== "undefined" && root_user_get_query_1.RootUserPaginationQuery) === "function" ? _b : Object]),
    __metadata("design:returntype", void 0)
], ApiRootUserController.prototype, "pagination", null);
__decorate([
    (0, common_1.Post)('create'),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_c = typeof root_user_upsert_body_1.RootUserCreateBody !== "undefined" && root_user_upsert_body_1.RootUserCreateBody) === "function" ? _c : Object]),
    __metadata("design:returntype", Promise)
], ApiRootUserController.prototype, "create", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, common_1.Param)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _d : Object, typeof (_e = typeof root_user_upsert_body_1.RootUserUpdateBody !== "undefined" && root_user_upsert_body_1.RootUserUpdateBody) === "function" ? _e : Object]),
    __metadata("design:returntype", Promise)
], ApiRootUserController.prototype, "update", null);
__decorate([
    (0, common_1.Delete)('delete/:id'),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _f : Object]),
    __metadata("design:returntype", Promise)
], ApiRootUserController.prototype, "userDeleteOne", null);
__decorate([
    (0, common_1.Post)('device-logout/:id'),
    __param(0, (0, common_1.Param)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_g = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _g : Object, typeof (_h = typeof device_logout_query_1.DeviceLogoutBody !== "undefined" && device_logout_query_1.DeviceLogoutBody) === "function" ? _h : Object]),
    __metadata("design:returntype", void 0)
], ApiRootUserController.prototype, "deviceLogout", null);
__decorate([
    (0, common_1.Post)('logout-all'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], ApiRootUserController.prototype, "logoutAll", null);
exports.ApiRootUserController = ApiRootUserController = __decorate([
    (0, common_1.Controller)('root/user'),
    (0, swagger_1.ApiTags)('Root'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, root_guard_1.IsRoot)(),
    (0, common_1.SerializeOptions)({ groups: [user_entity_1.UserGroup.ROOT] }),
    __metadata("design:paramtypes", [typeof (_a = typeof api_root_user_service_1.ApiRootUserService !== "undefined" && api_root_user_service_1.ApiRootUserService) === "function" ? _a : Object])
], ApiRootUserController);


/***/ }),
/* 213 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var ApiRootUserService_1;
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRootUserService = void 0;
const common_1 = __webpack_require__(3);
const bcrypt = __webpack_require__(169);
const cache_data_service_1 = __webpack_require__(30);
const cache_token_service_1 = __webpack_require__(86);
const exception_filter_1 = __webpack_require__(9);
const string_helper_1 = __webpack_require__(98);
const device_1 = __webpack_require__(214);
const user_repository_1 = __webpack_require__(84);
const socket_emit_service_1 = __webpack_require__(204);
let ApiRootUserService = ApiRootUserService_1 = class ApiRootUserService {
    constructor(socketEmitService, cacheTokenService, cacheDataService, userRepository) {
        this.socketEmitService = socketEmitService;
        this.cacheTokenService = cacheTokenService;
        this.cacheDataService = cacheDataService;
        this.userRepository = userRepository;
        this.logger = new common_1.Logger(ApiRootUserService_1.name);
    }
    async pagination(query) {
        const { page, limit, filter, sort, relation } = query;
        const { data, total } = await this.userRepository.pagination({
            page,
            limit,
            relation,
            condition: {
                oid: filter === null || filter === void 0 ? void 0 : filter.oid,
                isAdmin: filter === null || filter === void 0 ? void 0 : filter.isAdmin,
                isActive: filter === null || filter === void 0 ? void 0 : filter.isActive,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            sort,
        });
        for (let i = 0; i < data.length; i++) {
            const user = data[i];
            const tokenList = await this.cacheTokenService.getTokenList({
                oid: user.oid,
                uid: user.id,
            });
            user.devices = tokenList.map((j) => {
                const device = new device_1.default();
                device.refreshExp = j.refreshExp;
                device.ip = j.ip;
                device.os = j.os;
                device.browser = j.browser;
                device.mobile = j.mobile;
                device.online =
                    (this.socketEmitService.connections[user.id] || []).some((k) => {
                        return k.refreshExp === j.refreshExp;
                    }) || j.online;
                return device;
            });
        }
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async create(body) {
        const { oid, username, password } = body, other = __rest(body, ["oid", "username", "password"]);
        const existUser = await this.userRepository.findOneBy({
            oid,
            username,
        });
        if (existUser)
            throw new exception_filter_1.BusinessException('error.Register.ExistUsername');
        const hashPassword = await bcrypt.hash(password, 5);
        const secret = (0, string_helper_1.encrypt)(password, username);
        const user = await this.userRepository.insertOneFullFieldAndReturnEntity(Object.assign(Object.assign({}, other), { oid,
            username,
            secret,
            hashPassword }));
        this.cacheDataService.clearUserAndRole(user.oid);
        return { data: { user } };
    }
    async update(userId, body) {
        const { username, password } = body, other = __rest(body, ["username", "password"]);
        const userOld = await this.userRepository.findOneBy({ id: userId });
        if (!userOld)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        const hashPassword = await bcrypt.hash(password, 5);
        const secret = (0, string_helper_1.encrypt)(password, username);
        const [user] = await this.userRepository.updateAndReturnEntity({ id: userId }, Object.assign(Object.assign({}, other), { hashPassword,
            secret,
            username }));
        if (!user) {
            throw new exception_filter_1.BusinessException('error.Database.UpdateFailed');
        }
        this.cacheDataService.clearUserAndRole(user.oid);
        return { data: { user } };
    }
    async deleteOne(id) {
        const [user] = await this.userRepository.updateAndReturnEntity({ id }, { deletedAt: Date.now() });
        if (!user) {
            throw new exception_filter_1.BusinessException('error.Database.DeleteFailed');
        }
        this.cacheDataService.clearUserAndRole(user.oid);
        return { data: { userId: user.id } };
    }
    async deviceLogout(options) {
        const { oid, userId, refreshExp } = options;
        const result = this.cacheTokenService.removeRefreshToken({
            oid,
            uid: userId,
            refreshExp,
        });
        return { data: result };
    }
    async logoutAll() {
        const result = this.cacheTokenService.removeAllExcludeRoot();
        return { data: result };
    }
};
exports.ApiRootUserService = ApiRootUserService;
exports.ApiRootUserService = ApiRootUserService = ApiRootUserService_1 = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _a : Object, typeof (_b = typeof cache_token_service_1.CacheTokenService !== "undefined" && cache_token_service_1.CacheTokenService) === "function" ? _b : Object, typeof (_c = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _c : Object, typeof (_d = typeof user_repository_1.UserRepository !== "undefined" && user_repository_1.UserRepository) === "function" ? _d : Object])
], ApiRootUserService);


/***/ }),
/* 214 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const class_transformer_1 = __webpack_require__(32);
class Device {
}
exports["default"] = Device;
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Device.prototype, "oid", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Device.prototype, "id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Device.prototype, "refreshExp", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Device.prototype, "ip", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Device.prototype, "os", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], Device.prototype, "browser", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], Device.prototype, "mobile", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Object)
], Device.prototype, "online", void 0);


/***/ }),
/* 215 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeviceLogoutBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class DeviceLogoutBody {
}
exports.DeviceLogoutBody = DeviceLogoutBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: Date.now() }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], DeviceLogoutBody.prototype, "refreshExp", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 2 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], DeviceLogoutBody.prototype, "oid", void 0);


/***/ }),
/* 216 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RootUserGetOneQuery = exports.RootUserGetManyQuery = exports.RootUserPaginationQuery = exports.RootUserGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const root_user_options_request_1 = __webpack_require__(217);
class RootUserGetQuery {
}
exports.RootUserGetQuery = RootUserGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            organization: true,
            userRoleList: true,
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(root_user_options_request_1.RootUserRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof root_user_options_request_1.RootUserRelationQuery !== "undefined" && root_user_options_request_1.RootUserRelationQuery) === "function" ? _a : Object)
], RootUserGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({}),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(root_user_options_request_1.RootUserFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof root_user_options_request_1.RootUserFilterQuery !== "undefined" && root_user_options_request_1.RootUserFilterQuery) === "function" ? _b : Object)
], RootUserGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({}),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(root_user_options_request_1.RootUserSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof root_user_options_request_1.RootUserSortQuery !== "undefined" && root_user_options_request_1.RootUserSortQuery) === "function" ? _c : Object)
], RootUserGetQuery.prototype, "sort", void 0);
class RootUserPaginationQuery extends (0, swagger_1.IntersectionType)(RootUserGetQuery, query_1.PaginationQuery) {
}
exports.RootUserPaginationQuery = RootUserPaginationQuery;
class RootUserGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(RootUserGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.RootUserGetManyQuery = RootUserGetManyQuery;
class RootUserGetOneQuery extends (0, swagger_1.PickType)(RootUserGetQuery, ['relation']) {
}
exports.RootUserGetOneQuery = RootUserGetOneQuery;


/***/ }),
/* 217 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RootUserSortQuery = exports.RootUserFilterQuery = exports.RootUserRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const dto_1 = __webpack_require__(195);
const query_1 = __webpack_require__(185);
class RootUserRelationQuery {
}
exports.RootUserRelationQuery = RootUserRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], RootUserRelationQuery.prototype, "organization", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], RootUserRelationQuery.prototype, "userRoleList", void 0);
class RootUserFilterQuery {
}
exports.RootUserFilterQuery = RootUserFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], RootUserFilterQuery.prototype, "oid", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], RootUserFilterQuery.prototype, "isAdmin", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], RootUserFilterQuery.prototype, "isActive", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => dto_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof dto_1.ConditionTimestamp !== "undefined" && dto_1.ConditionTimestamp) === "function" ? _a : Object)
], RootUserFilterQuery.prototype, "updatedAt", void 0);
class RootUserSortQuery extends query_1.SortQuery {
}
exports.RootUserSortQuery = RootUserSortQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], RootUserSortQuery.prototype, "oid", void 0);


/***/ }),
/* 218 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RootUserUpdateBody = exports.RootUserCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
class RootUserCreateBody {
}
exports.RootUserCreateBody = RootUserCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 40 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], RootUserCreateBody.prototype, "oid", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: '0376123456' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Validate)(class_validator_custom_1.IsPhone),
    __metadata("design:type", String)
], RootUserCreateBody.prototype, "phone", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'admin' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.MinLength)(4),
    __metadata("design:type", String)
], RootUserCreateBody.prototype, "username", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Abc@123456' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.MinLength)(6),
    __metadata("design:type", String)
], RootUserCreateBody.prototype, "password", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Phạm Hoàng Mai' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], RootUserCreateBody.prototype, "fullName", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1678890707005 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], RootUserCreateBody.prototype, "birthday", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ enum: [0, 1], example: variable_1.EGender.Female }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", typeof (_a = typeof variable_1.EGender !== "undefined" && variable_1.EGender) === "function" ? _a : Object)
], RootUserCreateBody.prototype, "gender", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], RootUserCreateBody.prototype, "isAdmin", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], RootUserCreateBody.prototype, "isActive", void 0);
class RootUserUpdateBody extends (0, swagger_1.OmitType)(RootUserCreateBody, ['oid']) {
}
exports.RootUserUpdateBody = RootUserUpdateBody;


/***/ }),
/* 219 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiModule = void 0;
const common_1 = __webpack_require__(3);
const api_appointment_module_1 = __webpack_require__(220);
const api_batch_movement_module_1 = __webpack_require__(232);
const api_batch_module_1 = __webpack_require__(238);
const api_customer_payment_module_1 = __webpack_require__(245);
const api_customer_source_module_1 = __webpack_require__(253);
const api_customer_module_1 = __webpack_require__(260);
const api_distributor_payment_module_1 = __webpack_require__(266);
const api_distributor_module_1 = __webpack_require__(273);
const api_laboratory_group_module_1 = __webpack_require__(280);
const api_laboratory_kit_module_1 = __webpack_require__(287);
const api_laboratory_module_1 = __webpack_require__(294);
const api_organization_module_1 = __webpack_require__(302);
const api_permission_module_1 = __webpack_require__(318);
const api_prescription_sample_module_1 = __webpack_require__(324);
const api_print_html_module_1 = __webpack_require__(331);
const api_procedure_group_module_1 = __webpack_require__(338);
const api_procedure_module_1 = __webpack_require__(345);
const api_product_group_module_1 = __webpack_require__(352);
const api_product_movement_module_1 = __webpack_require__(359);
const api_product_module_1 = __webpack_require__(365);
const api_radiology_group_module_1 = __webpack_require__(373);
const api_radiology_module_1 = __webpack_require__(380);
const api_receipt_item_module_1 = __webpack_require__(389);
const api_receipt_module_1 = __webpack_require__(396);
const api_role_module_1 = __webpack_require__(405);
const api_setting_module_1 = __webpack_require__(412);
const api_statistic_module_1 = __webpack_require__(417);
const api_ticket_clinic_module_1 = __webpack_require__(432);
const api_ticket_laboratory_module_1 = __webpack_require__(446);
const api_ticket_order_module_1 = __webpack_require__(453);
const api_ticket_procedure_module_1 = __webpack_require__(464);
const api_ticket_product_module_1 = __webpack_require__(470);
const api_ticket_radiology_module_1 = __webpack_require__(476);
const api_ticket_module_1 = __webpack_require__(483);
const api_user_module_1 = __webpack_require__(486);
const api_warehouse_module_1 = __webpack_require__(495);
let ApiModule = class ApiModule {
};
exports.ApiModule = ApiModule;
exports.ApiModule = ApiModule = __decorate([
    (0, common_1.Module)({
        imports: [
            api_appointment_module_1.ApiAppointmentModule,
            api_batch_module_1.ApiBatchModule,
            api_batch_movement_module_1.ApiBatchMovementModule,
            api_customer_module_1.ApiCustomerModule,
            api_customer_payment_module_1.ApiCustomerPaymentModule,
            api_customer_source_module_1.ApiCustomerSourceModule,
            api_distributor_module_1.ApiDistributorModule,
            api_distributor_payment_module_1.ApiDistributorPaymentModule,
            api_organization_module_1.ApiOrganizationModule,
            api_permission_module_1.ApiPermissionModule,
            api_procedure_module_1.ApiProcedureModule,
            api_product_module_1.ApiProductModule,
            api_product_movement_module_1.ApiProductMovementModule,
            api_receipt_module_1.ApiReceiptModule,
            api_receipt_item_module_1.ApiReceiptItemModule,
            api_role_module_1.ApiRoleModule,
            api_setting_module_1.ApiSettingModule,
            api_statistic_module_1.ApiStatisticModule,
            api_user_module_1.ApiUserModule,
            api_laboratory_module_1.ApiLaboratoryModule,
            api_laboratory_group_module_1.ApiLaboratoryGroupModule,
            api_laboratory_kit_module_1.ApiLaboratoryKitModule,
            api_radiology_module_1.ApiRadiologyModule,
            api_radiology_group_module_1.ApiRadiologyGroupModule,
            api_prescription_sample_module_1.ApiPrescriptionSampleModule,
            api_warehouse_module_1.ApiWarehouseModule,
            api_product_group_module_1.ApiProductGroupModule,
            api_procedure_group_module_1.ApiProcedureGroupModule,
            api_print_html_module_1.ApiPrintHtmlModule,
            api_ticket_module_1.ApiTicketModule,
            api_ticket_order_module_1.ApiTicketOrderModule,
            api_ticket_procedure_module_1.ApiTicketProcedureModule,
            api_ticket_product_module_1.ApiTicketProductModule,
            api_ticket_clinic_module_1.ApiTicketClinicModule,
            api_ticket_laboratory_module_1.ApiTicketLaboratoryModule,
            api_ticket_radiology_module_1.ApiTicketRadiologyModule,
        ],
        controllers: [],
        providers: [],
    })
], ApiModule);


/***/ }),
/* 220 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiAppointmentModule = void 0;
const common_1 = __webpack_require__(3);
const api_appointment_controller_1 = __webpack_require__(221);
const api_appointment_service_1 = __webpack_require__(222);
let ApiAppointmentModule = class ApiAppointmentModule {
};
exports.ApiAppointmentModule = ApiAppointmentModule;
exports.ApiAppointmentModule = ApiAppointmentModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_appointment_controller_1.ApiAppointmentController],
        providers: [api_appointment_service_1.ApiAppointmentService],
    })
], ApiAppointmentModule);


/***/ }),
/* 221 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiAppointmentController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_appointment_service_1 = __webpack_require__(222);
const request_1 = __webpack_require__(223);
let ApiAppointmentController = class ApiAppointmentController {
    constructor(apiAppointmentService) {
        this.apiAppointmentService = apiAppointmentService;
    }
    pagination({ oid }, query) {
        return this.apiAppointmentService.pagination(oid, query);
    }
    list({ oid }, query) {
        return this.apiAppointmentService.getMany(oid, query);
    }
    async detail({ oid }, { id }, query) {
        return await this.apiAppointmentService.getOne(oid, id, query);
    }
    async create({ oid }, body) {
        return await this.apiAppointmentService.createOne(oid, body);
    }
    async update({ oid }, { id }, body) {
        return await this.apiAppointmentService.updateOne(oid, +id, body);
    }
    async deleteOne({ oid }, { id }) {
        return await this.apiAppointmentService.deleteOne(oid, id);
    }
    async registerTicketClinic({ oid }, { id }, body) {
        return await this.apiAppointmentService.registerTicketClinic({
            oid,
            appointmentId: id,
            body,
        });
    }
};
exports.ApiAppointmentController = ApiAppointmentController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.APPOINTMENT_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.AppointmentPaginationQuery !== "undefined" && request_1.AppointmentPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiAppointmentController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.APPOINTMENT_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.AppointmentGetManyQuery !== "undefined" && request_1.AppointmentGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", void 0)
], ApiAppointmentController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.APPOINTMENT_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object, typeof (_h = typeof request_1.AppointmentGetOneQuery !== "undefined" && request_1.AppointmentGetOneQuery) === "function" ? _h : Object]),
    __metadata("design:returntype", Promise)
], ApiAppointmentController.prototype, "detail", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.APPOINTMENT_CREATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_j = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _j : Object, typeof (_k = typeof request_1.AppointmentCreateBody !== "undefined" && request_1.AppointmentCreateBody) === "function" ? _k : Object]),
    __metadata("design:returntype", Promise)
], ApiAppointmentController.prototype, "create", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.APPOINTMENT_UPDATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_l = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _l : Object, typeof (_m = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _m : Object, typeof (_o = typeof request_1.AppointmentUpdateBody !== "undefined" && request_1.AppointmentUpdateBody) === "function" ? _o : Object]),
    __metadata("design:returntype", Promise)
], ApiAppointmentController.prototype, "update", null);
__decorate([
    (0, common_1.Delete)('delete/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.APPOINTMENT_DELETE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_p = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _p : Object, typeof (_q = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _q : Object]),
    __metadata("design:returntype", Promise)
], ApiAppointmentController.prototype, "deleteOne", null);
__decorate([
    (0, common_1.Post)(':id/register-ticket-clinic'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.APPOINTMENT_REGISTER_TICKET),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_r = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _r : Object, typeof (_s = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _s : Object, typeof (_t = typeof request_1.AppointmentRegisterTicketClinicBody !== "undefined" && request_1.AppointmentRegisterTicketClinicBody) === "function" ? _t : Object]),
    __metadata("design:returntype", Promise)
], ApiAppointmentController.prototype, "registerTicketClinic", null);
exports.ApiAppointmentController = ApiAppointmentController = __decorate([
    (0, swagger_1.ApiTags)('Appointment'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('appointment'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_appointment_service_1.ApiAppointmentService !== "undefined" && api_appointment_service_1.ApiAppointmentService) === "function" ? _a : Object])
], ApiAppointmentController);


/***/ }),
/* 222 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var _a, _b, _c, _d, _e;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiAppointmentService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const time_helper_1 = __webpack_require__(119);
const appointment_entity_1 = __webpack_require__(37);
const ticket_entity_1 = __webpack_require__(50);
const appointment_repository_1 = __webpack_require__(94);
const customer_repository_1 = __webpack_require__(100);
const ticket_attribute_repository_1 = __webpack_require__(127);
const ticket_repository_1 = __webpack_require__(138);
const socket_emit_service_1 = __webpack_require__(204);
let ApiAppointmentService = class ApiAppointmentService {
    constructor(socketEmitService, appointmentRepository, customerRepository, ticketRepository, ticketAttributeRepository) {
        this.socketEmitService = socketEmitService;
        this.appointmentRepository = appointmentRepository;
        this.customerRepository = customerRepository;
        this.ticketRepository = ticketRepository;
        this.ticketAttributeRepository = ticketAttributeRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { data, total } = await this.appointmentRepository.pagination({
            page,
            limit,
            relation,
            condition: {
                oid,
                customerId: filter === null || filter === void 0 ? void 0 : filter.customerId,
                appointmentStatus: filter === null || filter === void 0 ? void 0 : filter.appointmentStatus,
                registeredAt: filter === null || filter === void 0 ? void 0 : filter.registeredAt,
            },
            sort,
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getMany(oid, query) {
        const { limit, filter } = query;
        const data = await this.appointmentRepository.findMany({
            condition: {
                oid,
                customerId: filter === null || filter === void 0 ? void 0 : filter.customerId,
                appointmentStatus: filter === null || filter === void 0 ? void 0 : filter.appointmentStatus,
                registeredAt: filter === null || filter === void 0 ? void 0 : filter.registeredAt,
            },
            limit,
        });
        return { data };
    }
    async getOne(oid, id, query) {
        const appointment = await this.appointmentRepository.findOneBy({ oid, id });
        if (!appointment) {
            throw exception_filter_1.BusinessException.create({ message: 'error.Database.NotFound', details: 'Appointment' });
        }
        return { data: { appointment } };
    }
    async createOne(oid, body) {
        const { customerId: cid, customer } = body, ticketBody = __rest(body, ["customerId", "customer"]);
        let customerId = cid;
        if (!customerId) {
            customerId = await this.customerRepository.insertOneFullField(Object.assign(Object.assign({}, body.customer), { debt: 0, oid }));
        }
        const appointment = await this.appointmentRepository.insertOneFullFieldAndReturnEntity(Object.assign(Object.assign({}, ticketBody), { customerId, toTicketId: 0, cancelReason: '', oid }));
        return { data: { appointment } };
    }
    async updateOne(oid, id, body) {
        const [appointment] = await this.appointmentRepository.updateAndReturnEntity({ oid, id }, body);
        if (!appointment) {
            throw exception_filter_1.BusinessException.create({
                message: 'error.Database.UpdateFailed',
                details: 'Appointment',
            });
        }
        return { data: { appointment } };
    }
    async deleteOne(oid, id) {
        const affected = await this.appointmentRepository.delete({
            oid,
            id,
            appointmentStatus: {
                IN: [appointment_entity_1.AppointmentStatus.Waiting, appointment_entity_1.AppointmentStatus.Confirm, appointment_entity_1.AppointmentStatus.Cancelled],
            },
        });
        if (affected === 0) {
            throw new exception_filter_1.BusinessException('error.Database.DeleteFailed');
        }
        return { data: { appointmentId: id } };
    }
    async registerTicketClinic(options) {
        const { oid, appointmentId, body } = options;
        const appointment = await this.appointmentRepository.findOneBy({ oid, id: appointmentId });
        const customer = await this.customerRepository.findOneBy({ oid, id: appointment.customerId });
        const countToday = await this.ticketRepository.countToday(oid);
        const registeredAt = body.registeredAt;
        const ticket = await this.ticketRepository.insertOneAndReturnEntity({
            oid,
            customerId: customer.id,
            ticketStatus: ticket_entity_1.TicketStatus.Schedule,
            ticketType: body.ticketType,
            registeredAt,
            dailyIndex: countToday + 1,
            year: time_helper_1.DTimer.info(registeredAt, 7).year,
            month: time_helper_1.DTimer.info(registeredAt, 7).month + 1,
            date: time_helper_1.DTimer.info(registeredAt, 7).date,
        });
        if (appointment.reason) {
            ticket.ticketAttributeList =
                await this.ticketAttributeRepository.insertManyFullFieldAndReturnEntity([{
                        key: 'reason',
                        value: appointment.reason || '',
                        oid,
                        ticketId: ticket.id,
                    }]);
        }
        ticket.customer = customer;
        this.socketEmitService.ticketClinicCreate(oid, { ticket });
        await this.appointmentRepository.updateAndReturnEntity({ oid, id: appointmentId }, {
            appointmentStatus: appointment_entity_1.AppointmentStatus.Completed,
            toTicketId: ticket.id,
        });
        return { data: { appointmentId } };
    }
};
exports.ApiAppointmentService = ApiAppointmentService;
exports.ApiAppointmentService = ApiAppointmentService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _a : Object, typeof (_b = typeof appointment_repository_1.AppointmentRepository !== "undefined" && appointment_repository_1.AppointmentRepository) === "function" ? _b : Object, typeof (_c = typeof customer_repository_1.CustomerRepository !== "undefined" && customer_repository_1.CustomerRepository) === "function" ? _c : Object, typeof (_d = typeof ticket_repository_1.TicketRepository !== "undefined" && ticket_repository_1.TicketRepository) === "function" ? _d : Object, typeof (_e = typeof ticket_attribute_repository_1.TicketAttributeRepository !== "undefined" && ticket_attribute_repository_1.TicketAttributeRepository) === "function" ? _e : Object])
], ApiAppointmentService);


/***/ }),
/* 223 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(224), exports);
__exportStar(__webpack_require__(225), exports);
__exportStar(__webpack_require__(226), exports);
__exportStar(__webpack_require__(227), exports);


/***/ }),
/* 224 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AppointmentGetOneQuery = exports.AppointmentGetManyQuery = exports.AppointmentPaginationQuery = exports.AppointmentGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const appointment_entity_1 = __webpack_require__(37);
const appointment_options_request_1 = __webpack_require__(225);
class AppointmentGetQuery {
}
exports.AppointmentGetQuery = AppointmentGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(appointment_options_request_1.AppointmentRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof appointment_options_request_1.AppointmentRelationQuery !== "undefined" && appointment_options_request_1.AppointmentRelationQuery) === "function" ? _a : Object)
], AppointmentGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            customerId: 3,
            registeredAt: { GT: Date.now() },
            appointmentStatus: { IN: [appointment_entity_1.AppointmentStatus.Confirm, appointment_entity_1.AppointmentStatus.Waiting] },
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(appointment_options_request_1.AppointmentFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof appointment_options_request_1.AppointmentFilterQuery !== "undefined" && appointment_options_request_1.AppointmentFilterQuery) === "function" ? _b : Object)
], AppointmentGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            id: 'ASC',
            registeredAt: 'DESC',
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(appointment_options_request_1.AppointmentSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof appointment_options_request_1.AppointmentSortQuery !== "undefined" && appointment_options_request_1.AppointmentSortQuery) === "function" ? _c : Object)
], AppointmentGetQuery.prototype, "sort", void 0);
class AppointmentPaginationQuery extends (0, swagger_1.IntersectionType)(AppointmentGetQuery, query_1.PaginationQuery) {
}
exports.AppointmentPaginationQuery = AppointmentPaginationQuery;
class AppointmentGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(AppointmentGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.AppointmentGetManyQuery = AppointmentGetManyQuery;
class AppointmentGetOneQuery extends (0, swagger_1.PickType)(AppointmentGetQuery, ['relation']) {
}
exports.AppointmentGetOneQuery = AppointmentGetOneQuery;


/***/ }),
/* 225 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AppointmentSortQuery = exports.AppointmentFilterQuery = exports.AppointmentRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const dto_1 = __webpack_require__(195);
const condition_timestamp_1 = __webpack_require__(201);
const query_1 = __webpack_require__(185);
const class_validator_custom_1 = __webpack_require__(173);
const appointment_entity_1 = __webpack_require__(37);
class AppointmentRelationQuery {
}
exports.AppointmentRelationQuery = AppointmentRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], AppointmentRelationQuery.prototype, "customer", void 0);
const ConditionEnumAppointmentStatus = (0, dto_1.createConditionEnum)(appointment_entity_1.AppointmentStatus);
class AppointmentFilterQuery {
}
exports.AppointmentFilterQuery = AppointmentFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], AppointmentFilterQuery.prototype, "customerId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)((params) => (0, dto_1.transformConditionEnum)(params, appointment_entity_1.AppointmentStatus)),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], AppointmentFilterQuery.prototype, "appointmentStatus", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => condition_timestamp_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof condition_timestamp_1.ConditionTimestamp !== "undefined" && condition_timestamp_1.ConditionTimestamp) === "function" ? _c : Object)
], AppointmentFilterQuery.prototype, "registeredAt", void 0);
class AppointmentSortQuery extends query_1.SortQuery {
}
exports.AppointmentSortQuery = AppointmentSortQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], AppointmentSortQuery.prototype, "registeredAt", void 0);


/***/ }),
/* 226 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AppointmentRegisterTicketClinicBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
const ticket_entity_1 = __webpack_require__(50);
class AppointmentRegisterTicketClinicBody {
}
exports.AppointmentRegisterTicketClinicBody = AppointmentRegisterTicketClinicBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1678890707005 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], AppointmentRegisterTicketClinicBody.prototype, "registeredAt", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: ticket_entity_1.TicketType.Clinic }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(ticket_entity_1.TicketType),
    __metadata("design:type", typeof (_a = typeof ticket_entity_1.TicketType !== "undefined" && ticket_entity_1.TicketType) === "function" ? _a : Object)
], AppointmentRegisterTicketClinicBody.prototype, "ticketType", void 0);


/***/ }),
/* 227 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AppointmentUpdateBody = exports.AppointmentCreateBody = exports.AppointmentBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
const appointment_entity_1 = __webpack_require__(37);
const request_1 = __webpack_require__(228);
class AppointmentBody {
}
exports.AppointmentBody = AppointmentBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 0 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], AppointmentBody.prototype, "fromTicketId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: Date.now() }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], AppointmentBody.prototype, "registeredAt", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Khách hàng đến chăm sóc da' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], AppointmentBody.prototype, "reason", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 45 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], AppointmentBody.prototype, "customerSourceId", void 0);
class AppointmentCreateBody extends AppointmentBody {
}
exports.AppointmentCreateBody = AppointmentCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 45 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], AppointmentCreateBody.prototype, "customerId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ type: request_1.CustomerCreateBody }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => request_1.CustomerCreateBody),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof request_1.CustomerCreateBody !== "undefined" && request_1.CustomerCreateBody) === "function" ? _a : Object)
], AppointmentCreateBody.prototype, "customer", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: appointment_entity_1.AppointmentStatus.Confirm }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_custom_1.IsEnumValue)(appointment_entity_1.AppointmentStatus),
    (0, class_validator_1.IsIn)([appointment_entity_1.AppointmentStatus.Waiting, appointment_entity_1.AppointmentStatus.Confirm]),
    __metadata("design:type", typeof (_b = typeof appointment_entity_1.AppointmentStatus !== "undefined" && appointment_entity_1.AppointmentStatus) === "function" ? _b : Object)
], AppointmentCreateBody.prototype, "appointmentStatus", void 0);
class AppointmentUpdateBody extends AppointmentBody {
}
exports.AppointmentUpdateBody = AppointmentUpdateBody;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: appointment_entity_1.AppointmentStatus.Confirm }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_custom_1.IsEnumValue)(appointment_entity_1.AppointmentStatus),
    (0, class_validator_1.IsIn)([appointment_entity_1.AppointmentStatus.Waiting, appointment_entity_1.AppointmentStatus.Confirm, appointment_entity_1.AppointmentStatus.Cancelled]),
    __metadata("design:type", typeof (_c = typeof appointment_entity_1.AppointmentStatus !== "undefined" && appointment_entity_1.AppointmentStatus) === "function" ? _c : Object)
], AppointmentUpdateBody.prototype, "appointmentStatus", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Khách hàng thay đổi kế hoạch' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], AppointmentUpdateBody.prototype, "cancelReason", void 0);


/***/ }),
/* 228 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(229), exports);
__exportStar(__webpack_require__(230), exports);
__exportStar(__webpack_require__(231), exports);


/***/ }),
/* 229 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CustomerGetOneQuery = exports.CustomerGetManyQuery = exports.CustomerPaginationQuery = exports.CustomerGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const customer_options_request_1 = __webpack_require__(230);
class CustomerGetQuery {
}
exports.CustomerGetQuery = CustomerGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(customer_options_request_1.CustomerRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof customer_options_request_1.CustomerRelationQuery !== "undefined" && customer_options_request_1.CustomerRelationQuery) === "function" ? _a : Object)
], CustomerGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            searchText: 'ax',
            isActive: 1,
            debt: { GTE: 1000000 },
            updatedAt: { GT: Date.now() },
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(customer_options_request_1.CustomerFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof customer_options_request_1.CustomerFilterQuery !== "undefined" && customer_options_request_1.CustomerFilterQuery) === "function" ? _b : Object)
], CustomerGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            id: 'ASC',
            debt: 'DESC',
            fullName: 'ASC',
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(customer_options_request_1.CustomerSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof customer_options_request_1.CustomerSortQuery !== "undefined" && customer_options_request_1.CustomerSortQuery) === "function" ? _c : Object)
], CustomerGetQuery.prototype, "sort", void 0);
class CustomerPaginationQuery extends (0, swagger_1.IntersectionType)(CustomerGetQuery, query_1.PaginationQuery) {
}
exports.CustomerPaginationQuery = CustomerPaginationQuery;
class CustomerGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(CustomerGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.CustomerGetManyQuery = CustomerGetManyQuery;
class CustomerGetOneQuery extends (0, swagger_1.PickType)(CustomerGetQuery, ['relation']) {
}
exports.CustomerGetOneQuery = CustomerGetOneQuery;


/***/ }),
/* 230 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CustomerSortQuery = exports.CustomerFilterQuery = exports.CustomerRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const condition_number_1 = __webpack_require__(199);
const condition_timestamp_1 = __webpack_require__(201);
const query_1 = __webpack_require__(185);
class CustomerRelationQuery {
}
exports.CustomerRelationQuery = CustomerRelationQuery;
class CustomerFilterQuery {
}
exports.CustomerFilterQuery = CustomerFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], CustomerFilterQuery.prototype, "isActive", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomerFilterQuery.prototype, "searchText", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => condition_number_1.ConditionNumber),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof condition_number_1.ConditionNumber !== "undefined" && condition_number_1.ConditionNumber) === "function" ? _a : Object)
], CustomerFilterQuery.prototype, "debt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => condition_timestamp_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof condition_timestamp_1.ConditionTimestamp !== "undefined" && condition_timestamp_1.ConditionTimestamp) === "function" ? _b : Object)
], CustomerFilterQuery.prototype, "updatedAt", void 0);
class CustomerSortQuery extends query_1.SortQuery {
}
exports.CustomerSortQuery = CustomerSortQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], CustomerSortQuery.prototype, "debt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], CustomerSortQuery.prototype, "fullName", void 0);


/***/ }),
/* 231 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CustomerUpdateBody = exports.CustomerCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
class CustomerCreateBody {
}
exports.CustomerCreateBody = CustomerCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Phạm Hoàng Mai' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], CustomerCreateBody.prototype, "fullName", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: '0986123456' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Validate)(class_validator_custom_1.IsPhone),
    __metadata("design:type", String)
], CustomerCreateBody.prototype, "phone", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 45 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], CustomerCreateBody.prototype, "customerSourceId", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1678890707005 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], CustomerCreateBody.prototype, "birthday", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1998 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], CustomerCreateBody.prototype, "yearOfBirth", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ enum: [0, 1], example: variable_1.EGender.Female }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", typeof (_a = typeof variable_1.EGender !== "undefined" && variable_1.EGender) === "function" ? _a : Object)
], CustomerCreateBody.prototype, "gender", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Tỉnh Hưng Yên' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomerCreateBody.prototype, "addressProvince", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Huyện Khoái Châu' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomerCreateBody.prototype, "addressDistrict", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Xã Dạ Trạch' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomerCreateBody.prototype, "addressWard", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Thôn Đức Nhuận' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomerCreateBody.prototype, "addressStreet", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Mẹ Nguyễn Thị Hương, sđt: 0988021146' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomerCreateBody.prototype, "relative", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Mổ ruột thừa năm 2018' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomerCreateBody.prototype, "healthHistory", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Khách hàng không' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomerCreateBody.prototype, "note", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], CustomerCreateBody.prototype, "isActive", void 0);
class CustomerUpdateBody extends (0, swagger_1.PartialType)(CustomerCreateBody) {
}
exports.CustomerUpdateBody = CustomerUpdateBody;


/***/ }),
/* 232 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiBatchMovementModule = void 0;
const common_1 = __webpack_require__(3);
const api_batch_movement_controller_1 = __webpack_require__(233);
const api_batch_movement_service_1 = __webpack_require__(234);
let ApiBatchMovementModule = class ApiBatchMovementModule {
};
exports.ApiBatchMovementModule = ApiBatchMovementModule;
exports.ApiBatchMovementModule = ApiBatchMovementModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_batch_movement_controller_1.ApiBatchMovementController],
        providers: [api_batch_movement_service_1.ApiBatchMovementService],
    })
], ApiBatchMovementModule);


/***/ }),
/* 233 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiBatchMovementController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const permission_guard_1 = __webpack_require__(87);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_batch_movement_service_1 = __webpack_require__(234);
const request_1 = __webpack_require__(235);
let ApiBatchMovementController = class ApiBatchMovementController {
    constructor(apiBatchMovementService) {
        this.apiBatchMovementService = apiBatchMovementService;
    }
    paginationBatchMovement({ oid }, query) {
        return this.apiBatchMovementService.pagination(oid, query);
    }
    list({ oid }, query) {
        return this.apiBatchMovementService.getMany(oid, query);
    }
};
exports.ApiBatchMovementController = ApiBatchMovementController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.READ_MOVEMENT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.BatchMovementPaginationQuery !== "undefined" && request_1.BatchMovementPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiBatchMovementController.prototype, "paginationBatchMovement", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.CUSTOMER_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.BatchMovementGetManyQuery !== "undefined" && request_1.BatchMovementGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", void 0)
], ApiBatchMovementController.prototype, "list", null);
exports.ApiBatchMovementController = ApiBatchMovementController = __decorate([
    (0, swagger_1.ApiTags)('Batch Movement'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('batch-movement'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_batch_movement_service_1.ApiBatchMovementService !== "undefined" && api_batch_movement_service_1.ApiBatchMovementService) === "function" ? _a : Object])
], ApiBatchMovementController);


/***/ }),
/* 234 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiBatchMovementService = void 0;
const common_1 = __webpack_require__(3);
const object_helper_1 = __webpack_require__(85);
const variable_1 = __webpack_require__(41);
const bat_movement_repository_1 = __webpack_require__(95);
const customer_repository_1 = __webpack_require__(100);
const distributor_repository_1 = __webpack_require__(102);
const receipt_repository_1 = __webpack_require__(124);
const ticket_repository_1 = __webpack_require__(138);
let ApiBatchMovementService = class ApiBatchMovementService {
    constructor(batchMovementRepository, receiptRepository, ticketRepository, customerRepository, distributorRepository) {
        this.batchMovementRepository = batchMovementRepository;
        this.receiptRepository = receiptRepository;
        this.ticketRepository = ticketRepository;
        this.customerRepository = customerRepository;
        this.distributorRepository = distributorRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { total, data } = await this.batchMovementRepository.pagination({
            relation: {
                product: relation === null || relation === void 0 ? void 0 : relation.product,
                batch: relation === null || relation === void 0 ? void 0 : relation.batch,
            },
            page,
            limit,
            condition: {
                oid,
                productId: filter === null || filter === void 0 ? void 0 : filter.productId,
                batchId: filter === null || filter === void 0 ? void 0 : filter.batchId,
                voucherId: filter === null || filter === void 0 ? void 0 : filter.voucherId,
                contactId: filter === null || filter === void 0 ? void 0 : filter.contactId,
                voucherType: filter === null || filter === void 0 ? void 0 : filter.voucherType,
            },
            sort,
        });
        const distributorIds = data
            .filter((i) => i.voucherType === variable_1.VoucherType.Receipt)
            .map((i) => i.contactId);
        const receiptIds = data
            .filter((i) => i.voucherType === variable_1.VoucherType.Receipt)
            .map((i) => i.voucherId);
        const customerIds = data
            .filter((i) => i.voucherType === variable_1.VoucherType.Ticket)
            .map((i) => i.contactId);
        const ticketIds = data
            .filter((i) => i.voucherType === variable_1.VoucherType.Ticket)
            .map((i) => i.voucherId);
        const [distributorList, receiptList, customerList, ticketList] = await Promise.all([
            (relation === null || relation === void 0 ? void 0 : relation.distributor) && distributorIds.length
                ? this.distributorRepository.findManyBy({ id: { IN: (0, object_helper_1.uniqueArray)(distributorIds) } })
                : [],
            (relation === null || relation === void 0 ? void 0 : relation.receipt) && receiptIds.length
                ? this.receiptRepository.findMany({ condition: { id: { IN: (0, object_helper_1.uniqueArray)(receiptIds) } } })
                : [],
            (relation === null || relation === void 0 ? void 0 : relation.customer) && customerIds.length
                ? this.customerRepository.findManyBy({ id: { IN: (0, object_helper_1.uniqueArray)(customerIds) } })
                : [],
            (relation === null || relation === void 0 ? void 0 : relation.ticket) && ticketIds.length
                ? this.ticketRepository.findMany({ condition: { id: { IN: (0, object_helper_1.uniqueArray)(ticketIds) } } })
                : [],
        ]);
        data.forEach((mov) => {
            if (mov.voucherType === variable_1.VoucherType.Receipt) {
                mov.distributor = distributorList.find((rc) => rc.id === mov.contactId);
                mov.receipt = receiptList.find((rc) => rc.id === mov.voucherId);
            }
            if (mov.voucherType === variable_1.VoucherType.Ticket) {
                mov.ticket = ticketList.find((iv) => iv.id === mov.voucherId);
                mov.customer = customerList.find((rc) => rc.id === mov.contactId);
            }
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getMany(oid, query) {
        const { limit, filter, relation, sort } = query;
        const data = await this.batchMovementRepository.findMany({
            relation: {
                product: relation === null || relation === void 0 ? void 0 : relation.product,
                batch: relation === null || relation === void 0 ? void 0 : relation.batch,
            },
            limit,
            condition: {
                oid,
                productId: filter === null || filter === void 0 ? void 0 : filter.productId,
                batchId: filter === null || filter === void 0 ? void 0 : filter.batchId,
                voucherId: filter === null || filter === void 0 ? void 0 : filter.voucherId,
                contactId: filter === null || filter === void 0 ? void 0 : filter.contactId,
                voucherType: filter === null || filter === void 0 ? void 0 : filter.voucherType,
            },
        });
        return { data };
    }
};
exports.ApiBatchMovementService = ApiBatchMovementService;
exports.ApiBatchMovementService = ApiBatchMovementService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof bat_movement_repository_1.BatchMovementRepository !== "undefined" && bat_movement_repository_1.BatchMovementRepository) === "function" ? _a : Object, typeof (_b = typeof receipt_repository_1.ReceiptRepository !== "undefined" && receipt_repository_1.ReceiptRepository) === "function" ? _b : Object, typeof (_c = typeof ticket_repository_1.TicketRepository !== "undefined" && ticket_repository_1.TicketRepository) === "function" ? _c : Object, typeof (_d = typeof customer_repository_1.CustomerRepository !== "undefined" && customer_repository_1.CustomerRepository) === "function" ? _d : Object, typeof (_e = typeof distributor_repository_1.DistributorRepository !== "undefined" && distributor_repository_1.DistributorRepository) === "function" ? _e : Object])
], ApiBatchMovementService);


/***/ }),
/* 235 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(236), exports);
__exportStar(__webpack_require__(237), exports);


/***/ }),
/* 236 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BatchMovementGetOneQuery = exports.BatchMovementGetManyQuery = exports.BatchMovementPaginationQuery = exports.BatchMovementGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const variable_1 = __webpack_require__(41);
const batch_movement_options_request_1 = __webpack_require__(237);
class BatchMovementGetQuery {
}
exports.BatchMovementGetQuery = BatchMovementGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            batch: true,
            product: true,
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(batch_movement_options_request_1.BatchMovementRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof batch_movement_options_request_1.BatchMovementRelationQuery !== "undefined" && batch_movement_options_request_1.BatchMovementRelationQuery) === "function" ? _a : Object)
], BatchMovementGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            voucherId: 3,
            voucherType: variable_1.VoucherType.Receipt,
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(batch_movement_options_request_1.BatchMovementFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof batch_movement_options_request_1.BatchMovementFilterQuery !== "undefined" && batch_movement_options_request_1.BatchMovementFilterQuery) === "function" ? _b : Object)
], BatchMovementGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ id: 'ASC' }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(batch_movement_options_request_1.BatchMovementSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof batch_movement_options_request_1.BatchMovementSortQuery !== "undefined" && batch_movement_options_request_1.BatchMovementSortQuery) === "function" ? _c : Object)
], BatchMovementGetQuery.prototype, "sort", void 0);
class BatchMovementPaginationQuery extends (0, swagger_1.IntersectionType)(BatchMovementGetQuery, query_1.PaginationQuery) {
}
exports.BatchMovementPaginationQuery = BatchMovementPaginationQuery;
class BatchMovementGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(BatchMovementGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.BatchMovementGetManyQuery = BatchMovementGetManyQuery;
class BatchMovementGetOneQuery extends (0, swagger_1.PickType)(BatchMovementGetQuery, ['relation']) {
}
exports.BatchMovementGetOneQuery = BatchMovementGetOneQuery;


/***/ }),
/* 237 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BatchMovementSortQuery = exports.BatchMovementFilterQuery = exports.BatchMovementRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const dto_1 = __webpack_require__(195);
const query_1 = __webpack_require__(185);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
class BatchMovementRelationQuery {
}
exports.BatchMovementRelationQuery = BatchMovementRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], BatchMovementRelationQuery.prototype, "product", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], BatchMovementRelationQuery.prototype, "batch", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], BatchMovementRelationQuery.prototype, "receipt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], BatchMovementRelationQuery.prototype, "ticket", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], BatchMovementRelationQuery.prototype, "customer", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], BatchMovementRelationQuery.prototype, "distributor", void 0);
class BatchMovementFilterQuery {
}
exports.BatchMovementFilterQuery = BatchMovementFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], BatchMovementFilterQuery.prototype, "productId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], BatchMovementFilterQuery.prototype, "batchId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(dto_1.transformConditionNumber),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], BatchMovementFilterQuery.prototype, "voucherId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(dto_1.transformConditionNumber),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], BatchMovementFilterQuery.prototype, "contactId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.VoucherType),
    __metadata("design:type", typeof (_c = typeof variable_1.VoucherType !== "undefined" && variable_1.VoucherType) === "function" ? _c : Object)
], BatchMovementFilterQuery.prototype, "voucherType", void 0);
class BatchMovementSortQuery extends query_1.SortQuery {
}
exports.BatchMovementSortQuery = BatchMovementSortQuery;


/***/ }),
/* 238 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiBatchModule = void 0;
const common_1 = __webpack_require__(3);
const api_batch_controller_1 = __webpack_require__(239);
const api_batch_service_1 = __webpack_require__(240);
let ApiBatchModule = class ApiBatchModule {
};
exports.ApiBatchModule = ApiBatchModule;
exports.ApiBatchModule = ApiBatchModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_batch_controller_1.ApiBatchController],
        providers: [api_batch_service_1.ApiBatchService],
    })
], ApiBatchModule);


/***/ }),
/* 239 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiBatchController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_batch_service_1 = __webpack_require__(240);
const request_1 = __webpack_require__(241);
let ApiBatchController = class ApiBatchController {
    constructor(apiBatchService) {
        this.apiBatchService = apiBatchService;
    }
    pagination({ oid }, query) {
        return this.apiBatchService.pagination(oid, query);
    }
    async list({ oid }, query) {
        return await this.apiBatchService.getList(oid, query);
    }
    async detail({ oid }, { id }, query) {
        return await this.apiBatchService.getOne(oid, id, query);
    }
    async create({ oid }, body) {
        return await this.apiBatchService.createOne(oid, body);
    }
    async update({ oid }, { id }, body) {
        return await this.apiBatchService.updateOne(oid, id, body);
    }
    async deleteOne({ oid, organization }, { id }) {
        return await this.apiBatchService.destroyOne({ organization, oid, batchId: id });
    }
    async findOrCreate({ oid }, body) {
        return await this.apiBatchService.findOrCreateOne(oid, body);
    }
};
exports.ApiBatchController = ApiBatchController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.BATCH_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.BatchPaginationQuery !== "undefined" && request_1.BatchPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiBatchController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.BATCH_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.BatchGetManyQuery !== "undefined" && request_1.BatchGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", Promise)
], ApiBatchController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.BATCH_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object, typeof (_h = typeof request_1.BatchGetOneQuery !== "undefined" && request_1.BatchGetOneQuery) === "function" ? _h : Object]),
    __metadata("design:returntype", Promise)
], ApiBatchController.prototype, "detail", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.BATCH_CREATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_j = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _j : Object, typeof (_k = typeof request_1.BatchInsertBody !== "undefined" && request_1.BatchInsertBody) === "function" ? _k : Object]),
    __metadata("design:returntype", Promise)
], ApiBatchController.prototype, "create", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.BATCH_UPDATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_l = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _l : Object, typeof (_m = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _m : Object, typeof (_o = typeof request_1.BatchUpdateBody !== "undefined" && request_1.BatchUpdateBody) === "function" ? _o : Object]),
    __metadata("design:returntype", Promise)
], ApiBatchController.prototype, "update", null);
__decorate([
    (0, common_1.Delete)('delete/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.PRODUCT_DELETE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_p = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _p : Object, typeof (_q = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _q : Object]),
    __metadata("design:returntype", Promise)
], ApiBatchController.prototype, "deleteOne", null);
__decorate([
    (0, common_1.Post)('find-or-create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.BATCH_CREATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_r = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _r : Object, typeof (_s = typeof request_1.BatchInsertBody !== "undefined" && request_1.BatchInsertBody) === "function" ? _s : Object]),
    __metadata("design:returntype", Promise)
], ApiBatchController.prototype, "findOrCreate", null);
exports.ApiBatchController = ApiBatchController = __decorate([
    (0, swagger_1.ApiTags)('Batch'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('batch'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_batch_service_1.ApiBatchService !== "undefined" && api_batch_service_1.ApiBatchService) === "function" ? _a : Object])
], ApiBatchController);


/***/ }),
/* 240 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g, _h;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiBatchService = void 0;
const common_1 = __webpack_require__(3);
const cache_data_service_1 = __webpack_require__(30);
const object_helper_1 = __webpack_require__(85);
const bat_movement_repository_1 = __webpack_require__(95);
const batch_repository_1 = __webpack_require__(96);
const organization_repository_1 = __webpack_require__(34);
const product_repository_1 = __webpack_require__(113);
const receipt_item_repository_1 = __webpack_require__(116);
const ticket_product_repository_1 = __webpack_require__(130);
const socket_emit_service_1 = __webpack_require__(204);
let ApiBatchService = class ApiBatchService {
    constructor(socketEmitService, cacheDataService, organizationRepository, batchRepository, productRepository, ticketProductRepository, receiptItemRepository, batchMovementRepository) {
        this.socketEmitService = socketEmitService;
        this.cacheDataService = cacheDataService;
        this.organizationRepository = organizationRepository;
        this.batchRepository = batchRepository;
        this.productRepository = productRepository;
        this.ticketProductRepository = ticketProductRepository;
        this.receiptItemRepository = receiptItemRepository;
        this.batchMovementRepository = batchMovementRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { total, data } = await this.batchRepository.pagination({
            page,
            limit,
            condition: {
                oid,
                productId: filter === null || filter === void 0 ? void 0 : filter.productId,
                quantity: filter === null || filter === void 0 ? void 0 : filter.quantity,
                expiryDate: filter === null || filter === void 0 ? void 0 : filter.expiryDate,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            sort,
        });
        if ((relation === null || relation === void 0 ? void 0 : relation.product) && data.length) {
            const productIds = (0, object_helper_1.uniqueArray)(data.map((i) => i.productId));
            const products = await this.productRepository.findManyBy({ id: { IN: productIds } });
            data.forEach((i) => (i.product = products.find((j) => j.id === i.productId)));
        }
        return {
            data,
            meta: { page, limit, total },
        };
    }
    async getList(oid, query) {
        const { limit, filter, relation, sort } = query;
        const batches = await this.batchRepository.findMany({
            condition: {
                oid,
                productId: filter === null || filter === void 0 ? void 0 : filter.productId,
                quantity: filter === null || filter === void 0 ? void 0 : filter.quantity,
                expiryDate: filter === null || filter === void 0 ? void 0 : filter.expiryDate,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            limit,
            sort: sort || undefined,
        });
        if ((relation === null || relation === void 0 ? void 0 : relation.product) && batches.length) {
            const products = await this.productRepository.findManyBy({
                oid,
                id: { IN: (0, object_helper_1.uniqueArray)(batches.map((item) => item.productId)) },
            });
            batches.forEach((item) => {
                item.product = products.find((pr) => pr.id === item.productId);
            });
        }
        return { data: batches };
    }
    async getOne(oid, id, query) {
        const { relation } = query;
        const data = await this.batchRepository.findOne({
            condition: { oid, id },
            relation: relation === null || relation === void 0 ? void 0 : relation.product,
        });
        return { data };
    }
    async createOne(oid, body) {
        const id = await this.batchRepository.insertOne(Object.assign(Object.assign({}, body), { oid }));
        const batch = await this.batchRepository.findOneById(id);
        return { data: batch };
    }
    async updateOne(oid, id, body) {
        await this.batchRepository.update({ id, oid }, body);
        const data = await this.batchRepository.findOneBy({ id, oid });
        return { data };
    }
    async destroyOne(options) {
        const { oid, batchId, organization } = options;
        const countReceiptItem = await this.receiptItemRepository.countBy({ oid, batchId });
        const countTicketProduct = await this.ticketProductRepository.countBy({ oid, batchId });
        if (countReceiptItem > 0 || countTicketProduct > 0) {
            return {
                data: { countReceiptItem, countTicketProduct },
                success: false,
            };
        }
        await Promise.allSettled([
            this.batchRepository.delete({ oid, id: batchId }),
            this.batchMovementRepository.delete({ oid, batchId }),
        ]);
        organization.dataVersionParse.batch += 1;
        await this.organizationRepository.update({ id: oid }, {
            dataVersion: JSON.stringify(organization.dataVersionParse),
        });
        this.cacheDataService.clearOrganization(oid);
        return { data: { countTicketProduct: 0, countReceiptItem: 0, batchId } };
    }
    async findOrCreateOne(oid, body) {
        const batchList = await this.batchRepository.findManyBy({
            oid,
            productId: body.productId,
        });
        const batchFind = batchList.find((b) => {
            return b.costPrice == body.costPrice && b.expiryDate == body.expiryDate;
        });
        if (batchFind) {
            return { data: { batch: batchFind } };
        }
        const batch = await this.batchRepository.insertOneFullFieldAndReturnEntity(Object.assign(Object.assign({}, body), { oid }));
        this.socketEmitService.batchUpsert(oid, { batch });
        return { data: { batch } };
    }
};
exports.ApiBatchService = ApiBatchService;
exports.ApiBatchService = ApiBatchService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _a : Object, typeof (_b = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _b : Object, typeof (_c = typeof organization_repository_1.OrganizationRepository !== "undefined" && organization_repository_1.OrganizationRepository) === "function" ? _c : Object, typeof (_d = typeof batch_repository_1.BatchRepository !== "undefined" && batch_repository_1.BatchRepository) === "function" ? _d : Object, typeof (_e = typeof product_repository_1.ProductRepository !== "undefined" && product_repository_1.ProductRepository) === "function" ? _e : Object, typeof (_f = typeof ticket_product_repository_1.TicketProductRepository !== "undefined" && ticket_product_repository_1.TicketProductRepository) === "function" ? _f : Object, typeof (_g = typeof receipt_item_repository_1.ReceiptItemRepository !== "undefined" && receipt_item_repository_1.ReceiptItemRepository) === "function" ? _g : Object, typeof (_h = typeof bat_movement_repository_1.BatchMovementRepository !== "undefined" && bat_movement_repository_1.BatchMovementRepository) === "function" ? _h : Object])
], ApiBatchService);


/***/ }),
/* 241 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(242), exports);
__exportStar(__webpack_require__(243), exports);
__exportStar(__webpack_require__(244), exports);


/***/ }),
/* 242 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BatchGetOneQuery = exports.BatchGetManyQuery = exports.BatchPaginationQuery = exports.BatchGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const batch_options_request_1 = __webpack_require__(243);
class BatchGetQuery {
}
exports.BatchGetQuery = BatchGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ product: true }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(batch_options_request_1.BatchRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof batch_options_request_1.BatchRelationQuery !== "undefined" && batch_options_request_1.BatchRelationQuery) === "function" ? _a : Object)
], BatchGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ isActive: 1, quantity: { GT: 10 } }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(batch_options_request_1.BatchFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof batch_options_request_1.BatchFilterQuery !== "undefined" && batch_options_request_1.BatchFilterQuery) === "function" ? _b : Object)
], BatchGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({ id: 'ASC' }) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(batch_options_request_1.BatchSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof batch_options_request_1.BatchSortQuery !== "undefined" && batch_options_request_1.BatchSortQuery) === "function" ? _c : Object)
], BatchGetQuery.prototype, "sort", void 0);
class BatchPaginationQuery extends (0, swagger_1.IntersectionType)(BatchGetQuery, query_1.PaginationQuery) {
}
exports.BatchPaginationQuery = BatchPaginationQuery;
class BatchGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(BatchGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.BatchGetManyQuery = BatchGetManyQuery;
class BatchGetOneQuery extends (0, swagger_1.PickType)(BatchGetQuery, ['relation']) {
}
exports.BatchGetOneQuery = BatchGetOneQuery;


/***/ }),
/* 243 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BatchSortQuery = exports.BatchFilterQuery = exports.BatchRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const dto_1 = __webpack_require__(195);
const query_1 = __webpack_require__(185);
class BatchRelationQuery {
}
exports.BatchRelationQuery = BatchRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], BatchRelationQuery.prototype, "product", void 0);
class BatchFilterQuery {
}
exports.BatchFilterQuery = BatchFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(dto_1.transformConditionNumber),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], BatchFilterQuery.prototype, "productId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => dto_1.ConditionNumber),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof dto_1.ConditionNumber !== "undefined" && dto_1.ConditionNumber) === "function" ? _b : Object)
], BatchFilterQuery.prototype, "quantity", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], BatchFilterQuery.prototype, "isActive", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => dto_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof dto_1.ConditionTimestamp !== "undefined" && dto_1.ConditionTimestamp) === "function" ? _c : Object)
], BatchFilterQuery.prototype, "expiryDate", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => dto_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_d = typeof dto_1.ConditionTimestamp !== "undefined" && dto_1.ConditionTimestamp) === "function" ? _d : Object)
], BatchFilterQuery.prototype, "updatedAt", void 0);
class BatchSortQuery extends query_1.SortQuery {
}
exports.BatchSortQuery = BatchSortQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], BatchSortQuery.prototype, "expiryDate", void 0);


/***/ }),
/* 244 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BatchUpdateBody = exports.BatchInsertBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class BatchInsertBody {
}
exports.BatchInsertBody = BatchInsertBody;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 12 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], BatchInsertBody.prototype, "productId", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'ABC12345' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], BatchInsertBody.prototype, "lotNumber", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1679995369195 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], BatchInsertBody.prototype, "expiryDate", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 20000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], BatchInsertBody.prototype, "costPrice", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 20000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], BatchInsertBody.prototype, "wholesalePrice", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 20000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], BatchInsertBody.prototype, "retailPrice", void 0);
class BatchUpdateBody extends (0, swagger_1.PickType)(BatchInsertBody, [
    'lotNumber',
    'expiryDate',
    'wholesalePrice',
    'retailPrice',
]) {
}
exports.BatchUpdateBody = BatchUpdateBody;


/***/ }),
/* 245 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiCustomerPaymentModule = void 0;
const common_1 = __webpack_require__(3);
const api_customer_payment_controller_1 = __webpack_require__(246);
const api_customer_payment_service_1 = __webpack_require__(247);
let ApiCustomerPaymentModule = class ApiCustomerPaymentModule {
};
exports.ApiCustomerPaymentModule = ApiCustomerPaymentModule;
exports.ApiCustomerPaymentModule = ApiCustomerPaymentModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_customer_payment_controller_1.ApiCustomerPaymentController],
        providers: [api_customer_payment_service_1.ApiCustomerPaymentService],
    })
], ApiCustomerPaymentModule);


/***/ }),
/* 246 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiCustomerPaymentController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const permission_guard_1 = __webpack_require__(87);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_customer_payment_service_1 = __webpack_require__(247);
const request_1 = __webpack_require__(248);
let ApiCustomerPaymentController = class ApiCustomerPaymentController {
    constructor(apiCustomerPaymentService) {
        this.apiCustomerPaymentService = apiCustomerPaymentService;
    }
    pagination({ oid }, query) {
        return this.apiCustomerPaymentService.pagination(oid, query);
    }
    async list({ oid }, query) {
        return await this.apiCustomerPaymentService.getMany(oid, query);
    }
    startPayDebt({ oid }, body) {
        return this.apiCustomerPaymentService.startPayDebt(oid, body);
    }
};
exports.ApiCustomerPaymentController = ApiCustomerPaymentController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.CUSTOMER_PAYMENT_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.CustomerPaymentPaginationQuery !== "undefined" && request_1.CustomerPaymentPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiCustomerPaymentController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.CUSTOMER_PAYMENT_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.CustomerPaymentGetManyQuery !== "undefined" && request_1.CustomerPaymentGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", Promise)
], ApiCustomerPaymentController.prototype, "list", null);
__decorate([
    (0, common_1.Post)('pay-debt'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.CUSTOMER_PAY_DEBT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof request_1.CustomerPaymentPayDebtBody !== "undefined" && request_1.CustomerPaymentPayDebtBody) === "function" ? _g : Object]),
    __metadata("design:returntype", void 0)
], ApiCustomerPaymentController.prototype, "startPayDebt", null);
exports.ApiCustomerPaymentController = ApiCustomerPaymentController = __decorate([
    (0, swagger_1.ApiTags)('Customer Payment'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('customer-payment'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_customer_payment_service_1.ApiCustomerPaymentService !== "undefined" && api_customer_payment_service_1.ApiCustomerPaymentService) === "function" ? _a : Object])
], ApiCustomerPaymentController);


/***/ }),
/* 247 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiCustomerPaymentService = void 0;
const common_1 = __webpack_require__(3);
const customer_payment_repository_1 = __webpack_require__(97);
const ticket_repository_1 = __webpack_require__(138);
let ApiCustomerPaymentService = class ApiCustomerPaymentService {
    constructor(customerPaymentRepository, ticketRepository) {
        this.customerPaymentRepository = customerPaymentRepository;
        this.ticketRepository = ticketRepository;
    }
    async pagination(oid, query) {
        const { page, limit, relation, filter, sort } = query;
        const { data, total } = await this.customerPaymentRepository.pagination({
            relation: {
                customer: relation === null || relation === void 0 ? void 0 : relation.customer,
                ticket: relation === null || relation === void 0 ? void 0 : relation.ticket,
            },
            page,
            limit,
            condition: {
                oid,
                customerId: filter === null || filter === void 0 ? void 0 : filter.customerId,
                ticketId: filter === null || filter === void 0 ? void 0 : filter.ticketId,
                paymentType: filter === null || filter === void 0 ? void 0 : filter.paymentType,
            },
            sort,
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getMany(oid, query) {
        const { relation, filter, limit, sort } = query;
        const data = await this.customerPaymentRepository.findMany({
            relation: {
                customer: relation === null || relation === void 0 ? void 0 : relation.customer,
                ticket: relation === null || relation === void 0 ? void 0 : relation.ticket,
            },
            condition: {
                oid,
                customerId: filter === null || filter === void 0 ? void 0 : filter.customerId,
                ticketId: filter === null || filter === void 0 ? void 0 : filter.ticketId,
                paymentType: filter === null || filter === void 0 ? void 0 : filter.paymentType,
            },
            limit,
            sort,
        });
        return { data };
    }
    async startPayDebt(oid, body) {
        try {
            const { customer } = await this.customerPaymentRepository.startPayDebt({
                oid,
                customerId: body.customerId,
                time: Date.now(),
                ticketPaymentList: body.ticketPaymentList,
                note: body.note,
            });
            return { data: { customer } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
};
exports.ApiCustomerPaymentService = ApiCustomerPaymentService;
exports.ApiCustomerPaymentService = ApiCustomerPaymentService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof customer_payment_repository_1.CustomerPaymentRepository !== "undefined" && customer_payment_repository_1.CustomerPaymentRepository) === "function" ? _a : Object, typeof (_b = typeof ticket_repository_1.TicketRepository !== "undefined" && ticket_repository_1.TicketRepository) === "function" ? _b : Object])
], ApiCustomerPaymentService);


/***/ }),
/* 248 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(249), exports);
__exportStar(__webpack_require__(251), exports);
__exportStar(__webpack_require__(252), exports);


/***/ }),
/* 249 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CustomerPaymentGetOneQuery = exports.CustomerPaymentGetManyQuery = exports.CustomerPaymentPaginationQuery = exports.CustomerPaymentGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const customer_payment_options_1 = __webpack_require__(250);
class CustomerPaymentGetQuery {
}
exports.CustomerPaymentGetQuery = CustomerPaymentGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(customer_payment_options_1.CustomerPaymentRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof customer_payment_options_1.CustomerPaymentRelationQuery !== "undefined" && customer_payment_options_1.CustomerPaymentRelationQuery) === "function" ? _a : Object)
], CustomerPaymentGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            customerId: 1,
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(customer_payment_options_1.CustomerPaymentFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof customer_payment_options_1.CustomerPaymentFilterQuery !== "undefined" && customer_payment_options_1.CustomerPaymentFilterQuery) === "function" ? _b : Object)
], CustomerPaymentGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            id: 'ASC',
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(customer_payment_options_1.CustomerPaymentSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof customer_payment_options_1.CustomerPaymentSortQuery !== "undefined" && customer_payment_options_1.CustomerPaymentSortQuery) === "function" ? _c : Object)
], CustomerPaymentGetQuery.prototype, "sort", void 0);
class CustomerPaymentPaginationQuery extends (0, swagger_1.IntersectionType)(CustomerPaymentGetQuery, query_1.PaginationQuery) {
}
exports.CustomerPaymentPaginationQuery = CustomerPaymentPaginationQuery;
class CustomerPaymentGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(CustomerPaymentGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.CustomerPaymentGetManyQuery = CustomerPaymentGetManyQuery;
class CustomerPaymentGetOneQuery extends (0, swagger_1.PickType)(CustomerPaymentGetQuery, ['relation']) {
}
exports.CustomerPaymentGetOneQuery = CustomerPaymentGetOneQuery;


/***/ }),
/* 250 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CustomerPaymentSortQuery = exports.CustomerPaymentFilterQuery = exports.CustomerPaymentRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
class CustomerPaymentRelationQuery {
}
exports.CustomerPaymentRelationQuery = CustomerPaymentRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], CustomerPaymentRelationQuery.prototype, "customer", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], CustomerPaymentRelationQuery.prototype, "ticket", void 0);
class CustomerPaymentFilterQuery {
}
exports.CustomerPaymentFilterQuery = CustomerPaymentFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], CustomerPaymentFilterQuery.prototype, "customerId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], CustomerPaymentFilterQuery.prototype, "ticketId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.PaymentType),
    __metadata("design:type", typeof (_a = typeof variable_1.PaymentType !== "undefined" && variable_1.PaymentType) === "function" ? _a : Object)
], CustomerPaymentFilterQuery.prototype, "paymentType", void 0);
class CustomerPaymentSortQuery extends query_1.SortQuery {
}
exports.CustomerPaymentSortQuery = CustomerPaymentSortQuery;


/***/ }),
/* 251 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CustomerPaymentPayDebtBody = exports.TicketPayments = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
class TicketPayments {
}
exports.TicketPayments = TicketPayments;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketPayments.prototype, "ticketId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], TicketPayments.prototype, "money", void 0);
class CustomerPaymentPayDebtBody {
}
exports.CustomerPaymentPayDebtBody = CustomerPaymentPayDebtBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 12 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], CustomerPaymentPayDebtBody.prototype, "customerId", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Khách hàng còn bo thêm tiền' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomerPaymentPayDebtBody.prototype, "note", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        type: TicketPayments,
        isArray: true,
        example: [
            { ticketId: 12, money: 10000 },
            { ticketId: 13, money: 200000 },
        ],
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_transformer_1.Type)(() => TicketPayments),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], CustomerPaymentPayDebtBody.prototype, "ticketPaymentList", void 0);


/***/ }),
/* 252 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VoucherDebtListQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class VoucherDebtListQuery {
}
exports.VoucherDebtListQuery = VoucherDebtListQuery;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 12 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => parseInt(value)),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], VoucherDebtListQuery.prototype, "customerId", void 0);


/***/ }),
/* 253 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiCustomerSourceModule = void 0;
const common_1 = __webpack_require__(3);
const api_customer_source_controller_1 = __webpack_require__(254);
const api_customer_source_service_1 = __webpack_require__(255);
let ApiCustomerSourceModule = class ApiCustomerSourceModule {
};
exports.ApiCustomerSourceModule = ApiCustomerSourceModule;
exports.ApiCustomerSourceModule = ApiCustomerSourceModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_customer_source_controller_1.ApiCustomerSourceController],
        providers: [api_customer_source_service_1.ApiCustomerSourceService],
    })
], ApiCustomerSourceModule);


/***/ }),
/* 254 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiCustomerSourceController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_customer_source_service_1 = __webpack_require__(255);
const request_1 = __webpack_require__(256);
let ApiCustomerSourceController = class ApiCustomerSourceController {
    constructor(apiCustomerSourceService) {
        this.apiCustomerSourceService = apiCustomerSourceService;
    }
    pagination({ oid }, query) {
        return this.apiCustomerSourceService.pagination(oid, query);
    }
    list({ oid }, query) {
        return this.apiCustomerSourceService.getMany(oid, query);
    }
    findOne({ oid }, { id }) {
        return this.apiCustomerSourceService.getOne(oid, id);
    }
    async createOne({ oid }, body) {
        return await this.apiCustomerSourceService.createOne(oid, body);
    }
    async updateOne({ oid }, { id }, body) {
        return await this.apiCustomerSourceService.updateOne(oid, id, body);
    }
    async destroyOne({ oid }, { id }) {
        return await this.apiCustomerSourceService.destroyOne(oid, id);
    }
};
exports.ApiCustomerSourceController = ApiCustomerSourceController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.CustomerSourcePaginationQuery !== "undefined" && request_1.CustomerSourcePaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiCustomerSourceController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.CustomerSourceGetManyQuery !== "undefined" && request_1.CustomerSourceGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", void 0)
], ApiCustomerSourceController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object]),
    __metadata("design:returntype", void 0)
], ApiCustomerSourceController.prototype, "findOne", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_TICKET_SOURCE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_h = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _h : Object, typeof (_j = typeof request_1.CustomerSourceCreateBody !== "undefined" && request_1.CustomerSourceCreateBody) === "function" ? _j : Object]),
    __metadata("design:returntype", Promise)
], ApiCustomerSourceController.prototype, "createOne", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_TICKET_SOURCE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_k = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _k : Object, typeof (_l = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _l : Object, typeof (_m = typeof request_1.CustomerSourceUpdateBody !== "undefined" && request_1.CustomerSourceUpdateBody) === "function" ? _m : Object]),
    __metadata("design:returntype", Promise)
], ApiCustomerSourceController.prototype, "updateOne", null);
__decorate([
    (0, common_1.Delete)('destroy/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_TICKET_SOURCE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_o = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _o : Object, typeof (_p = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _p : Object]),
    __metadata("design:returntype", Promise)
], ApiCustomerSourceController.prototype, "destroyOne", null);
exports.ApiCustomerSourceController = ApiCustomerSourceController = __decorate([
    (0, swagger_1.ApiTags)('CustomerSource'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('customer-source'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_customer_source_service_1.ApiCustomerSourceService !== "undefined" && api_customer_source_service_1.ApiCustomerSourceService) === "function" ? _a : Object])
], ApiCustomerSourceController);


/***/ }),
/* 255 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiCustomerSourceService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const customer_source_repository_1 = __webpack_require__(99);
let ApiCustomerSourceService = class ApiCustomerSourceService {
    constructor(customerSourceRepository) {
        this.customerSourceRepository = customerSourceRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { data, total } = await this.customerSourceRepository.pagination({
            page,
            limit,
            relation,
            condition: {
                oid,
            },
            sort,
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getMany(oid, query) {
        const { limit, filter, relation } = query;
        const data = await this.customerSourceRepository.findMany({
            relation,
            condition: {
                oid,
            },
            limit,
        });
        return { data };
    }
    async getOne(oid, id) {
        const data = await this.customerSourceRepository.findOneBy({ oid, id });
        if (!data)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        return { data };
    }
    async createOne(oid, body) {
        const id = await this.customerSourceRepository.insertOne(Object.assign({ oid }, body));
        const data = await this.customerSourceRepository.findOneById(id);
        return { data };
    }
    async updateOne(oid, id, body) {
        const affected = await this.customerSourceRepository.update({ id, oid }, body);
        const data = await this.customerSourceRepository.findOneBy({ oid, id });
        return { data };
    }
    async destroyOne(oid, id) {
        const affected = await this.customerSourceRepository.delete({ oid, id });
        if (affected === 0) {
            throw new exception_filter_1.BusinessException('error.Database.DeleteFailed');
        }
        const data = await this.customerSourceRepository.findOneById(id);
        return { data };
    }
};
exports.ApiCustomerSourceService = ApiCustomerSourceService;
exports.ApiCustomerSourceService = ApiCustomerSourceService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof customer_source_repository_1.CustomerSourceRepository !== "undefined" && customer_source_repository_1.CustomerSourceRepository) === "function" ? _a : Object])
], ApiCustomerSourceService);


/***/ }),
/* 256 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(257), exports);
__exportStar(__webpack_require__(258), exports);
__exportStar(__webpack_require__(259), exports);


/***/ }),
/* 257 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CustomerSourceGetOneQuery = exports.CustomerSourceGetManyQuery = exports.CustomerSourcePaginationQuery = exports.CustomerSourceGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const customer_source_options_request_1 = __webpack_require__(258);
class CustomerSourceGetQuery {
}
exports.CustomerSourceGetQuery = CustomerSourceGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({}),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(customer_source_options_request_1.CustomerSourceRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof customer_source_options_request_1.CustomerSourceRelationQuery !== "undefined" && customer_source_options_request_1.CustomerSourceRelationQuery) === "function" ? _a : Object)
], CustomerSourceGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({}),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(customer_source_options_request_1.CustomerSourceFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof customer_source_options_request_1.CustomerSourceFilterQuery !== "undefined" && customer_source_options_request_1.CustomerSourceFilterQuery) === "function" ? _b : Object)
], CustomerSourceGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({}),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(customer_source_options_request_1.CustomerSourceSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof customer_source_options_request_1.CustomerSourceSortQuery !== "undefined" && customer_source_options_request_1.CustomerSourceSortQuery) === "function" ? _c : Object)
], CustomerSourceGetQuery.prototype, "sort", void 0);
class CustomerSourcePaginationQuery extends (0, swagger_1.IntersectionType)(CustomerSourceGetQuery, query_1.PaginationQuery) {
}
exports.CustomerSourcePaginationQuery = CustomerSourcePaginationQuery;
class CustomerSourceGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(CustomerSourceGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.CustomerSourceGetManyQuery = CustomerSourceGetManyQuery;
class CustomerSourceGetOneQuery extends (0, swagger_1.PickType)(CustomerSourceGetQuery, ['relation']) {
}
exports.CustomerSourceGetOneQuery = CustomerSourceGetOneQuery;


/***/ }),
/* 258 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CustomerSourceSortQuery = exports.CustomerSourceFilterQuery = exports.CustomerSourceRelationQuery = void 0;
const query_1 = __webpack_require__(185);
class CustomerSourceRelationQuery {
}
exports.CustomerSourceRelationQuery = CustomerSourceRelationQuery;
class CustomerSourceFilterQuery {
}
exports.CustomerSourceFilterQuery = CustomerSourceFilterQuery;
class CustomerSourceSortQuery extends query_1.SortQuery {
}
exports.CustomerSourceSortQuery = CustomerSourceSortQuery;


/***/ }),
/* 259 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CustomerSourceUpdateBody = exports.CustomerSourceCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class CustomerSourceCreateBody {
}
exports.CustomerSourceCreateBody = CustomerSourceCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Ngô Nhật Dương' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], CustomerSourceCreateBody.prototype, "name", void 0);
class CustomerSourceUpdateBody extends (0, swagger_1.PartialType)(CustomerSourceCreateBody) {
}
exports.CustomerSourceUpdateBody = CustomerSourceUpdateBody;


/***/ }),
/* 260 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiCustomerModule = void 0;
const common_1 = __webpack_require__(3);
const api_customer_controller_1 = __webpack_require__(261);
const api_customer_excel_1 = __webpack_require__(262);
const api_customer_service_1 = __webpack_require__(265);
let ApiCustomerModule = class ApiCustomerModule {
};
exports.ApiCustomerModule = ApiCustomerModule;
exports.ApiCustomerModule = ApiCustomerModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_customer_controller_1.ApiCustomerController],
        providers: [api_customer_service_1.ApiCustomerService, api_customer_excel_1.ApiCustomerExcel],
    })
], ApiCustomerModule);


/***/ }),
/* 261 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiCustomerController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_customer_excel_1 = __webpack_require__(262);
const api_customer_service_1 = __webpack_require__(265);
const request_1 = __webpack_require__(228);
let ApiCustomerController = class ApiCustomerController {
    constructor(apiCustomerService, apiCustomerExcel) {
        this.apiCustomerService = apiCustomerService;
        this.apiCustomerExcel = apiCustomerExcel;
    }
    pagination({ oid }, query) {
        return this.apiCustomerService.pagination(oid, query);
    }
    list({ oid }, query) {
        return this.apiCustomerService.getMany(oid, query);
    }
    async detail({ oid }, { id }, query) {
        return await this.apiCustomerService.getOne(oid, id, query);
    }
    async create({ oid }, body) {
        return await this.apiCustomerService.createOne(oid, body);
    }
    async update({ oid }, { id }, body) {
        return await this.apiCustomerService.updateOne(oid, +id, body);
    }
    async destroyOne({ oid, organization }, { id }) {
        return await this.apiCustomerService.destroyOne({
            oid,
            customerId: id,
            organization,
        });
    }
    async downloadExcel({ user, organization }) {
        return await this.apiCustomerExcel.downloadExcel({ organization, user });
    }
};
exports.ApiCustomerController = ApiCustomerController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.CUSTOMER_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_c = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _c : Object, typeof (_d = typeof request_1.CustomerPaginationQuery !== "undefined" && request_1.CustomerPaginationQuery) === "function" ? _d : Object]),
    __metadata("design:returntype", void 0)
], ApiCustomerController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.CUSTOMER_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_e = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _e : Object, typeof (_f = typeof request_1.CustomerGetManyQuery !== "undefined" && request_1.CustomerGetManyQuery) === "function" ? _f : Object]),
    __metadata("design:returntype", void 0)
], ApiCustomerController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.CUSTOMER_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_g = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _g : Object, typeof (_h = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _h : Object, typeof (_j = typeof request_1.CustomerGetOneQuery !== "undefined" && request_1.CustomerGetOneQuery) === "function" ? _j : Object]),
    __metadata("design:returntype", Promise)
], ApiCustomerController.prototype, "detail", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.CUSTOMER_CREATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_k = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _k : Object, typeof (_l = typeof request_1.CustomerCreateBody !== "undefined" && request_1.CustomerCreateBody) === "function" ? _l : Object]),
    __metadata("design:returntype", Promise)
], ApiCustomerController.prototype, "create", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.CUSTOMER_UPDATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_m = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _m : Object, typeof (_o = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _o : Object, typeof (_p = typeof request_1.CustomerUpdateBody !== "undefined" && request_1.CustomerUpdateBody) === "function" ? _p : Object]),
    __metadata("design:returntype", Promise)
], ApiCustomerController.prototype, "update", null);
__decorate([
    (0, common_1.Delete)('destroy/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.CUSTOMER_DELETE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_q = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _q : Object, typeof (_r = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _r : Object]),
    __metadata("design:returntype", Promise)
], ApiCustomerController.prototype, "destroyOne", null);
__decorate([
    (0, common_1.Get)('download-excel'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.PRODUCT_DOWNLOAD_EXCEL),
    __param(0, (0, external_request_1.External)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_s = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _s : Object]),
    __metadata("design:returntype", Promise)
], ApiCustomerController.prototype, "downloadExcel", null);
exports.ApiCustomerController = ApiCustomerController = __decorate([
    (0, swagger_1.ApiTags)('Customer'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('customer'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_customer_service_1.ApiCustomerService !== "undefined" && api_customer_service_1.ApiCustomerService) === "function" ? _a : Object, typeof (_b = typeof api_customer_excel_1.ApiCustomerExcel !== "undefined" && api_customer_excel_1.ApiCustomerExcel) === "function" ? _b : Object])
], ApiCustomerController);


/***/ }),
/* 262 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiCustomerExcel = void 0;
const common_1 = __webpack_require__(3);
const time_helper_1 = __webpack_require__(119);
const customer_repository_1 = __webpack_require__(100);
const excel_one_sheet_util_1 = __webpack_require__(263);
let ApiCustomerExcel = class ApiCustomerExcel {
    constructor(customerRepository) {
        this.customerRepository = customerRepository;
    }
    async downloadExcel(options) {
        const { user, organization } = options;
        const customerList = await this.customerRepository.findMany({
            condition: { oid: organization.id, isActive: 1 },
            sort: { id: 'ASC' },
        });
        const workbook = this.getWorkbookProduct(customerList, {
            orgName: organization.name,
            orgPhone: organization.phone,
            orgAddress: [
                organization.addressWard,
                organization.addressDistrict,
                organization.addressProvince,
            ]
                .filter((i) => !!i)
                .join(' - ')
                .replace('Tỉnh', '')
                .replace('Thành phố', '')
                .replace('Quận ', '')
                .replace('Huyện ', '')
                .replace('Phường ', '')
                .replace('Xã ', ''),
            userFullName: user.fullName,
        });
        const buffer = await workbook.xlsx.writeBuffer();
        return {
            data: {
                buffer,
                mimeType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
                filename: 'MEA-khach-hang.xlsx',
            },
        };
    }
    getWorkbookProduct(customerList, meta) {
        const dataRows = [];
        customerList.forEach((customer, index) => {
            dataRows.push({
                style: {
                    num: { alignment: { horizontal: 'center' } },
                    id: { alignment: { horizontal: 'center' } },
                    fullName: { alignment: { wrapText: true } },
                    phone: { alignment: { horizontal: 'center' } },
                    debt: { numFmt: '###,##0' },
                    birthday: { alignment: { horizontal: 'center' }, numFmt: 'dd/mm/yyyy' },
                    gender: { alignment: { horizontal: 'center' } },
                    addressProvince: { alignment: { wrapText: true } },
                    addressDistrict: { alignment: { wrapText: true } },
                    addressWard: { alignment: { wrapText: true } },
                    note: { alignment: { wrapText: true } },
                },
                data: [
                    {
                        num: index + 1,
                        id: 'KH' + customer.id,
                        fullName: customer.fullName || '',
                        phone: customer.phone || '',
                        debt: customer.debt || 0,
                        birthday: customer.birthday ? new Date(customer.birthday + 7 * 60 * 60 * 1000) : '',
                        gender: { 0: 'Nữ', 1: 'Nam' }[customer.gender] || '',
                        addressProvince: customer.addressProvince || '',
                        addressDistrict: customer.addressDistrict || '',
                        addressWard: customer.addressWard || '',
                        note: customer.note || '',
                    },
                ],
            });
        });
        const workbook = (0, excel_one_sheet_util_1.excelOneSheetWorkbook)({
            layout: { sheetName: 'Sản phẩm' },
            headerSheet: (worksheet) => {
                worksheet.addRow([meta.orgName]).eachCell((cell) => {
                    cell.font = {
                        size: 12,
                        bold: true,
                        name: 'Times New Roman',
                    };
                });
                worksheet.addRow([meta.orgPhone]).eachCell((cell) => {
                    cell.font = {
                        size: 12,
                        bold: true,
                        name: 'Times New Roman',
                    };
                });
                worksheet.addRow([meta.orgAddress]).eachCell((cell) => {
                    cell.font = {
                        size: 12,
                        bold: true,
                        name: 'Times New Roman',
                    };
                });
                worksheet.addRow(['BÁO CÁO KHÁCH HÀNG']).eachCell((cell) => {
                    cell.font = {
                        size: 16,
                        bold: true,
                        name: 'Times New Roman',
                    };
                    cell.alignment = { horizontal: 'center' };
                });
                worksheet.mergeCells(4, 1, 4, 12);
                worksheet
                    .addRow([`Thời gian: ${time_helper_1.DTimer.timeToText(new Date(), 'hh:mm:ss DD/MM/YYYY', 7)}`])
                    .eachCell((cell) => {
                    cell.font = {
                        size: 12,
                        italic: true,
                        name: 'Times New Roman',
                    };
                    cell.alignment = { horizontal: 'center' };
                });
                worksheet.mergeCells(5, 1, 5, 12);
                worksheet
                    .addRow(['Số khách hàng', '', customerList.length])
                    .eachCell({ includeEmpty: true }, (cell, colNumber) => {
                    cell.style = {
                        border: {
                            top: { style: 'thin' },
                            left: { style: 'thin' },
                            bottom: { style: 'thin' },
                            right: { style: 'thin' },
                        },
                        font: {
                            size: 12,
                            bold: false,
                            name: 'Times New Roman',
                        },
                        alignment: { wrapText: true, vertical: 'middle' },
                    };
                    if (colNumber === 3) {
                        cell.font.bold = true;
                        cell.style.numFmt = '###,##0';
                    }
                });
                worksheet.mergeCells(6, 1, 6, 2);
                worksheet
                    .addRow(['Tổng nợ', '', customerList.reduce((acc, cur) => acc + cur.debt, 0)])
                    .eachCell({ includeEmpty: true }, (cell, colNumber) => {
                    cell.style = {
                        border: {
                            top: { style: 'thin' },
                            left: { style: 'thin' },
                            bottom: { style: 'thin' },
                            right: { style: 'thin' },
                        },
                        font: {
                            size: 12,
                            bold: false,
                            name: 'Times New Roman',
                        },
                        alignment: { wrapText: true, vertical: 'middle' },
                    };
                    if (colNumber === 3) {
                        cell.font.bold = true;
                        cell.style.numFmt = '###,##0';
                    }
                });
                worksheet.mergeCells(7, 1, 7, 2);
                worksheet.addRow([]);
                const rowTitle = worksheet.addRow([
                    'STT',
                    'ID',
                    'Tên',
                    'SĐT',
                    'Nợ',
                    'Ngày sinh',
                    'Giới tính',
                    'Tỉnh/TP',
                    'Quận/Huyện',
                    'Phường/Xã',
                    'Ghi chú',
                ]);
                rowTitle.height = 32;
                rowTitle.eachCell((cell) => {
                    cell.font = {
                        size: 12,
                        bold: true,
                        name: 'Times New Roman',
                    };
                    cell.alignment = { horizontal: 'center', vertical: 'middle', wrapText: true };
                    cell.fill = {
                        type: 'pattern',
                        pattern: 'solid',
                        fgColor: { argb: 'D8D8D8' },
                        bgColor: { argb: 'D8D8D8' },
                    };
                    cell.border = {
                        top: { style: 'thin' },
                        left: { style: 'thin' },
                        bottom: { style: 'thin' },
                        right: { style: 'thin' },
                    };
                });
            },
            columns: [
                { key: 'num', width: 5 },
                { key: 'id', width: 10 },
                { key: 'fullName', width: 40 },
                { key: 'phone', width: 10 },
                { key: 'debt', width: 10 },
                { key: 'birthday', width: 10 },
                { key: 'gender', width: 10 },
                { key: 'addressProvince', width: 20 },
                { key: 'addressDistrict', width: 20 },
                { key: 'addressWard', width: 20 },
                { key: 'note', width: 30 },
            ],
            rows: dataRows,
            footerSheet: (worksheet) => {
                worksheet.addRow(['']);
                worksheet.addRow([`Người xuất báo cáo: ${meta.userFullName}`]).eachCell((cell) => {
                    cell.font = {
                        size: 12,
                        bold: true,
                        italic: true,
                        name: 'Times New Roman',
                    };
                });
            },
        });
        return workbook;
    }
};
exports.ApiCustomerExcel = ApiCustomerExcel;
exports.ApiCustomerExcel = ApiCustomerExcel = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof customer_repository_1.CustomerRepository !== "undefined" && customer_repository_1.CustomerRepository) === "function" ? _a : Object])
], ApiCustomerExcel);


/***/ }),
/* 263 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.excelOneSheetWorkbook = void 0;
const exceljs_1 = __webpack_require__(264);
const object_helper_1 = __webpack_require__(85);
const excelOneSheetWorkbook = (params) => {
    const { headerSheet, footerSheet, rows, layout, columns } = params;
    const sheetName = layout.sheetName || 'SHEET';
    const workbook = new exceljs_1.Workbook();
    const worksheet = workbook.addWorksheet(sheetName, {
        views: [{ showGridLines: false }],
        pageSetup: {
            orientation: 'portrait',
            fitToPage: true,
            margins: {
                left: 0.25,
                right: 0.25,
                top: 0.75,
                bottom: 0.75,
                header: 0.3,
                footer: 0.3,
            },
        },
        properties: { tabColor: { argb: '6B5B95' }, defaultRowHeight: 18.75 },
    });
    worksheet.columns = columns.map((col) => ({
        key: col.key,
        width: col.width,
    }));
    if (headerSheet && typeof headerSheet === 'function') {
        headerSheet(worksheet);
    }
    rows.forEach((row, index) => {
        row.data.forEach((item) => {
            const currentRow = worksheet.addRow(item);
            currentRow.eachCell((cell) => {
                var _a;
                const keyColumn = cell._column._key;
                const style = {
                    border: {
                        top: { style: 'thin' },
                        left: { style: 'thin' },
                        bottom: { style: 'thin' },
                        right: { style: 'thin' },
                    },
                    font: {
                        size: 12,
                        bold: false,
                        name: 'Times New Roman',
                    },
                    alignment: { wrapText: true, vertical: 'middle' },
                };
                const styleAll = row.style['_all'] || {};
                const styleCurrent = ((_a = row.style) === null || _a === void 0 ? void 0 : _a[keyColumn]) || {};
                (0, object_helper_1.mergeObject)(style, styleAll, styleCurrent);
                if (style.mergeCells) {
                    const { value } = cell;
                    const endRow = Number(cell.row);
                    const startRow = endRow - (style.mergeCells.rowspan - 1);
                    const startColumn = Number(cell.col);
                    const endColumn = startColumn + (style.mergeCells.colspan - 1);
                    worksheet.mergeCells(startRow, startColumn, endRow, endColumn);
                    cell = worksheet.getCell(startRow, startColumn);
                    cell.value = value;
                }
                cell.style = style;
            });
        });
    });
    if (footerSheet && typeof footerSheet === 'function') {
        footerSheet(worksheet);
    }
    return workbook;
};
exports.excelOneSheetWorkbook = excelOneSheetWorkbook;


/***/ }),
/* 264 */
/***/ ((module) => {

module.exports = require("exceljs");

/***/ }),
/* 265 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiCustomerService = void 0;
const common_1 = __webpack_require__(3);
const cache_data_service_1 = __webpack_require__(30);
const exception_filter_1 = __webpack_require__(9);
const customer_payment_repository_1 = __webpack_require__(97);
const customer_repository_1 = __webpack_require__(100);
const organization_repository_1 = __webpack_require__(34);
const ticket_repository_1 = __webpack_require__(138);
const socket_emit_service_1 = __webpack_require__(204);
let ApiCustomerService = class ApiCustomerService {
    constructor(socketEmitService, cacheDataService, customerRepository, customerPaymentRepository, organizationRepository, ticketRepository) {
        this.socketEmitService = socketEmitService;
        this.cacheDataService = cacheDataService;
        this.customerRepository = customerRepository;
        this.customerPaymentRepository = customerPaymentRepository;
        this.organizationRepository = organizationRepository;
        this.ticketRepository = ticketRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { data, total } = await this.customerRepository.pagination({
            page,
            limit,
            relation,
            condition: {
                oid,
                isActive: filter === null || filter === void 0 ? void 0 : filter.isActive,
                $OR: (filter === null || filter === void 0 ? void 0 : filter.searchText)
                    ? [{ fullName: { LIKE: filter.searchText } }, { phone: { LIKE: filter.searchText } }]
                    : undefined,
                debt: filter === null || filter === void 0 ? void 0 : filter.debt,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            sort,
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getMany(oid, query) {
        const { limit, filter } = query;
        const data = await this.customerRepository.findMany({
            condition: {
                oid,
                isActive: filter === null || filter === void 0 ? void 0 : filter.isActive,
                $OR: (filter === null || filter === void 0 ? void 0 : filter.searchText)
                    ? [{ fullName: { LIKE: filter.searchText } }, { phone: { LIKE: filter.searchText } }]
                    : undefined,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            limit,
        });
        return { data };
    }
    async getOne(oid, id, query) {
        const customer = await this.customerRepository.findOneBy({ oid, id });
        if (!customer)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        return { data: { customer } };
    }
    async createOne(oid, body) {
        const customer = await this.customerRepository.insertOneFullFieldAndReturnEntity(Object.assign(Object.assign({}, body), { oid, debt: 0 }));
        this.socketEmitService.customerUpsert(oid, { customer });
        return { data: { customer } };
    }
    async updateOne(oid, id, body) {
        const [customer] = await this.customerRepository.updateAndReturnEntity({ oid, id }, body);
        if (!customer) {
            throw exception_filter_1.BusinessException.create({
                message: 'error.Database.UpdateFailed',
                details: 'Customer',
            });
        }
        this.socketEmitService.customerUpsert(oid, { customer });
        return { data: { customer } };
    }
    async destroyOne(options) {
        const { oid, customerId, organization } = options;
        const countTicket = await this.ticketRepository.countBy({ oid, customerId });
        if (countTicket > 0) {
            return {
                data: { countTicket },
                success: false,
            };
        }
        await Promise.allSettled([
            this.customerRepository.delete({ oid, id: customerId }),
            this.customerPaymentRepository.delete({ oid, customerId }),
        ]);
        organization.dataVersionParse.customer += 1;
        await this.organizationRepository.update({ id: oid }, {
            dataVersion: JSON.stringify(organization.dataVersionParse),
        });
        this.cacheDataService.clearOrganization(oid);
        return { data: { countTicket: 0, customerId } };
    }
};
exports.ApiCustomerService = ApiCustomerService;
exports.ApiCustomerService = ApiCustomerService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _a : Object, typeof (_b = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _b : Object, typeof (_c = typeof customer_repository_1.CustomerRepository !== "undefined" && customer_repository_1.CustomerRepository) === "function" ? _c : Object, typeof (_d = typeof customer_payment_repository_1.CustomerPaymentRepository !== "undefined" && customer_payment_repository_1.CustomerPaymentRepository) === "function" ? _d : Object, typeof (_e = typeof organization_repository_1.OrganizationRepository !== "undefined" && organization_repository_1.OrganizationRepository) === "function" ? _e : Object, typeof (_f = typeof ticket_repository_1.TicketRepository !== "undefined" && ticket_repository_1.TicketRepository) === "function" ? _f : Object])
], ApiCustomerService);


/***/ }),
/* 266 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiDistributorPaymentModule = void 0;
const common_1 = __webpack_require__(3);
const api_distributor_payment_controller_1 = __webpack_require__(267);
const api_distributor_payment_service_1 = __webpack_require__(268);
let ApiDistributorPaymentModule = class ApiDistributorPaymentModule {
};
exports.ApiDistributorPaymentModule = ApiDistributorPaymentModule;
exports.ApiDistributorPaymentModule = ApiDistributorPaymentModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_distributor_payment_controller_1.ApiDistributorPaymentController],
        providers: [api_distributor_payment_service_1.ApiDistributorPaymentService],
    })
], ApiDistributorPaymentModule);


/***/ }),
/* 267 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiDistributorPaymentController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const permission_guard_1 = __webpack_require__(87);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_distributor_payment_service_1 = __webpack_require__(268);
const request_1 = __webpack_require__(269);
let ApiDistributorPaymentController = class ApiDistributorPaymentController {
    constructor(apiDistributorPaymentService) {
        this.apiDistributorPaymentService = apiDistributorPaymentService;
    }
    pagination({ oid }, query) {
        return this.apiDistributorPaymentService.pagination(oid, query);
    }
    startPayDebt({ oid }, body) {
        return this.apiDistributorPaymentService.startPayDebt(oid, body);
    }
};
exports.ApiDistributorPaymentController = ApiDistributorPaymentController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.DISTRIBUTOR_PAYMENT_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.DistributorPaymentPaginationQuery !== "undefined" && request_1.DistributorPaymentPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiDistributorPaymentController.prototype, "pagination", null);
__decorate([
    (0, common_1.Post)('pay-debt'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.DISTRIBUTOR_PAYMENT_PAY_DEBT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.DistributorPaymentPayDebtBody !== "undefined" && request_1.DistributorPaymentPayDebtBody) === "function" ? _e : Object]),
    __metadata("design:returntype", void 0)
], ApiDistributorPaymentController.prototype, "startPayDebt", null);
exports.ApiDistributorPaymentController = ApiDistributorPaymentController = __decorate([
    (0, swagger_1.ApiTags)('Distributor Debt'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('distributor-payment'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_distributor_payment_service_1.ApiDistributorPaymentService !== "undefined" && api_distributor_payment_service_1.ApiDistributorPaymentService) === "function" ? _a : Object])
], ApiDistributorPaymentController);


/***/ }),
/* 268 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiDistributorPaymentService = void 0;
const common_1 = __webpack_require__(3);
const distributor_payment_repository_1 = __webpack_require__(101);
const distributor_repository_1 = __webpack_require__(102);
let ApiDistributorPaymentService = class ApiDistributorPaymentService {
    constructor(distributorPaymentRepository, distributorRepository) {
        this.distributorPaymentRepository = distributorPaymentRepository;
        this.distributorRepository = distributorRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort } = query;
        const { data, total } = await this.distributorPaymentRepository.pagination({
            page,
            limit,
            condition: {
                oid,
                distributorId: filter === null || filter === void 0 ? void 0 : filter.distributorId,
            },
            sort,
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async startPayDebt(oid, body) {
        try {
            const { distributorId } = await this.distributorPaymentRepository.startPayDebt({
                oid,
                distributorId: body.distributorId,
                time: Date.now(),
                receiptPayments: body.receiptPayments,
                note: body.note,
            });
            const distributor = await this.distributorRepository.findOneBy({ id: distributorId });
            return { data: { distributor } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
};
exports.ApiDistributorPaymentService = ApiDistributorPaymentService;
exports.ApiDistributorPaymentService = ApiDistributorPaymentService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof distributor_payment_repository_1.DistributorPaymentRepository !== "undefined" && distributor_payment_repository_1.DistributorPaymentRepository) === "function" ? _a : Object, typeof (_b = typeof distributor_repository_1.DistributorRepository !== "undefined" && distributor_repository_1.DistributorRepository) === "function" ? _b : Object])
], ApiDistributorPaymentService);


/***/ }),
/* 269 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(270), exports);
__exportStar(__webpack_require__(272), exports);


/***/ }),
/* 270 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DistributorPaymentGetOneQuery = exports.DistributorPaymentGetManyQuery = exports.DistributorPaymentPaginationQuery = exports.DistributorPaymentGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const distributor_payment_options_1 = __webpack_require__(271);
class DistributorPaymentGetQuery {
}
exports.DistributorPaymentGetQuery = DistributorPaymentGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({}),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(distributor_payment_options_1.DistributorPaymentRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof distributor_payment_options_1.DistributorPaymentRelationQuery !== "undefined" && distributor_payment_options_1.DistributorPaymentRelationQuery) === "function" ? _a : Object)
], DistributorPaymentGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            distributorId: 1,
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(distributor_payment_options_1.DistributorPaymentFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof distributor_payment_options_1.DistributorPaymentFilterQuery !== "undefined" && distributor_payment_options_1.DistributorPaymentFilterQuery) === "function" ? _b : Object)
], DistributorPaymentGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            id: 'ASC',
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(distributor_payment_options_1.DistributorPaymentSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof distributor_payment_options_1.DistributorPaymentSortQuery !== "undefined" && distributor_payment_options_1.DistributorPaymentSortQuery) === "function" ? _c : Object)
], DistributorPaymentGetQuery.prototype, "sort", void 0);
class DistributorPaymentPaginationQuery extends (0, swagger_1.IntersectionType)(DistributorPaymentGetQuery, query_1.PaginationQuery) {
}
exports.DistributorPaymentPaginationQuery = DistributorPaymentPaginationQuery;
class DistributorPaymentGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(DistributorPaymentGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.DistributorPaymentGetManyQuery = DistributorPaymentGetManyQuery;
class DistributorPaymentGetOneQuery extends (0, swagger_1.PickType)(DistributorPaymentGetQuery, [
    'relation',
]) {
}
exports.DistributorPaymentGetOneQuery = DistributorPaymentGetOneQuery;


/***/ }),
/* 271 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DistributorPaymentSortQuery = exports.DistributorPaymentFilterQuery = exports.DistributorPaymentRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
class DistributorPaymentRelationQuery {
}
exports.DistributorPaymentRelationQuery = DistributorPaymentRelationQuery;
class DistributorPaymentFilterQuery {
}
exports.DistributorPaymentFilterQuery = DistributorPaymentFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], DistributorPaymentFilterQuery.prototype, "distributorId", void 0);
class DistributorPaymentSortQuery extends query_1.SortQuery {
}
exports.DistributorPaymentSortQuery = DistributorPaymentSortQuery;


/***/ }),
/* 272 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DistributorPaymentPayDebtBody = exports.ReceiptPayments = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class ReceiptPayments {
}
exports.ReceiptPayments = ReceiptPayments;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptPayments.prototype, "receiptId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptPayments.prototype, "money", void 0);
class DistributorPaymentPayDebtBody {
}
exports.DistributorPaymentPayDebtBody = DistributorPaymentPayDebtBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 12 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], DistributorPaymentPayDebtBody.prototype, "distributorId", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Khách hàng còn bo thêm tiền' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], DistributorPaymentPayDebtBody.prototype, "note", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: ReceiptPayments,
        isArray: true,
        example: [
            { receiptId: 12, money: 10000 },
            { receiptId: 13, money: 200000 },
        ],
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_transformer_1.Type)(() => ReceiptPayments),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], DistributorPaymentPayDebtBody.prototype, "receiptPayments", void 0);


/***/ }),
/* 273 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiDistributorModule = void 0;
const common_1 = __webpack_require__(3);
const api_distributor_controller_1 = __webpack_require__(274);
const api_distributor_service_1 = __webpack_require__(275);
let ApiDistributorModule = class ApiDistributorModule {
};
exports.ApiDistributorModule = ApiDistributorModule;
exports.ApiDistributorModule = ApiDistributorModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_distributor_controller_1.ApiDistributorController],
        providers: [api_distributor_service_1.ApiDistributorService],
    })
], ApiDistributorModule);


/***/ }),
/* 274 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiDistributorController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_distributor_service_1 = __webpack_require__(275);
const request_1 = __webpack_require__(276);
let ApiDistributorController = class ApiDistributorController {
    constructor(apiDistributorService) {
        this.apiDistributorService = apiDistributorService;
    }
    pagination({ oid }, query) {
        return this.apiDistributorService.pagination(oid, query);
    }
    list({ oid }, query) {
        return this.apiDistributorService.getMany(oid, query);
    }
    findOne({ oid }, { id }) {
        return this.apiDistributorService.getOne(oid, id);
    }
    async createOne({ oid }, body) {
        return await this.apiDistributorService.createOne(oid, body);
    }
    async updateOne({ oid }, { id }, body) {
        return await this.apiDistributorService.updateOne(oid, id, body);
    }
    async destroyOne({ oid }, { id }) {
        return await this.apiDistributorService.destroyOne(oid, id);
    }
};
exports.ApiDistributorController = ApiDistributorController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.DISTRIBUTOR_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.DistributorPaginationQuery !== "undefined" && request_1.DistributorPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiDistributorController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.DISTRIBUTOR_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.DistributorGetManyQuery !== "undefined" && request_1.DistributorGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", void 0)
], ApiDistributorController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.DISTRIBUTOR_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object]),
    __metadata("design:returntype", void 0)
], ApiDistributorController.prototype, "findOne", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.DISTRIBUTOR_CREATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_h = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _h : Object, typeof (_j = typeof request_1.DistributorCreateBody !== "undefined" && request_1.DistributorCreateBody) === "function" ? _j : Object]),
    __metadata("design:returntype", Promise)
], ApiDistributorController.prototype, "createOne", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.DISTRIBUTOR_UPDATE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_k = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _k : Object, typeof (_l = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _l : Object, typeof (_m = typeof request_1.DistributorUpdateBody !== "undefined" && request_1.DistributorUpdateBody) === "function" ? _m : Object]),
    __metadata("design:returntype", Promise)
], ApiDistributorController.prototype, "updateOne", null);
__decorate([
    (0, common_1.Delete)('destroy/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.DISTRIBUTOR_DELETE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_o = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _o : Object, typeof (_p = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _p : Object]),
    __metadata("design:returntype", Promise)
], ApiDistributorController.prototype, "destroyOne", null);
exports.ApiDistributorController = ApiDistributorController = __decorate([
    (0, swagger_1.ApiTags)('Distributor'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('distributor'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_distributor_service_1.ApiDistributorService !== "undefined" && api_distributor_service_1.ApiDistributorService) === "function" ? _a : Object])
], ApiDistributorController);


/***/ }),
/* 275 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiDistributorService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const distributor_payment_repository_1 = __webpack_require__(101);
const distributor_repository_1 = __webpack_require__(102);
const receipt_repository_1 = __webpack_require__(124);
const socket_emit_service_1 = __webpack_require__(204);
let ApiDistributorService = class ApiDistributorService {
    constructor(socketEmitService, distributorRepository, distributorPaymentRepository, receiptRepository) {
        this.socketEmitService = socketEmitService;
        this.distributorRepository = distributorRepository;
        this.distributorPaymentRepository = distributorPaymentRepository;
        this.receiptRepository = receiptRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { data, total } = await this.distributorRepository.pagination({
            page,
            limit,
            relation,
            condition: {
                oid,
                isActive: filter === null || filter === void 0 ? void 0 : filter.isActive,
                $OR: (filter === null || filter === void 0 ? void 0 : filter.searchText)
                    ? [{ fullName: { LIKE: filter.searchText } }, { phone: { LIKE: filter.searchText } }]
                    : undefined,
                debt: filter === null || filter === void 0 ? void 0 : filter.debt,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            sort,
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getMany(oid, query) {
        const { limit, filter, relation } = query;
        const data = await this.distributorRepository.findMany({
            relation,
            condition: {
                oid,
                isActive: filter === null || filter === void 0 ? void 0 : filter.isActive,
                $OR: (filter === null || filter === void 0 ? void 0 : filter.searchText)
                    ? [{ fullName: { LIKE: filter.searchText } }, { phone: { LIKE: filter.searchText } }]
                    : undefined,
                debt: filter === null || filter === void 0 ? void 0 : filter.debt,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            limit,
        });
        return { data };
    }
    async getOne(oid, id) {
        const distributor = await this.distributorRepository.findOneBy({ oid, id });
        if (!distributor)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        return { data: { distributor } };
    }
    async createOne(oid, body) {
        const distributor = await this.distributorRepository.insertOneFullFieldAndReturnEntity(Object.assign(Object.assign({}, body), { oid, debt: 0 }));
        this.socketEmitService.distributorUpsert(oid, { distributor });
        return { data: { distributor } };
    }
    async updateOne(oid, id, body) {
        const [distributor] = await this.distributorRepository.updateAndReturnEntity({ oid, id }, body);
        if (!distributor) {
            throw exception_filter_1.BusinessException.create({
                message: 'error.Database.UpdateFailed',
                details: 'Distributor',
            });
        }
        this.socketEmitService.distributorUpsert(oid, { distributor });
        return { data: { distributor } };
    }
    async destroyOne(oid, id) {
        const countReceipt = await this.receiptRepository.countBy({ oid, distributorId: id });
        if (countReceipt > 0) {
            return {
                data: { countReceipt },
                success: false,
            };
        }
        await Promise.allSettled([
            this.distributorRepository.delete({ oid, id }),
            this.distributorPaymentRepository.delete({ oid, distributorId: id }),
        ]);
        return { data: { countReceipt: 0, distributorId: id } };
    }
};
exports.ApiDistributorService = ApiDistributorService;
exports.ApiDistributorService = ApiDistributorService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _a : Object, typeof (_b = typeof distributor_repository_1.DistributorRepository !== "undefined" && distributor_repository_1.DistributorRepository) === "function" ? _b : Object, typeof (_c = typeof distributor_payment_repository_1.DistributorPaymentRepository !== "undefined" && distributor_payment_repository_1.DistributorPaymentRepository) === "function" ? _c : Object, typeof (_d = typeof receipt_repository_1.ReceiptRepository !== "undefined" && receipt_repository_1.ReceiptRepository) === "function" ? _d : Object])
], ApiDistributorService);


/***/ }),
/* 276 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(277), exports);
__exportStar(__webpack_require__(278), exports);
__exportStar(__webpack_require__(279), exports);


/***/ }),
/* 277 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DistributorGetOneQuery = exports.DistributorGetManyQuery = exports.DistributorPaginationQuery = exports.DistributorGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const distributor_options_request_1 = __webpack_require__(278);
class DistributorGetQuery {
}
exports.DistributorGetQuery = DistributorGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(distributor_options_request_1.DistributorRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof distributor_options_request_1.DistributorRelationQuery !== "undefined" && distributor_options_request_1.DistributorRelationQuery) === "function" ? _a : Object)
], DistributorGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ isActive: 1, debt: { GT: 15000 } }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(distributor_options_request_1.DistributorFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof distributor_options_request_1.DistributorFilterQuery !== "undefined" && distributor_options_request_1.DistributorFilterQuery) === "function" ? _b : Object)
], DistributorGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ id: 'ASC' }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(distributor_options_request_1.DistributorSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof distributor_options_request_1.DistributorSortQuery !== "undefined" && distributor_options_request_1.DistributorSortQuery) === "function" ? _c : Object)
], DistributorGetQuery.prototype, "sort", void 0);
class DistributorPaginationQuery extends (0, swagger_1.IntersectionType)(DistributorGetQuery, query_1.PaginationQuery) {
}
exports.DistributorPaginationQuery = DistributorPaginationQuery;
class DistributorGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(DistributorGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.DistributorGetManyQuery = DistributorGetManyQuery;
class DistributorGetOneQuery extends (0, swagger_1.PickType)(DistributorGetQuery, ['relation']) {
}
exports.DistributorGetOneQuery = DistributorGetOneQuery;


/***/ }),
/* 278 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DistributorSortQuery = exports.DistributorFilterQuery = exports.DistributorRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const condition_number_1 = __webpack_require__(199);
const condition_timestamp_1 = __webpack_require__(201);
const query_1 = __webpack_require__(185);
class DistributorRelationQuery {
}
exports.DistributorRelationQuery = DistributorRelationQuery;
class DistributorFilterQuery {
}
exports.DistributorFilterQuery = DistributorFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], DistributorFilterQuery.prototype, "isActive", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], DistributorFilterQuery.prototype, "searchText", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => condition_number_1.ConditionNumber),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof condition_number_1.ConditionNumber !== "undefined" && condition_number_1.ConditionNumber) === "function" ? _a : Object)
], DistributorFilterQuery.prototype, "debt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => condition_timestamp_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof condition_timestamp_1.ConditionTimestamp !== "undefined" && condition_timestamp_1.ConditionTimestamp) === "function" ? _b : Object)
], DistributorFilterQuery.prototype, "updatedAt", void 0);
class DistributorSortQuery extends query_1.SortQuery {
}
exports.DistributorSortQuery = DistributorSortQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], DistributorSortQuery.prototype, "debt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], DistributorSortQuery.prototype, "fullName", void 0);


/***/ }),
/* 279 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DistributorUpdateBody = exports.DistributorCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
class DistributorCreateBody {
}
exports.DistributorCreateBody = DistributorCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Ngô Nhật Dương' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], DistributorCreateBody.prototype, "fullName", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ default: '0986123456' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Validate)(class_validator_custom_1.IsPhone),
    __metadata("design:type", String)
], DistributorCreateBody.prototype, "phone", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Tỉnh Lâm Đồng' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], DistributorCreateBody.prototype, "addressProvince", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Huyện Cát Tiên' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], DistributorCreateBody.prototype, "addressDistrict", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Xã Tiên Hoàng' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], DistributorCreateBody.prototype, "addressWard", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Thôn Trần Lệ Mai' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], DistributorCreateBody.prototype, "addressStreet", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Khách hàng không' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], DistributorCreateBody.prototype, "note", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], DistributorCreateBody.prototype, "isActive", void 0);
class DistributorUpdateBody extends (0, swagger_1.PartialType)(DistributorCreateBody) {
}
exports.DistributorUpdateBody = DistributorUpdateBody;


/***/ }),
/* 280 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiLaboratoryGroupModule = void 0;
const common_1 = __webpack_require__(3);
const api_laboratory_group_controller_1 = __webpack_require__(281);
const api_laboratory_group_service_1 = __webpack_require__(282);
let ApiLaboratoryGroupModule = class ApiLaboratoryGroupModule {
};
exports.ApiLaboratoryGroupModule = ApiLaboratoryGroupModule;
exports.ApiLaboratoryGroupModule = ApiLaboratoryGroupModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_laboratory_group_controller_1.ApiLaboratoryGroupController],
        providers: [api_laboratory_group_service_1.ApiLaboratoryGroupService],
    })
], ApiLaboratoryGroupModule);


/***/ }),
/* 281 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiLaboratoryGroupController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_laboratory_group_service_1 = __webpack_require__(282);
const request_1 = __webpack_require__(283);
let ApiLaboratoryGroupController = class ApiLaboratoryGroupController {
    constructor(apiLaboratoryGroupService) {
        this.apiLaboratoryGroupService = apiLaboratoryGroupService;
    }
    pagination({ oid }, query) {
        return this.apiLaboratoryGroupService.pagination(oid, query);
    }
    list({ oid }, query) {
        return this.apiLaboratoryGroupService.getMany(oid, query);
    }
    findOne({ oid }, { id }) {
        return this.apiLaboratoryGroupService.getOne(oid, id);
    }
    async createOne({ oid }, body) {
        return await this.apiLaboratoryGroupService.createOne(oid, body);
    }
    async updateOne({ oid }, { id }, body) {
        return await this.apiLaboratoryGroupService.updateOne(oid, id, body);
    }
    async destroyOne({ oid }, { id }) {
        return await this.apiLaboratoryGroupService.destroyOne(oid, id);
    }
    async replaceAll({ oid }, body) {
        return await this.apiLaboratoryGroupService.replaceAll(oid, body);
    }
    async systemList() {
        return await this.apiLaboratoryGroupService.systemList();
    }
};
exports.ApiLaboratoryGroupController = ApiLaboratoryGroupController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.LaboratoryGroupPaginationQuery !== "undefined" && request_1.LaboratoryGroupPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiLaboratoryGroupController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.LaboratoryGroupGetManyQuery !== "undefined" && request_1.LaboratoryGroupGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", void 0)
], ApiLaboratoryGroupController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object]),
    __metadata("design:returntype", void 0)
], ApiLaboratoryGroupController.prototype, "findOne", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_LABORATORY),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_h = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _h : Object, typeof (_j = typeof request_1.LaboratoryGroupCreateBody !== "undefined" && request_1.LaboratoryGroupCreateBody) === "function" ? _j : Object]),
    __metadata("design:returntype", Promise)
], ApiLaboratoryGroupController.prototype, "createOne", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_LABORATORY),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_k = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _k : Object, typeof (_l = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _l : Object, typeof (_m = typeof request_1.LaboratoryGroupUpdateBody !== "undefined" && request_1.LaboratoryGroupUpdateBody) === "function" ? _m : Object]),
    __metadata("design:returntype", Promise)
], ApiLaboratoryGroupController.prototype, "updateOne", null);
__decorate([
    (0, common_1.Delete)('destroy/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_LABORATORY),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_o = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _o : Object, typeof (_p = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _p : Object]),
    __metadata("design:returntype", Promise)
], ApiLaboratoryGroupController.prototype, "destroyOne", null);
__decorate([
    (0, common_1.Put)('replace-all'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_LABORATORY),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_q = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _q : Object, typeof (_r = typeof request_1.LaboratoryGroupReplaceAllBody !== "undefined" && request_1.LaboratoryGroupReplaceAllBody) === "function" ? _r : Object]),
    __metadata("design:returntype", Promise)
], ApiLaboratoryGroupController.prototype, "replaceAll", null);
__decorate([
    (0, common_1.Get)('system-list'),
    (0, user_guard_1.IsUser)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], ApiLaboratoryGroupController.prototype, "systemList", null);
exports.ApiLaboratoryGroupController = ApiLaboratoryGroupController = __decorate([
    (0, swagger_1.ApiTags)('LaboratoryGroup'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('laboratory-group'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_laboratory_group_service_1.ApiLaboratoryGroupService !== "undefined" && api_laboratory_group_service_1.ApiLaboratoryGroupService) === "function" ? _a : Object])
], ApiLaboratoryGroupController);


/***/ }),
/* 282 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiLaboratoryGroupService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const laboratory_group_repository_1 = __webpack_require__(104);
let ApiLaboratoryGroupService = class ApiLaboratoryGroupService {
    constructor(laboratoryGroupRepository) {
        this.laboratoryGroupRepository = laboratoryGroupRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { data, total } = await this.laboratoryGroupRepository.pagination({
            page,
            limit,
            relation,
            condition: {
                oid,
            },
            sort,
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getMany(oid, query) {
        const { limit, filter, relation, sort } = query;
        const data = await this.laboratoryGroupRepository.findMany({
            relation,
            condition: {
                oid,
            },
            limit,
            sort,
        });
        return { data };
    }
    async getOne(oid, id) {
        const laboratoryGroup = await this.laboratoryGroupRepository.findOneBy({ oid, id });
        if (!laboratoryGroup)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        return { data: { laboratoryGroup } };
    }
    async createOne(oid, body) {
        const laboratoryGroup = await this.laboratoryGroupRepository.insertOneFullFieldAndReturnEntity(Object.assign(Object.assign({}, body), { oid }));
        return { data: { laboratoryGroup } };
    }
    async updateOne(oid, id, body) {
        const laboratoryGroupList = await this.laboratoryGroupRepository.updateAndReturnEntity({ id, oid }, body);
        return { data: { laboratoryGroup: laboratoryGroupList[0] } };
    }
    async destroyOne(oid, id) {
        const affected = await this.laboratoryGroupRepository.delete({ oid, id });
        if (affected === 0)
            throw new exception_filter_1.BusinessException('error.Database.DeleteFailed');
        return { data: true };
    }
    async replaceAll(oid, body) {
        await this.laboratoryGroupRepository.replaceAll(oid, body.laboratoryGroupReplaceAll);
        return { data: true };
    }
    async systemList() {
        const data = await this.laboratoryGroupRepository.findMany({
            condition: { oid: 1 },
        });
        return { data };
    }
};
exports.ApiLaboratoryGroupService = ApiLaboratoryGroupService;
exports.ApiLaboratoryGroupService = ApiLaboratoryGroupService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof laboratory_group_repository_1.LaboratoryGroupRepository !== "undefined" && laboratory_group_repository_1.LaboratoryGroupRepository) === "function" ? _a : Object])
], ApiLaboratoryGroupService);


/***/ }),
/* 283 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(284), exports);
__exportStar(__webpack_require__(285), exports);
__exportStar(__webpack_require__(286), exports);


/***/ }),
/* 284 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LaboratoryGroupGetOneQuery = exports.LaboratoryGroupGetManyQuery = exports.LaboratoryGroupPaginationQuery = exports.LaboratoryGroupGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const laboratory_group_options_request_1 = __webpack_require__(285);
class LaboratoryGroupGetQuery {
}
exports.LaboratoryGroupGetQuery = LaboratoryGroupGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(laboratory_group_options_request_1.LaboratoryGroupRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof laboratory_group_options_request_1.LaboratoryGroupRelationQuery !== "undefined" && laboratory_group_options_request_1.LaboratoryGroupRelationQuery) === "function" ? _a : Object)
], LaboratoryGroupGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ printHtmlId: 0 }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(laboratory_group_options_request_1.LaboratoryGroupFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof laboratory_group_options_request_1.LaboratoryGroupFilterQuery !== "undefined" && laboratory_group_options_request_1.LaboratoryGroupFilterQuery) === "function" ? _b : Object)
], LaboratoryGroupGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ id: 'ASC' }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(laboratory_group_options_request_1.LaboratoryGroupSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof laboratory_group_options_request_1.LaboratoryGroupSortQuery !== "undefined" && laboratory_group_options_request_1.LaboratoryGroupSortQuery) === "function" ? _c : Object)
], LaboratoryGroupGetQuery.prototype, "sort", void 0);
class LaboratoryGroupPaginationQuery extends (0, swagger_1.IntersectionType)(LaboratoryGroupGetQuery, query_1.PaginationQuery) {
}
exports.LaboratoryGroupPaginationQuery = LaboratoryGroupPaginationQuery;
class LaboratoryGroupGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(LaboratoryGroupGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.LaboratoryGroupGetManyQuery = LaboratoryGroupGetManyQuery;
class LaboratoryGroupGetOneQuery extends (0, swagger_1.PickType)(LaboratoryGroupGetQuery, ['relation']) {
}
exports.LaboratoryGroupGetOneQuery = LaboratoryGroupGetOneQuery;


/***/ }),
/* 285 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LaboratoryGroupSortQuery = exports.LaboratoryGroupFilterQuery = exports.LaboratoryGroupRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
class LaboratoryGroupRelationQuery {
}
exports.LaboratoryGroupRelationQuery = LaboratoryGroupRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], LaboratoryGroupRelationQuery.prototype, "printHtml", void 0);
class LaboratoryGroupFilterQuery {
}
exports.LaboratoryGroupFilterQuery = LaboratoryGroupFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], LaboratoryGroupFilterQuery.prototype, "printHtmlId", void 0);
class LaboratoryGroupSortQuery extends query_1.SortQuery {
}
exports.LaboratoryGroupSortQuery = LaboratoryGroupSortQuery;


/***/ }),
/* 286 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LaboratoryGroupReplaceAllBody = exports.LaboratoryGroupReplaceBody = exports.LaboratoryGroupUpdateBody = exports.LaboratoryGroupCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class LaboratoryGroupCreateBody {
}
exports.LaboratoryGroupCreateBody = LaboratoryGroupCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Nhóm ABC' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], LaboratoryGroupCreateBody.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], LaboratoryGroupCreateBody.prototype, "printHtmlId", void 0);
class LaboratoryGroupUpdateBody extends (0, swagger_1.PartialType)(LaboratoryGroupCreateBody) {
}
exports.LaboratoryGroupUpdateBody = LaboratoryGroupUpdateBody;
class LaboratoryGroupReplaceBody {
}
exports.LaboratoryGroupReplaceBody = LaboratoryGroupReplaceBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 2 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", Number)
], LaboratoryGroupReplaceBody.prototype, "id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Nhóm ABC' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], LaboratoryGroupReplaceBody.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], LaboratoryGroupReplaceBody.prototype, "printHtmlId", void 0);
class LaboratoryGroupReplaceAllBody {
}
exports.LaboratoryGroupReplaceAllBody = LaboratoryGroupReplaceAllBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: LaboratoryGroupReplaceBody, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => LaboratoryGroupReplaceBody),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], LaboratoryGroupReplaceAllBody.prototype, "laboratoryGroupReplaceAll", void 0);


/***/ }),
/* 287 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiLaboratoryKitModule = void 0;
const common_1 = __webpack_require__(3);
const api_laboratory_kit_controller_1 = __webpack_require__(288);
const api_laboratory_kit_service_1 = __webpack_require__(289);
let ApiLaboratoryKitModule = class ApiLaboratoryKitModule {
};
exports.ApiLaboratoryKitModule = ApiLaboratoryKitModule;
exports.ApiLaboratoryKitModule = ApiLaboratoryKitModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_laboratory_kit_controller_1.ApiLaboratoryKitController],
        providers: [api_laboratory_kit_service_1.ApiLaboratoryKitService],
    })
], ApiLaboratoryKitModule);


/***/ }),
/* 288 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiLaboratoryKitController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_laboratory_kit_service_1 = __webpack_require__(289);
const request_1 = __webpack_require__(290);
let ApiLaboratoryKitController = class ApiLaboratoryKitController {
    constructor(apiLaboratoryKitService) {
        this.apiLaboratoryKitService = apiLaboratoryKitService;
    }
    pagination({ oid }, query) {
        return this.apiLaboratoryKitService.pagination(oid, query);
    }
    list({ oid }, query) {
        return this.apiLaboratoryKitService.getMany(oid, query);
    }
    findOne({ oid }, { id }) {
        return this.apiLaboratoryKitService.getOne(oid, id);
    }
    async createOne({ oid }, body) {
        return await this.apiLaboratoryKitService.createOne(oid, body);
    }
    async updateOne({ oid }, { id }, body) {
        return await this.apiLaboratoryKitService.updateOne(oid, id, body);
    }
    async destroyOne({ oid }, { id }) {
        return await this.apiLaboratoryKitService.destroyOne(oid, id);
    }
};
exports.ApiLaboratoryKitController = ApiLaboratoryKitController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.LaboratoryKitPaginationQuery !== "undefined" && request_1.LaboratoryKitPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiLaboratoryKitController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.LaboratoryKitGetManyQuery !== "undefined" && request_1.LaboratoryKitGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", void 0)
], ApiLaboratoryKitController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object]),
    __metadata("design:returntype", void 0)
], ApiLaboratoryKitController.prototype, "findOne", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_LABORATORY),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_h = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _h : Object, typeof (_j = typeof request_1.LaboratoryKitCreateBody !== "undefined" && request_1.LaboratoryKitCreateBody) === "function" ? _j : Object]),
    __metadata("design:returntype", Promise)
], ApiLaboratoryKitController.prototype, "createOne", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_LABORATORY),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_k = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _k : Object, typeof (_l = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _l : Object, typeof (_m = typeof request_1.LaboratoryKitUpdateBody !== "undefined" && request_1.LaboratoryKitUpdateBody) === "function" ? _m : Object]),
    __metadata("design:returntype", Promise)
], ApiLaboratoryKitController.prototype, "updateOne", null);
__decorate([
    (0, common_1.Delete)('destroy/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_LABORATORY),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_o = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _o : Object, typeof (_p = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _p : Object]),
    __metadata("design:returntype", Promise)
], ApiLaboratoryKitController.prototype, "destroyOne", null);
exports.ApiLaboratoryKitController = ApiLaboratoryKitController = __decorate([
    (0, swagger_1.ApiTags)('LaboratoryKit'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('laboratory-kit'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_laboratory_kit_service_1.ApiLaboratoryKitService !== "undefined" && api_laboratory_kit_service_1.ApiLaboratoryKitService) === "function" ? _a : Object])
], ApiLaboratoryKitController);


/***/ }),
/* 289 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiLaboratoryKitService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const laboratory_kit_repository_1 = __webpack_require__(105);
let ApiLaboratoryKitService = class ApiLaboratoryKitService {
    constructor(laboratoryKitRepository) {
        this.laboratoryKitRepository = laboratoryKitRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { data, total } = await this.laboratoryKitRepository.pagination({
            page,
            limit,
            relation,
            condition: {
                oid,
            },
            sort,
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getMany(oid, query) {
        const { limit, filter, relation, sort } = query;
        const data = await this.laboratoryKitRepository.findMany({
            relation,
            condition: {
                oid,
            },
            limit,
            sort,
        });
        return { data };
    }
    async getOne(oid, id) {
        const laboratoryKit = await this.laboratoryKitRepository.findOneBy({ oid, id });
        if (!laboratoryKit)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        return { data: { laboratoryKit } };
    }
    async createOne(oid, body) {
        const laboratoryKit = await this.laboratoryKitRepository.insertOneFullFieldAndReturnEntity(Object.assign(Object.assign({}, body), { oid }));
        return { data: { laboratoryKit } };
    }
    async updateOne(oid, id, body) {
        const laboratoryKitList = await this.laboratoryKitRepository.updateAndReturnEntity({ id, oid }, body);
        return { data: { laboratoryKit: laboratoryKitList[0] } };
    }
    async destroyOne(oid, id) {
        const affected = await this.laboratoryKitRepository.delete({ oid, id });
        if (affected === 0) {
            throw new exception_filter_1.BusinessException('error.Database.DeleteFailed');
        }
        return { data: true };
    }
};
exports.ApiLaboratoryKitService = ApiLaboratoryKitService;
exports.ApiLaboratoryKitService = ApiLaboratoryKitService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof laboratory_kit_repository_1.LaboratoryKitRepository !== "undefined" && laboratory_kit_repository_1.LaboratoryKitRepository) === "function" ? _a : Object])
], ApiLaboratoryKitService);


/***/ }),
/* 290 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(291), exports);
__exportStar(__webpack_require__(292), exports);
__exportStar(__webpack_require__(293), exports);


/***/ }),
/* 291 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LaboratoryKitGetOneQuery = exports.LaboratoryKitGetManyQuery = exports.LaboratoryKitPaginationQuery = exports.LaboratoryKitGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const laboratory_kit_options_request_1 = __webpack_require__(292);
class LaboratoryKitGetQuery {
}
exports.LaboratoryKitGetQuery = LaboratoryKitGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(laboratory_kit_options_request_1.LaboratoryKitRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof laboratory_kit_options_request_1.LaboratoryKitRelationQuery !== "undefined" && laboratory_kit_options_request_1.LaboratoryKitRelationQuery) === "function" ? _a : Object)
], LaboratoryKitGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({}),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(laboratory_kit_options_request_1.LaboratoryKitFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof laboratory_kit_options_request_1.LaboratoryKitFilterQuery !== "undefined" && laboratory_kit_options_request_1.LaboratoryKitFilterQuery) === "function" ? _b : Object)
], LaboratoryKitGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ id: 'ASC' }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(laboratory_kit_options_request_1.LaboratoryKitSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof laboratory_kit_options_request_1.LaboratoryKitSortQuery !== "undefined" && laboratory_kit_options_request_1.LaboratoryKitSortQuery) === "function" ? _c : Object)
], LaboratoryKitGetQuery.prototype, "sort", void 0);
class LaboratoryKitPaginationQuery extends (0, swagger_1.IntersectionType)(LaboratoryKitGetQuery, query_1.PaginationQuery) {
}
exports.LaboratoryKitPaginationQuery = LaboratoryKitPaginationQuery;
class LaboratoryKitGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(LaboratoryKitGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.LaboratoryKitGetManyQuery = LaboratoryKitGetManyQuery;
class LaboratoryKitGetOneQuery extends (0, swagger_1.PickType)(LaboratoryKitGetQuery, ['relation']) {
}
exports.LaboratoryKitGetOneQuery = LaboratoryKitGetOneQuery;


/***/ }),
/* 292 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LaboratoryKitSortQuery = exports.LaboratoryKitFilterQuery = exports.LaboratoryKitRelationQuery = void 0;
const query_1 = __webpack_require__(185);
class LaboratoryKitRelationQuery {
}
exports.LaboratoryKitRelationQuery = LaboratoryKitRelationQuery;
class LaboratoryKitFilterQuery {
}
exports.LaboratoryKitFilterQuery = LaboratoryKitFilterQuery;
class LaboratoryKitSortQuery extends query_1.SortQuery {
}
exports.LaboratoryKitSortQuery = LaboratoryKitSortQuery;


/***/ }),
/* 293 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LaboratoryKitUpdateBody = exports.LaboratoryKitCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class LaboratoryKitCreateBody {
}
exports.LaboratoryKitCreateBody = LaboratoryKitCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 105000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], LaboratoryKitCreateBody.prototype, "priority", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Nhóm ABC' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], LaboratoryKitCreateBody.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], LaboratoryKitCreateBody.prototype, "laboratoryIds", void 0);
class LaboratoryKitUpdateBody extends (0, swagger_1.PartialType)(LaboratoryKitCreateBody) {
}
exports.LaboratoryKitUpdateBody = LaboratoryKitUpdateBody;


/***/ }),
/* 294 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiLaboratoryModule = void 0;
const common_1 = __webpack_require__(3);
const api_laboratory_controller_1 = __webpack_require__(295);
const api_laboratory_service_1 = __webpack_require__(296);
let ApiLaboratoryModule = class ApiLaboratoryModule {
};
exports.ApiLaboratoryModule = ApiLaboratoryModule;
exports.ApiLaboratoryModule = ApiLaboratoryModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_laboratory_controller_1.ApiLaboratoryController],
        providers: [api_laboratory_service_1.ApiLaboratoryService],
    })
], ApiLaboratoryModule);


/***/ }),
/* 295 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiLaboratoryController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_laboratory_service_1 = __webpack_require__(296);
const request_1 = __webpack_require__(297);
let ApiLaboratoryController = class ApiLaboratoryController {
    constructor(apiLaboratoryService) {
        this.apiLaboratoryService = apiLaboratoryService;
    }
    pagination({ oid }, query) {
        return this.apiLaboratoryService.pagination(oid, query);
    }
    async list({ oid }, query) {
        return await this.apiLaboratoryService.getMany(oid, query);
    }
    async detail({ oid }, { id }, query) {
        return await this.apiLaboratoryService.getOne(oid, id, query);
    }
    async create({ oid }, body) {
        return await this.apiLaboratoryService.create(oid, body);
    }
    async update({ oid }, { id }, body) {
        return await this.apiLaboratoryService.update(oid, id, body);
    }
    async destroy({ oid }, { id }) {
        return await this.apiLaboratoryService.destroy(oid, id);
    }
    async systemList() {
        return await this.apiLaboratoryService.systemList();
    }
    async systemCopy({ oid }, body) {
        return await this.apiLaboratoryService.systemCopy(oid, body);
    }
};
exports.ApiLaboratoryController = ApiLaboratoryController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.LaboratoryPaginationQuery !== "undefined" && request_1.LaboratoryPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiLaboratoryController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.LaboratoryGetManyQuery !== "undefined" && request_1.LaboratoryGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", Promise)
], ApiLaboratoryController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_LABORATORY),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object, typeof (_h = typeof request_1.LaboratoryGetOneQuery !== "undefined" && request_1.LaboratoryGetOneQuery) === "function" ? _h : Object]),
    __metadata("design:returntype", Promise)
], ApiLaboratoryController.prototype, "detail", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_LABORATORY),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_j = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _j : Object, typeof (_k = typeof request_1.LaboratoryCreateBody !== "undefined" && request_1.LaboratoryCreateBody) === "function" ? _k : Object]),
    __metadata("design:returntype", Promise)
], ApiLaboratoryController.prototype, "create", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_LABORATORY),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_l = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _l : Object, typeof (_m = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _m : Object, typeof (_o = typeof request_1.LaboratoryUpdateBody !== "undefined" && request_1.LaboratoryUpdateBody) === "function" ? _o : Object]),
    __metadata("design:returntype", Promise)
], ApiLaboratoryController.prototype, "update", null);
__decorate([
    (0, common_1.Delete)('destroy/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_LABORATORY),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_p = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _p : Object, typeof (_q = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _q : Object]),
    __metadata("design:returntype", Promise)
], ApiLaboratoryController.prototype, "destroy", null);
__decorate([
    (0, common_1.Get)('system-list'),
    (0, user_guard_1.IsUser)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], ApiLaboratoryController.prototype, "systemList", null);
__decorate([
    (0, common_1.Post)('system-copy'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_LABORATORY),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_r = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _r : Object, typeof (_s = typeof request_1.LaboratorySystemCopyBody !== "undefined" && request_1.LaboratorySystemCopyBody) === "function" ? _s : Object]),
    __metadata("design:returntype", Promise)
], ApiLaboratoryController.prototype, "systemCopy", null);
exports.ApiLaboratoryController = ApiLaboratoryController = __decorate([
    (0, swagger_1.ApiTags)('Laboratory'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('laboratory'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_laboratory_service_1.ApiLaboratoryService !== "undefined" && api_laboratory_service_1.ApiLaboratoryService) === "function" ? _a : Object])
], ApiLaboratoryController);


/***/ }),
/* 296 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiLaboratoryService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const object_helper_1 = __webpack_require__(85);
const laboratory_entity_1 = __webpack_require__(55);
const laboratory_repository_1 = __webpack_require__(106);
const ticket_laboratory_repository_1 = __webpack_require__(128);
let ApiLaboratoryService = class ApiLaboratoryService {
    constructor(laboratoryRepository, ticketLaboratoryRepository) {
        this.laboratoryRepository = laboratoryRepository;
        this.ticketLaboratoryRepository = ticketLaboratoryRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, relation, sort } = query;
        const { data, total } = await this.laboratoryRepository.pagination({
            relation: {
                laboratoryGroup: relation === null || relation === void 0 ? void 0 : relation.laboratoryGroup,
            },
            page,
            limit,
            condition: {
                oid,
                laboratoryGroupId: filter === null || filter === void 0 ? void 0 : filter.laboratoryGroupId,
                level: filter === null || filter === void 0 ? void 0 : filter.level,
                parentId: filter === null || filter === void 0 ? void 0 : filter.parentId,
            },
            sort,
        });
        return {
            data,
            meta: { page, limit, total },
        };
    }
    async getMany(oid, query) {
        const { limit, filter, relation, sort } = query;
        const data = await this.laboratoryRepository.findMany({
            relation: {
                laboratoryGroup: relation === null || relation === void 0 ? void 0 : relation.laboratoryGroup,
            },
            condition: {
                oid,
                laboratoryGroupId: filter === null || filter === void 0 ? void 0 : filter.laboratoryGroupId,
                level: filter === null || filter === void 0 ? void 0 : filter.level,
                parentId: filter === null || filter === void 0 ? void 0 : filter.parentId,
            },
            sort,
            limit,
        });
        return { data };
    }
    async getOne(oid, id, query) {
        var _a, _b;
        const laboratory = await this.laboratoryRepository.findOne({
            relation: {
                laboratoryGroup: (_a = query === null || query === void 0 ? void 0 : query.relation) === null || _a === void 0 ? void 0 : _a.laboratoryGroup,
            },
            condition: { oid, id },
        });
        if (!laboratory)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        if ((_b = query === null || query === void 0 ? void 0 : query.relation) === null || _b === void 0 ? void 0 : _b.children) {
            if (laboratory.valueType === laboratory_entity_1.LaboratoryValueType.Children) {
                laboratory.children = await this.laboratoryRepository.findMany({
                    condition: {
                        oid,
                        parentId: laboratory.id,
                        level: 2,
                    },
                    sort: { priority: 'ASC' },
                });
            }
        }
        return { data: { laboratory } };
    }
    async create(oid, body) {
        const { children } = body, laboratoryCreateDto = __rest(body, ["children"]);
        const laboratoryParentId = await this.laboratoryRepository.insertOneFullField(Object.assign(Object.assign({}, laboratoryCreateDto), { oid, level: 1, parentId: 0 }));
        const [laboratoryParent] = await this.laboratoryRepository.updateAndReturnEntity({ oid, id: laboratoryParentId }, { parentId: laboratoryParentId });
        if (laboratoryParent.valueType === laboratory_entity_1.LaboratoryValueType.Children && children.length) {
            const childrenDto = children.map((i) => {
                const childDto = Object.assign(Object.assign({}, i), { oid, laboratoryGroupId: laboratoryParent.laboratoryGroupId, level: 2, parentId: laboratoryParent.id });
                return childDto;
            });
            await this.laboratoryRepository.insertManyFullFieldAndReturnEntity(childrenDto);
        }
        return { data: { laboratory: laboratoryParent } };
    }
    async update(oid, id, body) {
        const { children } = body, laboratoryUpdateDto = __rest(body, ["children"]);
        const [laboratory] = await this.laboratoryRepository.updateAndReturnEntity({ oid, id }, laboratoryUpdateDto);
        if (!laboratory)
            throw new exception_filter_1.BusinessException('error.Database.UpdateFailed');
        if (laboratory.valueType === laboratory_entity_1.LaboratoryValueType.Children) {
            await this.laboratoryRepository.updateChildren({
                oid,
                laboratoryParent: laboratory,
                laboratoryChildrenDtoList: children,
            });
        }
        return { data: { laboratory } };
    }
    async destroy(oid, id) {
        const countTicketLaboratory = await this.ticketLaboratoryRepository.countBy({
            oid,
            laboratoryId: id,
        });
        if (countTicketLaboratory > 0) {
            return {
                data: { countTicketLaboratory },
                success: false,
            };
        }
        const affected = await this.laboratoryRepository.delete({ oid, parentId: id });
        if (affected === 0)
            throw new exception_filter_1.BusinessException('error.Database.DeleteFailed');
        return { data: { countTicketLaboratory: 0, laboratoryId: id } };
    }
    async systemList() {
        const data = await this.laboratoryRepository.findMany({
            condition: { oid: 1 },
            sort: { priority: 'ASC' },
        });
        return { data };
    }
    async systemCopy(oid, body) {
        const laboratorySystem = await this.laboratoryRepository.findMany({
            condition: { oid: 1, parentId: { IN: body.laboratoryIdList } },
            sort: { priority: 'ASC' },
        });
        const laboratoryList = laboratorySystem.filter((i) => i.level === 1);
        const laboratoryMap = (0, object_helper_1.arrayToKeyValue)(laboratoryList, 'id');
        laboratorySystem.forEach((i) => {
            var _a;
            if (!laboratoryMap[i.parentId].children) {
                laboratoryMap[i.parentId].children = [];
            }
            if (i.level === 2) {
                (_a = laboratoryMap[i.parentId].children) === null || _a === void 0 ? void 0 : _a.push(i);
            }
        });
        const laboratoryParentInsertList = laboratoryList.map((i) => {
            const dto = {
                oid,
                name: i.name,
                price: i.price,
                laboratoryGroupId: 0,
                level: i.level,
                valueType: i.valueType,
                lowValue: i.lowValue,
                highValue: i.highValue,
                unit: i.unit,
                options: i.options,
                parentId: 0,
                priority: 0,
            };
            return dto;
        });
        const laboratoryParentIds = await this.laboratoryRepository.insertMany(laboratoryParentInsertList);
        await this.laboratoryRepository.update({ id: { IN: laboratoryParentIds } }, {
            parentId: () => `"id"`,
            priority: () => `"id"`,
        });
        const laboratoryChildInsertList = laboratoryList
            .map((i, index) => {
            i.children.forEach((c, j) => {
                c.parentId = laboratoryParentIds[index];
                c.priority = j + 1;
            });
            return i.children;
        })
            .flat()
            .map((i) => {
            const dto = {
                oid,
                name: i.name,
                price: i.price,
                laboratoryGroupId: 0,
                level: i.level,
                valueType: i.valueType,
                lowValue: i.lowValue,
                highValue: i.highValue,
                unit: i.unit,
                options: i.options,
                parentId: i.parentId,
                priority: i.priority,
            };
            return dto;
        });
        await this.laboratoryRepository.insertMany(laboratoryChildInsertList);
        return { data: true };
    }
};
exports.ApiLaboratoryService = ApiLaboratoryService;
exports.ApiLaboratoryService = ApiLaboratoryService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof laboratory_repository_1.LaboratoryRepository !== "undefined" && laboratory_repository_1.LaboratoryRepository) === "function" ? _a : Object, typeof (_b = typeof ticket_laboratory_repository_1.TicketLaboratoryRepository !== "undefined" && ticket_laboratory_repository_1.TicketLaboratoryRepository) === "function" ? _b : Object])
], ApiLaboratoryService);


/***/ }),
/* 297 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(298), exports);
__exportStar(__webpack_require__(299), exports);
__exportStar(__webpack_require__(300), exports);
__exportStar(__webpack_require__(301), exports);


/***/ }),
/* 298 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LaboratoryGetOneQuery = exports.LaboratoryGetManyQuery = exports.LaboratoryPaginationQuery = exports.LaboratoryGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const laboratory_options_request_1 = __webpack_require__(299);
class LaboratoryGetQuery {
}
exports.LaboratoryGetQuery = LaboratoryGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(laboratory_options_request_1.LaboratoryRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof laboratory_options_request_1.LaboratoryRelationQuery !== "undefined" && laboratory_options_request_1.LaboratoryRelationQuery) === "function" ? _a : Object)
], LaboratoryGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ level: 1 }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(laboratory_options_request_1.LaboratoryFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof laboratory_options_request_1.LaboratoryFilterQuery !== "undefined" && laboratory_options_request_1.LaboratoryFilterQuery) === "function" ? _b : Object)
], LaboratoryGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ id: 'ASC' }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(laboratory_options_request_1.LaboratorySortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof laboratory_options_request_1.LaboratorySortQuery !== "undefined" && laboratory_options_request_1.LaboratorySortQuery) === "function" ? _c : Object)
], LaboratoryGetQuery.prototype, "sort", void 0);
class LaboratoryPaginationQuery extends (0, swagger_1.IntersectionType)(LaboratoryGetQuery, query_1.PaginationQuery) {
}
exports.LaboratoryPaginationQuery = LaboratoryPaginationQuery;
class LaboratoryGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(LaboratoryGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.LaboratoryGetManyQuery = LaboratoryGetManyQuery;
class LaboratoryGetOneQuery extends (0, swagger_1.PickType)(LaboratoryGetQuery, ['relation']) {
}
exports.LaboratoryGetOneQuery = LaboratoryGetOneQuery;


/***/ }),
/* 299 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LaboratorySortQuery = exports.LaboratoryFilterQuery = exports.LaboratoryRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
class LaboratoryRelationQuery {
}
exports.LaboratoryRelationQuery = LaboratoryRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], LaboratoryRelationQuery.prototype, "laboratoryGroup", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], LaboratoryRelationQuery.prototype, "children", void 0);
class LaboratoryFilterQuery {
}
exports.LaboratoryFilterQuery = LaboratoryFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], LaboratoryFilterQuery.prototype, "laboratoryGroupId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], LaboratoryFilterQuery.prototype, "level", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], LaboratoryFilterQuery.prototype, "parentId", void 0);
class LaboratorySortQuery extends query_1.SortQuery {
}
exports.LaboratorySortQuery = LaboratorySortQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], LaboratorySortQuery.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], LaboratorySortQuery.prototype, "priority", void 0);


/***/ }),
/* 300 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LaboratorySystemCopyBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class LaboratorySystemCopyBody {
}
exports.LaboratorySystemCopyBody = LaboratorySystemCopyBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ArrayMinSize)(1),
    __metadata("design:type", Array)
], LaboratorySystemCopyBody.prototype, "laboratoryIdList", void 0);


/***/ }),
/* 301 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LaboratoryUpdateBody = exports.LaboratoryUpdateChild = exports.LaboratoryParentUpdate = exports.LaboratoryCreateBody = exports.LaboratoryCreateChild = exports.LaboratoryParentCreate = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
const laboratory_entity_1 = __webpack_require__(55);
class LaboratoryParentCreate {
}
exports.LaboratoryParentCreate = LaboratoryParentCreate;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 105000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], LaboratoryParentCreate.prototype, "priority", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'GOT' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], LaboratoryParentCreate.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 105000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], LaboratoryParentCreate.prototype, "price", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], LaboratoryParentCreate.prototype, "laboratoryGroupId", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 105000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    __metadata("design:type", Number)
], LaboratoryParentCreate.prototype, "lowValue", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 105000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    __metadata("design:type", Number)
], LaboratoryParentCreate.prototype, "highValue", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: laboratory_entity_1.LaboratoryValueType, example: laboratory_entity_1.LaboratoryValueType.Number }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(laboratory_entity_1.LaboratoryValueType),
    __metadata("design:type", typeof (_a = typeof laboratory_entity_1.LaboratoryValueType !== "undefined" && laboratory_entity_1.LaboratoryValueType) === "function" ? _a : Object)
], LaboratoryParentCreate.prototype, "valueType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'mg/l' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], LaboratoryParentCreate.prototype, "unit", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'mg/l' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], LaboratoryParentCreate.prototype, "options", void 0);
class LaboratoryCreateChild extends (0, swagger_1.OmitType)(LaboratoryParentCreate, ['laboratoryGroupId']) {
}
exports.LaboratoryCreateChild = LaboratoryCreateChild;
class LaboratoryCreateBody extends LaboratoryParentCreate {
}
exports.LaboratoryCreateBody = LaboratoryCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: LaboratoryCreateChild, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => LaboratoryCreateChild),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], LaboratoryCreateBody.prototype, "children", void 0);
class LaboratoryParentUpdate extends (0, swagger_1.OmitType)(LaboratoryParentCreate, ['valueType']) {
}
exports.LaboratoryParentUpdate = LaboratoryParentUpdate;
class LaboratoryUpdateChild extends (0, swagger_1.OmitType)(LaboratoryParentCreate, ['laboratoryGroupId']) {
}
exports.LaboratoryUpdateChild = LaboratoryUpdateChild;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 12 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], LaboratoryUpdateChild.prototype, "id", void 0);
class LaboratoryUpdateBody extends LaboratoryParentUpdate {
}
exports.LaboratoryUpdateBody = LaboratoryUpdateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: LaboratoryUpdateChild, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => LaboratoryUpdateChild),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], LaboratoryUpdateBody.prototype, "children", void 0);


/***/ }),
/* 302 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiOrganizationModule = void 0;
const common_1 = __webpack_require__(3);
const config_1 = __webpack_require__(21);
const jwt_config_1 = __webpack_require__(91);
const environments_1 = __webpack_require__(20);
const email_module_1 = __webpack_require__(163);
const api_organization_controller_1 = __webpack_require__(303);
const api_organization_service_1 = __webpack_require__(310);
let ApiOrganizationModule = class ApiOrganizationModule {
};
exports.ApiOrganizationModule = ApiOrganizationModule;
exports.ApiOrganizationModule = ApiOrganizationModule = __decorate([
    (0, common_1.Module)({
        imports: [
            config_1.ConfigModule.forFeature(jwt_config_1.JwtConfig),
            config_1.ConfigModule.forFeature(environments_1.GlobalConfig),
            email_module_1.EmailModule,
        ],
        controllers: [api_organization_controller_1.ApiOrganizationController],
        providers: [api_organization_service_1.ApiOrganizationService],
    })
], ApiOrganizationModule);


/***/ }),
/* 303 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiOrganizationController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const fastify_1 = __webpack_require__(304);
const file_1 = __webpack_require__(305);
const permission_guard_1 = __webpack_require__(87);
const user_guard_1 = __webpack_require__(15);
const interceptor_1 = __webpack_require__(306);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_organization_service_1 = __webpack_require__(310);
const request_1 = __webpack_require__(312);
let ApiOrganizationController = class ApiOrganizationController {
    constructor(apiOrganizationService) {
        this.apiOrganizationService = apiOrganizationService;
    }
    async info({ oid }) {
        return await this.apiOrganizationService.getInfo(oid);
    }
    async updateInfo({ oid }, body) {
        return await this.apiOrganizationService.updateInfo(oid, body);
    }
    async updateInfoAndLogo({ oid }, file, body) {
        return await this.apiOrganizationService.updateInfoAndLogo({ oid, body, file });
    }
    async changeEmail({ oid }, body) {
        return await this.apiOrganizationService.changeEmail(oid, body.email);
    }
    async sendEmailVerifyOrganizationEmail({ oid }) {
        return await this.apiOrganizationService.sendEmailVerifyOrganizationEmail(oid);
    }
    async verifyOrganizationEmail(reply, query) {
        await this.apiOrganizationService.verifyOrganizationEmail(query);
        return reply.type('text/html; charset=utf-8').send(`<h2>Kích hoạt email thành công</h2>`);
    }
};
exports.ApiOrganizationController = ApiOrganizationController;
__decorate([
    (0, common_1.Get)('info'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object]),
    __metadata("design:returntype", Promise)
], ApiOrganizationController.prototype, "info", null);
__decorate([
    (0, common_1.Patch)('update-info'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.ORGANIZATION_UPDATE_INFO),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_c = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _c : Object, typeof (_d = typeof request_1.OrganizationUpdateInfoBody !== "undefined" && request_1.OrganizationUpdateInfoBody) === "function" ? _d : Object]),
    __metadata("design:returntype", Promise)
], ApiOrganizationController.prototype, "updateInfo", null);
__decorate([
    (0, common_1.Patch)('update-info-and-logo'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.ORGANIZATION_UPDATE_INFO),
    (0, swagger_1.ApiConsumes)('multipart/form-data'),
    (0, common_1.UseInterceptors)((0, interceptor_1.FastifyFileInterceptor)('file', {})),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.UploadedFile)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_e = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _e : Object, typeof (_f = typeof file_1.FileUploadDto !== "undefined" && file_1.FileUploadDto) === "function" ? _f : Object, typeof (_g = typeof request_1.OrganizationUpdateInfoAndLogoBody !== "undefined" && request_1.OrganizationUpdateInfoAndLogoBody) === "function" ? _g : Object]),
    __metadata("design:returntype", Promise)
], ApiOrganizationController.prototype, "updateInfoAndLogo", null);
__decorate([
    (0, common_1.Patch)('change-email'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.ORGANIZATION_VERIFY_EMAIL),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_h = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _h : Object, typeof (_j = typeof request_1.OrganizationChangeEmailBody !== "undefined" && request_1.OrganizationChangeEmailBody) === "function" ? _j : Object]),
    __metadata("design:returntype", Promise)
], ApiOrganizationController.prototype, "changeEmail", null);
__decorate([
    (0, common_1.Post)('send-email-verify-organization-email'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.ORGANIZATION_VERIFY_EMAIL),
    __param(0, (0, external_request_1.External)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_k = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _k : Object]),
    __metadata("design:returntype", Promise)
], ApiOrganizationController.prototype, "sendEmailVerifyOrganizationEmail", null);
__decorate([
    (0, common_1.Get)('verify-organization-email'),
    __param(0, (0, common_1.Res)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_l = typeof fastify_1.FastifyReply !== "undefined" && fastify_1.FastifyReply) === "function" ? _l : Object, typeof (_m = typeof request_1.VerifyOrganizationEmailQuery !== "undefined" && request_1.VerifyOrganizationEmailQuery) === "function" ? _m : Object]),
    __metadata("design:returntype", Promise)
], ApiOrganizationController.prototype, "verifyOrganizationEmail", null);
exports.ApiOrganizationController = ApiOrganizationController = __decorate([
    (0, swagger_1.ApiTags)('Organization'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('organization'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_organization_service_1.ApiOrganizationService !== "undefined" && api_organization_service_1.ApiOrganizationService) === "function" ? _a : Object])
], ApiOrganizationController);


/***/ }),
/* 304 */
/***/ ((module) => {

module.exports = require("fastify");

/***/ }),
/* 305 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SingleFileUpload = exports.MultipleFileUpload = void 0;
const swagger_1 = __webpack_require__(6);
class MultipleFileUpload {
}
exports.MultipleFileUpload = MultipleFileUpload;
__decorate([
    (0, swagger_1.ApiProperty)({ type: Array, format: 'binary' }),
    __metadata("design:type", Array)
], MultipleFileUpload.prototype, "files", void 0);
class SingleFileUpload {
}
exports.SingleFileUpload = SingleFileUpload;
__decorate([
    (0, swagger_1.ApiProperty)({ type: 'string', format: 'binary' }),
    __metadata("design:type", String)
], SingleFileUpload.prototype, "file", void 0);


/***/ }),
/* 306 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(16), exports);
__exportStar(__webpack_require__(307), exports);
__exportStar(__webpack_require__(309), exports);
__exportStar(__webpack_require__(18), exports);
__exportStar(__webpack_require__(19), exports);


/***/ }),
/* 307 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FastifyFileInterceptor = FastifyFileInterceptor;
const common_1 = __webpack_require__(3);
const fastify_multer_1 = __webpack_require__(7);
const multer_1 = __webpack_require__(308);
function FastifyFileInterceptor(fieldName, localOptions) {
    var _a;
    let MixinInterceptor = class MixinInterceptor {
        constructor(options) {
            this.multer = fastify_multer_1.default(Object.assign(Object.assign({}, options), localOptions));
        }
        async intercept(context, next) {
            const ctx = context.switchToHttp();
            await new Promise((resolve, reject) => {
                return this.multer.single(fieldName)(ctx.getRequest(), ctx.getResponse(), (error) => {
                    if (error) {
                        return reject(error);
                    }
                    resolve();
                });
            });
            return next.handle();
        }
    };
    MixinInterceptor = __decorate([
        __param(0, (0, common_1.Optional)()),
        __param(0, (0, common_1.Inject)('MULTER_MODULE_OPTIONS')),
        __metadata("design:paramtypes", [typeof (_a = typeof multer_1.Multer !== "undefined" && multer_1.Multer) === "function" ? _a : Object])
    ], MixinInterceptor);
    const Interceptor = (0, common_1.mixin)(MixinInterceptor);
    return Interceptor;
}


/***/ }),
/* 308 */
/***/ ((module) => {

module.exports = require("multer");

/***/ }),
/* 309 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FastifyFilesInterceptor = FastifyFilesInterceptor;
const common_1 = __webpack_require__(3);
const fastify_multer_1 = __webpack_require__(7);
const multer_1 = __webpack_require__(308);
function FastifyFilesInterceptor(fieldName, maxCount, localOptions) {
    var _a;
    let MixinInterceptor = class MixinInterceptor {
        constructor(options) {
            this.multer = fastify_multer_1.default(Object.assign(Object.assign({}, options), localOptions));
        }
        async intercept(context, next) {
            const ctx = context.switchToHttp();
            await new Promise((resolve, reject) => {
                return this.multer.array(fieldName, maxCount)(ctx.getRequest(), ctx.getResponse(), (error) => {
                    if (error) {
                        return reject(error);
                    }
                    resolve();
                });
            });
            return next.handle();
        }
    };
    MixinInterceptor = __decorate([
        __param(0, (0, common_1.Optional)()),
        __param(0, (0, common_1.Inject)('MULTER_MODULE_OPTIONS')),
        __metadata("design:paramtypes", [typeof (_a = typeof multer_1.Multer !== "undefined" && multer_1.Multer) === "function" ? _a : Object])
    ], MixinInterceptor);
    const Interceptor = (0, common_1.mixin)(MixinInterceptor);
    return Interceptor;
}


/***/ }),
/* 310 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiOrganizationService = void 0;
const common_1 = __webpack_require__(3);
const config_1 = __webpack_require__(21);
const cache_data_service_1 = __webpack_require__(30);
const exception_filter_1 = __webpack_require__(9);
const string_helper_1 = __webpack_require__(98);
const jwt_config_1 = __webpack_require__(91);
const image_repository_1 = __webpack_require__(103);
const organization_repository_1 = __webpack_require__(34);
const environments_1 = __webpack_require__(20);
const email_service_1 = __webpack_require__(165);
const image_manager_service_1 = __webpack_require__(311);
let ApiOrganizationService = class ApiOrganizationService {
    constructor(globalConfig, jwtConfig, emailService, cacheDataService, imageManagerService, organizationRepository, imageRepository) {
        this.globalConfig = globalConfig;
        this.jwtConfig = jwtConfig;
        this.emailService = emailService;
        this.cacheDataService = cacheDataService;
        this.imageManagerService = imageManagerService;
        this.organizationRepository = organizationRepository;
        this.imageRepository = imageRepository;
    }
    async getInfo(oid) {
        const organization = await this.organizationRepository.findOne({
            relation: { logoImage: true },
            condition: { id: oid },
        });
        this.cacheDataService.updateOrganizationInfo(organization);
        return { data: { organization } };
    }
    async updateInfo(oid, body) {
        const [organization] = await this.organizationRepository.updateAndReturnEntity({ id: oid }, body);
        if (!organization) {
            throw new exception_filter_1.BusinessException('error.Database.UpdateFailed');
        }
        this.cacheDataService.updateOrganizationInfo(organization);
        return { data: { organization } };
    }
    async updateInfoAndLogo(options) {
        const { oid, body, file } = options;
        const organizationOrigin = await this.organizationRepository.findOneById(oid);
        let image;
        if (organizationOrigin.logoImageId) {
            image = await this.imageRepository.findOneBy({ oid, id: organizationOrigin.logoImageId });
        }
        const [logoImageId] = await this.imageManagerService.changeImageList({
            oid,
            customerId: 0,
            files: [file],
            filesPosition: [0],
            imageIdsKeep: [],
            imageIdsOld: image ? [image.id] : [],
        });
        const [organization] = await this.organizationRepository.updateAndReturnEntity({ id: oid }, {
            name: body.name,
            addressProvince: body.addressProvince,
            addressDistrict: body.addressDistrict,
            addressWard: body.addressWard,
            addressStreet: body.addressStreet,
            logoImageId,
        });
        if (!organization)
            throw new exception_filter_1.BusinessException('error.Database.UpdateFailed');
        organization.logoImage = await this.imageRepository.findOneBy({ oid, id: logoImageId });
        this.cacheDataService.updateOrganizationInfo(organization);
        return { data: { organization } };
    }
    async changeEmail(oid, email) {
        const rootOrganization = await this.organizationRepository.findOneById(oid);
        if (rootOrganization.email === email) {
            throw new common_1.HttpException('Email mới và email cũ cùng địa chỉ', common_1.HttpStatus.BAD_REQUEST);
        }
        const existOrganization = await this.organizationRepository.findOneBy({ email });
        if (existOrganization) {
            throw new common_1.HttpException('Email đã có người khác sử dụng. Vui lòng chọn email khác', common_1.HttpStatus.BAD_REQUEST);
        }
        const [organization] = await this.organizationRepository.updateAndReturnEntity({ id: oid }, {
            email,
            emailVerify: 0,
        });
        if (!organization) {
            throw new exception_filter_1.BusinessException('error.Database.UpdateFailed');
        }
        this.cacheDataService.updateOrganizationInfo(organization);
        await this.sendEmailVerifyOrganizationEmail(oid);
        return { data: { organization } };
    }
    async sendEmailVerifyOrganizationEmail(oid) {
        const organization = await this.organizationRepository.findOneById(oid);
        if (!organization || !organization.email || organization.emailVerify === 1) {
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        }
        const token = encodeURIComponent((0, string_helper_1.encrypt)(organization.email, this.jwtConfig.refreshKey, 30 * 60 * 1000));
        const link = `${this.globalConfig.DOMAIN_BACK_END}/organization/verify-organization-email`
            + `?oid=${oid}&email=${organization.email}&token=${token}&ver=1`;
        const sendEmailResult = await this.emailService.send({
            to: organization.email,
            subject: '[MEA] - Kích hoạt email tài khoản',
            from: 'medihome.vn@gmail.com',
            text: 'active_email',
            html: '<p>Nhấn vào đường link sau để kích hoạt email tài khoản: </p>'
                + `<p><a href="${link}">${link}</a></p>`
                + '<p>Link sẽ bị vô hiệu hóa sau 30 phút</p>',
        });
        return { data: { sendEmailResult } };
    }
    async verifyOrganizationEmail(query) {
        let email;
        try {
            email = (0, string_helper_1.decrypt)(query.token, this.jwtConfig.refreshKey);
        }
        catch (error) {
            throw new common_1.HttpException('Thời gian reset password đã quá hạn', common_1.HttpStatus.BAD_GATEWAY);
        }
        if (query.email !== email) {
            throw new exception_filter_1.BusinessException('error.Token.Invalid');
        }
        const [organization] = await this.organizationRepository.updateAndReturnEntity({ id: query.oid }, { emailVerify: 1 });
        this.cacheDataService.updateOrganizationInfo(organization);
        return { data: { organization } };
    }
};
exports.ApiOrganizationService = ApiOrganizationService;
exports.ApiOrganizationService = ApiOrganizationService = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, common_1.Inject)(environments_1.GlobalConfig.KEY)),
    __param(1, (0, common_1.Inject)(jwt_config_1.JwtConfig.KEY)),
    __metadata("design:paramtypes", [typeof (_a = typeof config_1.ConfigType !== "undefined" && config_1.ConfigType) === "function" ? _a : Object, typeof (_b = typeof config_1.ConfigType !== "undefined" && config_1.ConfigType) === "function" ? _b : Object, typeof (_c = typeof email_service_1.EmailService !== "undefined" && email_service_1.EmailService) === "function" ? _c : Object, typeof (_d = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _d : Object, typeof (_e = typeof image_manager_service_1.ImageManagerService !== "undefined" && image_manager_service_1.ImageManagerService) === "function" ? _e : Object, typeof (_f = typeof organization_repository_1.OrganizationRepository !== "undefined" && organization_repository_1.OrganizationRepository) === "function" ? _f : Object, typeof (_g = typeof image_repository_1.ImageRepository !== "undefined" && image_repository_1.ImageRepository) === "function" ? _g : Object])
], ApiOrganizationService);


/***/ }),
/* 311 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var ImageManagerService_1;
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ImageManagerService = void 0;
const common_1 = __webpack_require__(3);
const cache_data_service_1 = __webpack_require__(30);
const object_helper_1 = __webpack_require__(85);
const image_entity_1 = __webpack_require__(71);
const setting_entity_1 = __webpack_require__(31);
const image_repository_1 = __webpack_require__(103);
const setting_repository_1 = __webpack_require__(82);
const google_driver_service_1 = __webpack_require__(158);
let ImageManagerService = ImageManagerService_1 = class ImageManagerService {
    constructor(imageRepository, googleDriverService, cacheDataService, settingRepository) {
        this.imageRepository = imageRepository;
        this.googleDriverService = googleDriverService;
        this.cacheDataService = cacheDataService;
        this.settingRepository = settingRepository;
        this.logger = new common_1.Logger(ImageManagerService_1.name);
    }
    async onModuleInit() {
        try {
            const settingList = await this.settingRepository.findManyBy({ key: setting_entity_1.SettingKey.GOOGLE_DRIVER });
            settingList.forEach((setting) => {
                const data = setting.data ? JSON.parse(setting.data) : {};
                if (!data.email || !data.refreshToken)
                    return;
                this.googleDriverService.setCache(data.email, {
                    rootFolderId: '',
                    refreshToken: data.refreshToken,
                    defaultFolderId: '',
                    defaultFolderName: '',
                });
            });
        }
        catch (error) {
            this.logger.error(error.message);
        }
    }
    async changeImageList(options) {
        const { oid, customerId, imageIdsKeep, imageIdsOld, files, filesPosition } = options;
        const imageOldList = imageIdsOld.length
            ? await this.imageRepository.findManyByIds(imageIdsOld)
            : [];
        const imageRemoveList = imageOldList.filter((i) => !imageIdsKeep.includes(i.id));
        const imageRemoveMapList = (0, object_helper_1.arrayToKeyArray)(imageRemoveList, 'hostAccount');
        const email = await this.cacheDataService.getEmailGoogleDriver(oid);
        const [imageHostInsertList, ...imageHostTrashResponse] = await Promise.all([
            this.googleDriverService.uploadMultipleFiles({
                files,
                email,
                oid,
                customerId,
            }),
            ...Object.entries(imageRemoveMapList).map(([curEmail, imageList]) => {
                return this.googleDriverService.trashMultipleFiles({
                    oid,
                    email: curEmail,
                    fileIds: imageList.map((i) => i.hostId),
                });
            }),
        ]);
        const imageInsertList = imageHostInsertList.map((i, index) => {
            const draft = {
                oid,
                customerId,
                name: i.name,
                size: Number(i.size),
                mimeType: i.mimeType,
                hostType: image_entity_1.ImageHost.GoogleDriver,
                hostAccount: email,
                hostId: i.id,
            };
            return draft;
        });
        const imageHostTrashSuccess = imageHostTrashResponse.map((i) => i.success).flat();
        const imageHostTrashFailed = imageHostTrashResponse.map((i) => i.failed).flat();
        const imageIdsRemoveSuccess = imageRemoveList
            .filter((i) => imageHostTrashSuccess.includes(i.hostId))
            .map((i) => i.id);
        const imageIdsRemoveFailed = imageRemoveList
            .filter((i) => imageHostTrashFailed.includes(i.hostId))
            .map((i) => i.id);
        const [imageIdsNew] = await Promise.all([
            this.imageRepository.insertManyFullField(imageInsertList),
            imageIdsRemoveSuccess.length
                ? this.imageRepository.delete({ id: { IN: imageIdsRemoveSuccess } })
                : null,
            imageIdsRemoveFailed.length
                ? this.imageRepository.update({ id: { IN: imageIdsRemoveFailed } }, { waitDelete: 1 })
                : null,
        ]);
        const imageIdsUpdate = [...imageIdsKeep];
        filesPosition.sort((a, b) => (a < b ? -1 : 1));
        for (let i = 0; i < filesPosition.length; i++) {
            imageIdsUpdate.splice(filesPosition[i], 0, imageIdsNew[i]);
        }
        return imageIdsUpdate;
    }
};
exports.ImageManagerService = ImageManagerService;
exports.ImageManagerService = ImageManagerService = ImageManagerService_1 = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof image_repository_1.ImageRepository !== "undefined" && image_repository_1.ImageRepository) === "function" ? _a : Object, typeof (_b = typeof google_driver_service_1.GoogleDriverService !== "undefined" && google_driver_service_1.GoogleDriverService) === "function" ? _b : Object, typeof (_c = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _c : Object, typeof (_d = typeof setting_repository_1.SettingRepository !== "undefined" && setting_repository_1.SettingRepository) === "function" ? _d : Object])
], ImageManagerService);


/***/ }),
/* 312 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(313), exports);
__exportStar(__webpack_require__(314), exports);
__exportStar(__webpack_require__(315), exports);
__exportStar(__webpack_require__(316), exports);
__exportStar(__webpack_require__(317), exports);


/***/ }),
/* 313 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OrganizationChangeEmailBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
class OrganizationChangeEmailBody {
}
exports.OrganizationChangeEmailBody = OrganizationChangeEmailBody;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ name: 'email', example: 'vm@gmail.com' }),
    (0, class_transformer_1.Transform)(({ value }) => {
        const [mail, domain] = value.split('@');
        const mailFormat = mail.replace(/\./g, '').replace(/\+.*?$/g, '');
        return `${mailFormat}@${domain}`;
    }),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.Validate)(class_validator_custom_1.IsGmail),
    __metadata("design:type", String)
], OrganizationChangeEmailBody.prototype, "email", void 0);


/***/ }),
/* 314 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OrganizationGetOneQuery = exports.OrganizationGetManyQuery = exports.OrganizationPaginationQuery = exports.OrganizationGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const organization_options_request_1 = __webpack_require__(315);
class OrganizationGetQuery {
}
exports.OrganizationGetQuery = OrganizationGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            userList: true,
            logoImage: true,
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(organization_options_request_1.OrganizationRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof organization_options_request_1.OrganizationRelationQuery !== "undefined" && organization_options_request_1.OrganizationRelationQuery) === "function" ? _a : Object)
], OrganizationGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({}),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(organization_options_request_1.OrganizationFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof organization_options_request_1.OrganizationFilterQuery !== "undefined" && organization_options_request_1.OrganizationFilterQuery) === "function" ? _b : Object)
], OrganizationGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({}),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(organization_options_request_1.OrganizationSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof organization_options_request_1.OrganizationSortQuery !== "undefined" && organization_options_request_1.OrganizationSortQuery) === "function" ? _c : Object)
], OrganizationGetQuery.prototype, "sort", void 0);
class OrganizationPaginationQuery extends (0, swagger_1.IntersectionType)(OrganizationGetQuery, query_1.PaginationQuery) {
}
exports.OrganizationPaginationQuery = OrganizationPaginationQuery;
class OrganizationGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(OrganizationGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.OrganizationGetManyQuery = OrganizationGetManyQuery;
class OrganizationGetOneQuery extends (0, swagger_1.PickType)(OrganizationGetQuery, ['relation']) {
}
exports.OrganizationGetOneQuery = OrganizationGetOneQuery;


/***/ }),
/* 315 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OrganizationSortQuery = exports.OrganizationFilterQuery = exports.OrganizationRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
class OrganizationRelationQuery {
}
exports.OrganizationRelationQuery = OrganizationRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], OrganizationRelationQuery.prototype, "userList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], OrganizationRelationQuery.prototype, "logoImage", void 0);
class OrganizationFilterQuery {
}
exports.OrganizationFilterQuery = OrganizationFilterQuery;
class OrganizationSortQuery extends query_1.SortQuery {
}
exports.OrganizationSortQuery = OrganizationSortQuery;


/***/ }),
/* 316 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OrganizationUpdateInfoBody = exports.OrganizationUpdateInfoAndLogoBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const file_1 = __webpack_require__(305);
class OrganizationUpdateInfoAndLogoBody extends file_1.SingleFileUpload {
}
exports.OrganizationUpdateInfoAndLogoBody = OrganizationUpdateInfoAndLogoBody;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Phòng khám đa khoa Medical' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], OrganizationUpdateInfoAndLogoBody.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Tỉnh Lâm Đồng' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], OrganizationUpdateInfoAndLogoBody.prototype, "addressProvince", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Huyện Cát Tiên' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], OrganizationUpdateInfoAndLogoBody.prototype, "addressDistrict", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Xã Tiên Hoàng' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], OrganizationUpdateInfoAndLogoBody.prototype, "addressWard", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Thôn Trần Lệ Mai' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], OrganizationUpdateInfoAndLogoBody.prototype, "addressStreet", void 0);
class OrganizationUpdateInfoBody extends (0, swagger_1.OmitType)(OrganizationUpdateInfoAndLogoBody, ['file']) {
}
exports.OrganizationUpdateInfoBody = OrganizationUpdateInfoBody;


/***/ }),
/* 317 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VerifyOrganizationEmailQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
class VerifyOrganizationEmailQuery {
}
exports.VerifyOrganizationEmailQuery = VerifyOrganizationEmailQuery;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 4 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => Number),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], VerifyOrganizationEmailQuery.prototype, "oid", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'mea@gmail.com' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.Validate)(class_validator_custom_1.IsGmail),
    __metadata("design:type", String)
], VerifyOrganizationEmailQuery.prototype, "email", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: '$2b$05$G17lx6yO8fK2iJK6tqX2XODsCrawFzSht5vJQjE7wlDJO0.4zxPxO' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.MinLength)(6),
    __metadata("design:type", String)
], VerifyOrganizationEmailQuery.prototype, "token", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: '1' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], VerifyOrganizationEmailQuery.prototype, "ver", void 0);


/***/ }),
/* 318 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiPermissionModule = void 0;
const common_1 = __webpack_require__(3);
const api_permission_controller_1 = __webpack_require__(319);
const api_permission_service_1 = __webpack_require__(320);
let ApiPermissionModule = class ApiPermissionModule {
};
exports.ApiPermissionModule = ApiPermissionModule;
exports.ApiPermissionModule = ApiPermissionModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_permission_controller_1.ApiPermissionController],
        providers: [api_permission_service_1.ApiPermissionService],
    })
], ApiPermissionModule);


/***/ }),
/* 319 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiPermissionController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const root_guard_1 = __webpack_require__(14);
const user_guard_1 = __webpack_require__(15);
const api_permission_service_1 = __webpack_require__(320);
const request_1 = __webpack_require__(321);
let ApiPermissionController = class ApiPermissionController {
    constructor(apiPermissionService) {
        this.apiPermissionService = apiPermissionService;
    }
    list(query) {
        return this.apiPermissionService.getMany(query);
    }
    initData() {
        return this.apiPermissionService.initData();
    }
};
exports.ApiPermissionController = ApiPermissionController;
__decorate([
    (0, common_1.Get)('list'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof request_1.PermissionGetManyQuery !== "undefined" && request_1.PermissionGetManyQuery) === "function" ? _b : Object]),
    __metadata("design:returntype", void 0)
], ApiPermissionController.prototype, "list", null);
__decorate([
    (0, common_1.Post)('init-data'),
    (0, root_guard_1.IsRoot)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], ApiPermissionController.prototype, "initData", null);
exports.ApiPermissionController = ApiPermissionController = __decorate([
    (0, swagger_1.ApiTags)('Permission'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('permission'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_permission_service_1.ApiPermissionService !== "undefined" && api_permission_service_1.ApiPermissionService) === "function" ? _a : Object])
], ApiPermissionController);


/***/ }),
/* 320 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiPermissionService = void 0;
const common_1 = __webpack_require__(3);
const cache_data_service_1 = __webpack_require__(30);
const permission_entity_1 = __webpack_require__(73);
const permission_repository_1 = __webpack_require__(80);
let ApiPermissionService = class ApiPermissionService {
    constructor(cacheDataService, permissionRepository) {
        this.cacheDataService = cacheDataService;
        this.permissionRepository = permissionRepository;
    }
    async getMany(query) {
        const { limit, filter, sort } = query;
        const data = await this.permissionRepository.findMany({
            condition: {
                level: filter === null || filter === void 0 ? void 0 : filter.level,
                rootId: filter === null || filter === void 0 ? void 0 : filter.rootId,
            },
            limit,
            sort,
        });
        return { data };
    }
    async initData() {
        const permissionOrganization = [
            {
                id: permission_entity_1.PermissionId.ORGANIZATION,
                level: 1,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.ORGANIZATION],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.ORGANIZATION}`,
                name: 'Quản lý cơ sở (Admin)',
                parentId: 0,
                rootId: permission_entity_1.PermissionId.ORGANIZATION,
            },
            {
                id: permission_entity_1.PermissionId.ORGANIZATION_UPDATE_INFO,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.ORGANIZATION_UPDATE_INFO],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.ORGANIZATION}.${permission_entity_1.PermissionId.ORGANIZATION_UPDATE_INFO}`,
                name: 'Sửa thông tin cơ sở',
                parentId: permission_entity_1.PermissionId.ORGANIZATION,
                rootId: permission_entity_1.PermissionId.ORGANIZATION,
            },
            {
                id: permission_entity_1.PermissionId.ORGANIZATION_SETTING_UPSERT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.ORGANIZATION_SETTING_UPSERT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.ORGANIZATION}.${permission_entity_1.PermissionId.ORGANIZATION_SETTING_UPSERT}`,
                name: 'Chỉnh sửa cài đặt',
                parentId: permission_entity_1.PermissionId.ORGANIZATION,
                rootId: permission_entity_1.PermissionId.ORGANIZATION,
            },
            {
                id: permission_entity_1.PermissionId.ORGANIZATION_VERIFY_EMAIL,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.ORGANIZATION_VERIFY_EMAIL],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.ORGANIZATION}.${permission_entity_1.PermissionId.ORGANIZATION_VERIFY_EMAIL}`,
                name: 'Sửa và kích hoạt email',
                parentId: permission_entity_1.PermissionId.ORGANIZATION,
                rootId: permission_entity_1.PermissionId.ORGANIZATION,
            },
        ];
        const permissionRole = [
            {
                id: permission_entity_1.PermissionId.ROLE,
                level: 1,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.ROLE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.ROLE}`,
                name: 'Quản lý vai trò (Admin)',
                parentId: 0,
                rootId: permission_entity_1.PermissionId.ROLE,
            },
            {
                id: permission_entity_1.PermissionId.ROLE_READ,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.ROLE_READ],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.ROLE}.${permission_entity_1.PermissionId.ROLE_READ}`,
                name: 'Xem vai trò',
                parentId: permission_entity_1.PermissionId.ROLE,
                rootId: permission_entity_1.PermissionId.ROLE,
            },
            {
                id: permission_entity_1.PermissionId.ROLE_CREATE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.ROLE_CREATE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.ROLE}.${permission_entity_1.PermissionId.ROLE_CREATE}`,
                name: 'Thêm vai trò',
                parentId: permission_entity_1.PermissionId.ROLE,
                rootId: permission_entity_1.PermissionId.ROLE,
            },
            {
                id: permission_entity_1.PermissionId.ROLE_UPDATE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.ROLE_UPDATE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.ROLE}.${permission_entity_1.PermissionId.ROLE_UPDATE}`,
                name: 'Sửa vai trò',
                parentId: permission_entity_1.PermissionId.ROLE,
                rootId: permission_entity_1.PermissionId.ROLE,
            },
            {
                id: permission_entity_1.PermissionId.ROLE_DELETE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.ROLE_DELETE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.ROLE}.${permission_entity_1.PermissionId.ROLE_DELETE}`,
                name: 'Xóa vai trò',
                parentId: permission_entity_1.PermissionId.ROLE,
                rootId: permission_entity_1.PermissionId.ROLE,
            },
        ];
        const permissionUser = [
            {
                id: permission_entity_1.PermissionId.USER,
                level: 1,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.USER],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.USER}`,
                name: 'Quản lý nhân viên (Admin)',
                parentId: 0,
                rootId: permission_entity_1.PermissionId.USER,
            },
            {
                id: permission_entity_1.PermissionId.USER_READ,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.USER_READ],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.USER}.${permission_entity_1.PermissionId.USER_READ}`,
                name: 'Xem nhân viên',
                parentId: permission_entity_1.PermissionId.USER,
                rootId: permission_entity_1.PermissionId.USER,
            },
            {
                id: permission_entity_1.PermissionId.USER_CREATE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.USER_CREATE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.USER}.${permission_entity_1.PermissionId.USER_CREATE}`,
                name: 'Thêm nhân viên',
                parentId: permission_entity_1.PermissionId.USER,
                rootId: permission_entity_1.PermissionId.USER,
            },
            {
                id: permission_entity_1.PermissionId.USER_UPDATE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.USER_UPDATE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.USER}.${permission_entity_1.PermissionId.USER_UPDATE}`,
                name: 'Sửa nhân viên',
                parentId: permission_entity_1.PermissionId.USER,
                rootId: permission_entity_1.PermissionId.USER,
            },
            {
                id: permission_entity_1.PermissionId.USER_DELETE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.USER_DELETE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.USER}.${permission_entity_1.PermissionId.USER_DELETE}`,
                name: 'Xóa nhân viên',
                parentId: permission_entity_1.PermissionId.USER,
                rootId: permission_entity_1.PermissionId.USER,
            },
            {
                id: permission_entity_1.PermissionId.USER_DEVICE_LOGOUT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.USER_DEVICE_LOGOUT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.USER}.${permission_entity_1.PermissionId.USER_DEVICE_LOGOUT}`,
                name: 'Đăng xuất thiết bị',
                parentId: permission_entity_1.PermissionId.USER,
                rootId: permission_entity_1.PermissionId.USER,
            },
        ];
        const permissionStatistic = [
            {
                id: permission_entity_1.PermissionId.STATISTIC,
                level: 1,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.STATISTIC],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.STATISTIC}`,
                name: 'Quản lý thống kê',
                parentId: 0,
                rootId: permission_entity_1.PermissionId.STATISTIC,
            },
            {
                id: permission_entity_1.PermissionId.STATISTIC_PRODUCT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.STATISTIC_PRODUCT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.STATISTIC}.${permission_entity_1.PermissionId.STATISTIC_PRODUCT}`,
                name: 'Xem thống kê sản phẩm',
                parentId: permission_entity_1.PermissionId.STATISTIC,
                rootId: permission_entity_1.PermissionId.STATISTIC,
            },
            {
                id: permission_entity_1.PermissionId.STATISTIC_PROCEDURE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.STATISTIC_PROCEDURE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.STATISTIC}.${permission_entity_1.PermissionId.STATISTIC_PROCEDURE}`,
                name: 'Xem thống kê dịch vụ',
                parentId: permission_entity_1.PermissionId.STATISTIC,
                rootId: permission_entity_1.PermissionId.STATISTIC,
            },
            {
                id: permission_entity_1.PermissionId.STATISTIC_CUSTOMER,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.STATISTIC_CUSTOMER],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.STATISTIC}.${permission_entity_1.PermissionId.STATISTIC_CUSTOMER}`,
                name: 'Xem thống kê khách hàng',
                parentId: permission_entity_1.PermissionId.STATISTIC,
                rootId: permission_entity_1.PermissionId.STATISTIC,
            },
            {
                id: permission_entity_1.PermissionId.STATISTIC_RECEIPT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.STATISTIC_RECEIPT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.STATISTIC}.${permission_entity_1.PermissionId.STATISTIC_RECEIPT}`,
                name: 'Xem thống kê phiếu nhập',
                parentId: permission_entity_1.PermissionId.STATISTIC,
                rootId: permission_entity_1.PermissionId.STATISTIC,
            },
            {
                id: permission_entity_1.PermissionId.STATISTIC_TICKET,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.STATISTIC_TICKET],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.STATISTIC}.${permission_entity_1.PermissionId.STATISTIC_TICKET}`,
                name: 'Xem thống kê lượt đón tiếp',
                parentId: permission_entity_1.PermissionId.STATISTIC,
                rootId: permission_entity_1.PermissionId.STATISTIC,
            },
        ];
        const permissionMasterData = [
            {
                id: permission_entity_1.PermissionId.MASTER_DATA,
                level: 1,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.MASTER_DATA],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.MASTER_DATA}`,
                name: 'Quản lý danh mục',
                parentId: 0,
                rootId: permission_entity_1.PermissionId.MASTER_DATA,
            },
            {
                id: permission_entity_1.PermissionId.MASTER_DATA_WAREHOUSE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.MASTER_DATA_WAREHOUSE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.MASTER_DATA}.${permission_entity_1.PermissionId.MASTER_DATA_WAREHOUSE}`,
                name: 'Quản lý danh sách kho',
                parentId: permission_entity_1.PermissionId.MASTER_DATA,
                rootId: permission_entity_1.PermissionId.MASTER_DATA,
            },
            {
                id: permission_entity_1.PermissionId.MASTER_DATA_PROCEDURE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.MASTER_DATA_PROCEDURE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.MASTER_DATA}.${permission_entity_1.PermissionId.MASTER_DATA_PROCEDURE}`,
                name: 'Quản lý dịch vụ',
                parentId: permission_entity_1.PermissionId.MASTER_DATA,
                rootId: permission_entity_1.PermissionId.MASTER_DATA,
            },
            {
                id: permission_entity_1.PermissionId.MASTER_DATA_LABORATORY,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.MASTER_DATA_LABORATORY],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.MASTER_DATA}.${permission_entity_1.PermissionId.MASTER_DATA_LABORATORY}`,
                name: 'Quản lý phiếu xét nghiệm',
                parentId: permission_entity_1.PermissionId.MASTER_DATA,
                rootId: permission_entity_1.PermissionId.MASTER_DATA,
            },
            {
                id: permission_entity_1.PermissionId.MASTER_DATA_RADIOLOGY,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.MASTER_DATA_RADIOLOGY],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.MASTER_DATA}.${permission_entity_1.PermissionId.MASTER_DATA_RADIOLOGY}`,
                name: 'Quản lý phiếu CĐHA',
                parentId: permission_entity_1.PermissionId.MASTER_DATA,
                rootId: permission_entity_1.PermissionId.MASTER_DATA,
            },
            {
                id: permission_entity_1.PermissionId.MASTER_DATA_TICKET_SOURCE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.MASTER_DATA_TICKET_SOURCE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.MASTER_DATA}.${permission_entity_1.PermissionId.MASTER_DATA_TICKET_SOURCE}`,
                name: 'Quản lý nguồn khách hàng',
                parentId: permission_entity_1.PermissionId.MASTER_DATA,
                rootId: permission_entity_1.PermissionId.MASTER_DATA,
            },
            {
                id: permission_entity_1.PermissionId.MASTER_DATA_PRINT_HTML,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.MASTER_DATA_PRINT_HTML],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.MASTER_DATA}.${permission_entity_1.PermissionId.MASTER_DATA_PRINT_HTML}`,
                name: 'Quản lý danh sách mẫu in',
                parentId: permission_entity_1.PermissionId.MASTER_DATA,
                rootId: permission_entity_1.PermissionId.MASTER_DATA,
            },
            {
                id: permission_entity_1.PermissionId.MASTER_DATA_PRESCRIPTION_SAMPLE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.MASTER_DATA_PRESCRIPTION_SAMPLE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.MASTER_DATA}.${permission_entity_1.PermissionId.MASTER_DATA_PRESCRIPTION_SAMPLE}`,
                name: 'Quản lý đơn thuốc mẫu',
                parentId: permission_entity_1.PermissionId.MASTER_DATA,
                rootId: permission_entity_1.PermissionId.MASTER_DATA,
            },
        ];
        const permissionProduct = [
            {
                id: permission_entity_1.PermissionId.PRODUCT,
                level: 1,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.PRODUCT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.PRODUCT}`,
                name: 'Quản lý sản phẩm',
                parentId: 0,
                rootId: permission_entity_1.PermissionId.PRODUCT,
            },
            {
                id: permission_entity_1.PermissionId.PRODUCT_READ,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.PRODUCT_READ],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.PRODUCT}.${permission_entity_1.PermissionId.PRODUCT_READ}`,
                name: 'Xem sản phẩm',
                parentId: permission_entity_1.PermissionId.PRODUCT,
                rootId: permission_entity_1.PermissionId.PRODUCT,
            },
            {
                id: permission_entity_1.PermissionId.PRODUCT_CREATE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.PRODUCT_CREATE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.PRODUCT}.${permission_entity_1.PermissionId.PRODUCT_CREATE}`,
                name: 'Thêm sản phẩm',
                parentId: permission_entity_1.PermissionId.PRODUCT,
                rootId: permission_entity_1.PermissionId.PRODUCT,
            },
            {
                id: permission_entity_1.PermissionId.PRODUCT_UPDATE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.PRODUCT_UPDATE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.PRODUCT}.${permission_entity_1.PermissionId.PRODUCT_UPDATE}`,
                name: 'Sửa sản phẩm',
                parentId: permission_entity_1.PermissionId.PRODUCT,
                rootId: permission_entity_1.PermissionId.PRODUCT,
            },
            {
                id: permission_entity_1.PermissionId.PRODUCT_DELETE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.PRODUCT_DELETE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.PRODUCT}.${permission_entity_1.PermissionId.PRODUCT_DELETE}`,
                name: 'Xóa sản phẩm',
                parentId: permission_entity_1.PermissionId.PRODUCT,
                rootId: permission_entity_1.PermissionId.PRODUCT,
            },
            {
                id: permission_entity_1.PermissionId.PRODUCT_DOWNLOAD_EXCEL,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.PRODUCT_DOWNLOAD_EXCEL],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.PRODUCT}.${permission_entity_1.PermissionId.PRODUCT_DOWNLOAD_EXCEL}`,
                name: 'Tải file Excel tất cả sản phẩm',
                parentId: permission_entity_1.PermissionId.PRODUCT,
                rootId: permission_entity_1.PermissionId.PRODUCT,
            },
            {
                id: permission_entity_1.PermissionId.BATCH_READ,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.BATCH_READ],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.PRODUCT}.${permission_entity_1.PermissionId.BATCH_READ}`,
                name: 'Xem lô hàng',
                parentId: permission_entity_1.PermissionId.PRODUCT,
                rootId: permission_entity_1.PermissionId.PRODUCT,
            },
            {
                id: permission_entity_1.PermissionId.BATCH_CREATE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.BATCH_CREATE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.PRODUCT}.${permission_entity_1.PermissionId.BATCH_CREATE}`,
                name: 'Thêm lô hàng',
                parentId: permission_entity_1.PermissionId.PRODUCT,
                rootId: permission_entity_1.PermissionId.PRODUCT,
            },
            {
                id: permission_entity_1.PermissionId.BATCH_UPDATE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.BATCH_UPDATE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.PRODUCT}.${permission_entity_1.PermissionId.BATCH_UPDATE}`,
                name: 'Sửa lô hàng',
                parentId: permission_entity_1.PermissionId.PRODUCT,
                rootId: permission_entity_1.PermissionId.PRODUCT,
            },
            {
                id: permission_entity_1.PermissionId.BATCH_DELETE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.BATCH_DELETE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.PRODUCT}.${permission_entity_1.PermissionId.BATCH_DELETE}`,
                name: 'Xóa lô hàng',
                parentId: permission_entity_1.PermissionId.PRODUCT,
                rootId: permission_entity_1.PermissionId.PRODUCT,
            },
            {
                id: permission_entity_1.PermissionId.READ_COST_PRICE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.READ_COST_PRICE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.PRODUCT}.${permission_entity_1.PermissionId.READ_COST_PRICE}`,
                name: 'Xem giá nhập',
                parentId: permission_entity_1.PermissionId.PRODUCT,
                rootId: permission_entity_1.PermissionId.PRODUCT,
            },
            {
                id: permission_entity_1.PermissionId.READ_MOVEMENT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.READ_MOVEMENT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.PRODUCT}.${permission_entity_1.PermissionId.READ_MOVEMENT}`,
                name: 'Xem lịch sử nhập xuất',
                parentId: permission_entity_1.PermissionId.PRODUCT,
                rootId: permission_entity_1.PermissionId.PRODUCT,
            },
        ];
        const permissionDistributor = [
            {
                id: permission_entity_1.PermissionId.DISTRIBUTOR,
                level: 1,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.DISTRIBUTOR],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.DISTRIBUTOR}`,
                name: 'Quản lý nhà cung cấp',
                parentId: 0,
                rootId: permission_entity_1.PermissionId.DISTRIBUTOR,
            },
            {
                id: permission_entity_1.PermissionId.DISTRIBUTOR_READ,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.DISTRIBUTOR_READ],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.DISTRIBUTOR}.${permission_entity_1.PermissionId.DISTRIBUTOR_READ}`,
                name: 'Xem nhà cung cấp',
                parentId: permission_entity_1.PermissionId.DISTRIBUTOR,
                rootId: permission_entity_1.PermissionId.DISTRIBUTOR,
            },
            {
                id: permission_entity_1.PermissionId.DISTRIBUTOR_CREATE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.DISTRIBUTOR_CREATE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.DISTRIBUTOR}.${permission_entity_1.PermissionId.DISTRIBUTOR_CREATE}`,
                name: 'Thêm nhà cung cấp',
                parentId: permission_entity_1.PermissionId.DISTRIBUTOR,
                rootId: permission_entity_1.PermissionId.DISTRIBUTOR,
            },
            {
                id: permission_entity_1.PermissionId.DISTRIBUTOR_UPDATE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.DISTRIBUTOR_UPDATE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.DISTRIBUTOR}.${permission_entity_1.PermissionId.DISTRIBUTOR_UPDATE}`,
                name: 'Sửa nhà cung cấp',
                parentId: permission_entity_1.PermissionId.DISTRIBUTOR,
                rootId: permission_entity_1.PermissionId.DISTRIBUTOR,
            },
            {
                id: permission_entity_1.PermissionId.DISTRIBUTOR_DELETE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.DISTRIBUTOR_DELETE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.DISTRIBUTOR}.${permission_entity_1.PermissionId.DISTRIBUTOR_DELETE}`,
                name: 'Xóa nhà cung cấp',
                parentId: permission_entity_1.PermissionId.DISTRIBUTOR,
                rootId: permission_entity_1.PermissionId.DISTRIBUTOR,
            },
            {
                id: permission_entity_1.PermissionId.DISTRIBUTOR_PAYMENT_READ,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.DISTRIBUTOR_PAYMENT_READ],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.DISTRIBUTOR}.${permission_entity_1.PermissionId.DISTRIBUTOR_PAYMENT_READ}`,
                name: 'Xem lịch sử thanh toán',
                parentId: permission_entity_1.PermissionId.DISTRIBUTOR,
                rootId: permission_entity_1.PermissionId.DISTRIBUTOR,
            },
            {
                id: permission_entity_1.PermissionId.DISTRIBUTOR_PAYMENT_PAY_DEBT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.DISTRIBUTOR_PAYMENT_PAY_DEBT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.DISTRIBUTOR}.${permission_entity_1.PermissionId.DISTRIBUTOR_PAYMENT_PAY_DEBT}`,
                name: 'Thực hiện trả nợ',
                parentId: permission_entity_1.PermissionId.DISTRIBUTOR,
                rootId: permission_entity_1.PermissionId.DISTRIBUTOR,
            },
        ];
        const permissionCustomer = [
            {
                id: permission_entity_1.PermissionId.CUSTOMER,
                level: 1,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.CUSTOMER],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.CUSTOMER}`,
                name: 'Quản lý khách hàng',
                parentId: 0,
                rootId: permission_entity_1.PermissionId.CUSTOMER,
            },
            {
                id: permission_entity_1.PermissionId.CUSTOMER_READ,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.CUSTOMER_READ],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.CUSTOMER}.${permission_entity_1.PermissionId.CUSTOMER_READ}`,
                name: 'Xem khách hàng',
                parentId: permission_entity_1.PermissionId.CUSTOMER,
                rootId: permission_entity_1.PermissionId.CUSTOMER,
            },
            {
                id: permission_entity_1.PermissionId.CUSTOMER_CREATE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.CUSTOMER_CREATE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.CUSTOMER}.${permission_entity_1.PermissionId.CUSTOMER_CREATE}`,
                name: 'Thêm khách hàng',
                parentId: permission_entity_1.PermissionId.CUSTOMER,
                rootId: permission_entity_1.PermissionId.CUSTOMER,
            },
            {
                id: permission_entity_1.PermissionId.CUSTOMER_UPDATE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.CUSTOMER_UPDATE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.CUSTOMER}.${permission_entity_1.PermissionId.CUSTOMER_UPDATE}`,
                name: 'Sửa khách hàng',
                parentId: permission_entity_1.PermissionId.CUSTOMER,
                rootId: permission_entity_1.PermissionId.CUSTOMER,
            },
            {
                id: permission_entity_1.PermissionId.CUSTOMER_DELETE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.CUSTOMER_DELETE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.CUSTOMER}.${permission_entity_1.PermissionId.CUSTOMER_DELETE}`,
                name: 'Xóa khách hàng',
                parentId: permission_entity_1.PermissionId.CUSTOMER,
                rootId: permission_entity_1.PermissionId.CUSTOMER,
            },
            {
                id: permission_entity_1.PermissionId.CUSTOMER_DOWNLOAD_EXCEL,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.CUSTOMER_DOWNLOAD_EXCEL],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.CUSTOMER}.${permission_entity_1.PermissionId.CUSTOMER_DOWNLOAD_EXCEL}`,
                name: 'Tải file Excel tất cả khách hàng',
                parentId: permission_entity_1.PermissionId.CUSTOMER,
                rootId: permission_entity_1.PermissionId.CUSTOMER,
            },
            {
                id: permission_entity_1.PermissionId.CUSTOMER_PAYMENT_READ,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.CUSTOMER_PAYMENT_READ],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.CUSTOMER}.${permission_entity_1.PermissionId.CUSTOMER_PAYMENT_READ}`,
                name: 'Xem lịch sử thanh toán',
                parentId: permission_entity_1.PermissionId.CUSTOMER,
                rootId: permission_entity_1.PermissionId.CUSTOMER,
            },
            {
                id: permission_entity_1.PermissionId.CUSTOMER_PAY_DEBT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.CUSTOMER_PAY_DEBT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.CUSTOMER}.${permission_entity_1.PermissionId.CUSTOMER_PAY_DEBT}`,
                name: 'Thực hiện trả nợ',
                parentId: permission_entity_1.PermissionId.CUSTOMER,
                rootId: permission_entity_1.PermissionId.CUSTOMER,
            },
        ];
        const permissionReceipt = [
            {
                id: permission_entity_1.PermissionId.RECEIPT,
                level: 1,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.RECEIPT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.RECEIPT}`,
                name: 'Quản lý phiếu nhập hàng',
                parentId: 0,
                rootId: permission_entity_1.PermissionId.RECEIPT,
            },
            {
                id: permission_entity_1.PermissionId.RECEIPT_READ,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.RECEIPT_READ],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.RECEIPT}.${permission_entity_1.PermissionId.RECEIPT_READ}`,
                name: 'Xem phiếu nhập hàng',
                parentId: permission_entity_1.PermissionId.RECEIPT,
                rootId: permission_entity_1.PermissionId.RECEIPT,
            },
            {
                id: permission_entity_1.PermissionId.RECEIPT_CREATE_DRAFT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.RECEIPT_CREATE_DRAFT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.RECEIPT}.${permission_entity_1.PermissionId.RECEIPT_CREATE_DRAFT}`,
                name: 'Tạo phiếu nháp',
                parentId: permission_entity_1.PermissionId.RECEIPT,
                rootId: permission_entity_1.PermissionId.RECEIPT,
            },
            {
                id: permission_entity_1.PermissionId.RECEIPT_UPDATE_DRAFT_PREPAYMENT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.RECEIPT_UPDATE_DRAFT_PREPAYMENT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.RECEIPT}.${permission_entity_1.PermissionId.RECEIPT_UPDATE_DRAFT_PREPAYMENT}`,
                name: 'Sửa phiếu nhập hàng nháp và phiếu nhập hàng tạm ứng',
                parentId: permission_entity_1.PermissionId.RECEIPT,
                rootId: permission_entity_1.PermissionId.RECEIPT,
            },
            {
                id: permission_entity_1.PermissionId.RECEIPT_DESTROY_DRAFT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.RECEIPT_DESTROY_DRAFT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.RECEIPT}.${permission_entity_1.PermissionId.RECEIPT_DESTROY_DRAFT}`,
                name: 'Xóa phiếu nháp',
                parentId: permission_entity_1.PermissionId.RECEIPT,
                rootId: permission_entity_1.PermissionId.RECEIPT,
            },
            {
                id: permission_entity_1.PermissionId.RECEIPT_PAYMENT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.RECEIPT_PAYMENT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.RECEIPT}.${permission_entity_1.PermissionId.RECEIPT_PAYMENT}`,
                name: 'Thanh toán',
                parentId: permission_entity_1.PermissionId.RECEIPT,
                rootId: permission_entity_1.PermissionId.RECEIPT,
            },
            {
                id: permission_entity_1.PermissionId.RECEIPT_REFUND_PAYMENT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.RECEIPT_REFUND_PAYMENT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.RECEIPT}.${permission_entity_1.PermissionId.RECEIPT_REFUND_PAYMENT}`,
                name: 'Hoàn trả tiền',
                parentId: permission_entity_1.PermissionId.RECEIPT,
                rootId: permission_entity_1.PermissionId.RECEIPT,
            },
            {
                id: permission_entity_1.PermissionId.RECEIPT_PAY_DEBT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.RECEIPT_PAY_DEBT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.RECEIPT}.${permission_entity_1.PermissionId.RECEIPT_PAY_DEBT}`,
                name: 'Trả nợ',
                parentId: permission_entity_1.PermissionId.RECEIPT,
                rootId: permission_entity_1.PermissionId.RECEIPT,
            },
            {
                id: permission_entity_1.PermissionId.RECEIPT_SEND_PRODUCT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.RECEIPT_SEND_PRODUCT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.RECEIPT}.${permission_entity_1.PermissionId.RECEIPT_SEND_PRODUCT}`,
                name: 'Nhập hàng',
                parentId: permission_entity_1.PermissionId.RECEIPT,
                rootId: permission_entity_1.PermissionId.RECEIPT,
            },
            {
                id: permission_entity_1.PermissionId.RECEIPT_CANCEL,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.RECEIPT_CANCEL],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.RECEIPT}.${permission_entity_1.PermissionId.RECEIPT_CANCEL}`,
                name: 'Hủy phiếu',
                parentId: permission_entity_1.PermissionId.RECEIPT,
                rootId: permission_entity_1.PermissionId.RECEIPT,
            },
        ];
        const permissionAppointment = [
            {
                id: permission_entity_1.PermissionId.APPOINTMENT,
                level: 1,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.APPOINTMENT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.APPOINTMENT}`,
                name: 'Quản lý hẹn khám',
                parentId: 0,
                rootId: permission_entity_1.PermissionId.APPOINTMENT,
            },
            {
                id: permission_entity_1.PermissionId.APPOINTMENT_READ,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.APPOINTMENT_READ],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.APPOINTMENT}.${permission_entity_1.PermissionId.APPOINTMENT_READ}`,
                name: 'Xem lịch hẹn khám',
                parentId: permission_entity_1.PermissionId.APPOINTMENT,
                rootId: permission_entity_1.PermissionId.APPOINTMENT,
            },
            {
                id: permission_entity_1.PermissionId.APPOINTMENT_CREATE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.APPOINTMENT_CREATE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.APPOINTMENT}.${permission_entity_1.PermissionId.APPOINTMENT_CREATE}`,
                name: 'Tạo lịch hẹn mới',
                parentId: permission_entity_1.PermissionId.APPOINTMENT,
                rootId: permission_entity_1.PermissionId.APPOINTMENT,
            },
            {
                id: permission_entity_1.PermissionId.APPOINTMENT_UPDATE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.APPOINTMENT_UPDATE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.APPOINTMENT}.${permission_entity_1.PermissionId.APPOINTMENT_UPDATE}`,
                name: 'Sửa lịch hẹn',
                parentId: permission_entity_1.PermissionId.APPOINTMENT,
                rootId: permission_entity_1.PermissionId.APPOINTMENT,
            },
            {
                id: permission_entity_1.PermissionId.APPOINTMENT_DELETE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.APPOINTMENT_DELETE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.APPOINTMENT}.${permission_entity_1.PermissionId.APPOINTMENT_DELETE}`,
                name: 'Xóa lịch hẹn',
                parentId: permission_entity_1.PermissionId.APPOINTMENT,
                rootId: permission_entity_1.PermissionId.APPOINTMENT,
            },
            {
                id: permission_entity_1.PermissionId.APPOINTMENT_REGISTER_TICKET,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.APPOINTMENT_REGISTER_TICKET],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.APPOINTMENT}.${permission_entity_1.PermissionId.APPOINTMENT_REGISTER_TICKET}`,
                name: 'Đón khách hàng đến và tạo phiếu đón tiếp',
                parentId: permission_entity_1.PermissionId.APPOINTMENT,
                rootId: permission_entity_1.PermissionId.APPOINTMENT,
            },
        ];
        const permissionTicketProcedureResult = [
            {
                id: permission_entity_1.PermissionId.TICKET_PROCEDURE_RESULT,
                level: 1,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_PROCEDURE_RESULT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_PROCEDURE_RESULT}`,
                name: 'Quản lý trả kết quả phiếu dịch vụ',
                parentId: 0,
                rootId: permission_entity_1.PermissionId.TICKET_PROCEDURE_RESULT,
            },
        ];
        const permissionTicketLaboratoryResult = [
            {
                id: permission_entity_1.PermissionId.TICKET_LABORATORY_RESULT,
                level: 1,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_LABORATORY_RESULT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_LABORATORY_RESULT}`,
                name: 'Quản lý trả kết quả phiếu xét nghiệm',
                parentId: 0,
                rootId: permission_entity_1.PermissionId.TICKET_LABORATORY_RESULT,
            },
        ];
        const permissionTicketRadiologyResult = [
            {
                id: permission_entity_1.PermissionId.TICKET_RADIOLOGY_RESULT,
                level: 1,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_RADIOLOGY_RESULT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_RADIOLOGY_RESULT}`,
                name: 'Quản lý trả kết quả phiếu CĐHA',
                parentId: 0,
                rootId: permission_entity_1.PermissionId.TICKET_RADIOLOGY_RESULT,
            },
        ];
        const permissionTicketOrder = [
            {
                id: permission_entity_1.PermissionId.TICKET_ORDER,
                level: 1,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_ORDER],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_ORDER}`,
                name: 'Quản lý bán hàng',
                parentId: 0,
                rootId: permission_entity_1.PermissionId.TICKET_ORDER,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_ORDER_READ,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_ORDER_READ],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_ORDER}.${permission_entity_1.PermissionId.TICKET_ORDER_READ}`,
                name: 'Xem hóa đơn',
                parentId: permission_entity_1.PermissionId.TICKET_ORDER,
                rootId: permission_entity_1.PermissionId.TICKET_ORDER,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_ORDER_CREATE_DRAFT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_ORDER_CREATE_DRAFT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_ORDER}.${permission_entity_1.PermissionId.TICKET_ORDER_CREATE_DRAFT}`,
                name: 'Tạo hóa đơn nháp',
                parentId: permission_entity_1.PermissionId.TICKET_ORDER,
                rootId: permission_entity_1.PermissionId.TICKET_ORDER,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_ORDER_UPDATE_DRAFT_APPROVED,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_ORDER_UPDATE_DRAFT_APPROVED],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_ORDER}.${permission_entity_1.PermissionId.TICKET_ORDER_UPDATE_DRAFT_APPROVED}`,
                name: 'Sửa hóa đơn nháp, hóa đơn tạm ứng',
                parentId: permission_entity_1.PermissionId.TICKET_ORDER,
                rootId: permission_entity_1.PermissionId.TICKET_ORDER,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_ORDER_DESTROY_DRAFT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_ORDER_DESTROY_DRAFT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_ORDER}.${permission_entity_1.PermissionId.TICKET_ORDER_DESTROY_DRAFT}`,
                name: 'Xóa hóa đơn nháp',
                parentId: permission_entity_1.PermissionId.TICKET_ORDER,
                rootId: permission_entity_1.PermissionId.TICKET_ORDER,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_ORDER_CREATE_DEBT_SUCCESS,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_ORDER_CREATE_DEBT_SUCCESS],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_ORDER}.${permission_entity_1.PermissionId.TICKET_ORDER_CREATE_DEBT_SUCCESS}`,
                name: 'Tạo hóa đơn bán hàng nhanh',
                parentId: permission_entity_1.PermissionId.TICKET_ORDER,
                rootId: permission_entity_1.PermissionId.TICKET_ORDER,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_ORDER_UPDATE_DEBT_SUCCESS,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_ORDER_UPDATE_DEBT_SUCCESS],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_ORDER}.${permission_entity_1.PermissionId.TICKET_ORDER_UPDATE_DEBT_SUCCESS}`,
                name: 'Sửa hóa đơn bán hàng nhanh',
                parentId: permission_entity_1.PermissionId.TICKET_ORDER,
                rootId: permission_entity_1.PermissionId.TICKET_ORDER,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_ORDER_PREPAYMENT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_ORDER_PREPAYMENT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_ORDER}.${permission_entity_1.PermissionId.TICKET_ORDER_PREPAYMENT}`,
                name: 'Tạm ứng',
                parentId: permission_entity_1.PermissionId.TICKET_ORDER,
                rootId: permission_entity_1.PermissionId.TICKET_ORDER,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_ORDER_REFUND_OVERPAID,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_ORDER_REFUND_OVERPAID],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_ORDER}.${permission_entity_1.PermissionId.TICKET_ORDER_REFUND_OVERPAID}`,
                name: 'Hoàn trả tiền thừa',
                parentId: permission_entity_1.PermissionId.TICKET_ORDER,
                rootId: permission_entity_1.PermissionId.TICKET_ORDER,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_ORDER_SEND_PRODUCT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_ORDER_SEND_PRODUCT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_ORDER}.${permission_entity_1.PermissionId.TICKET_ORDER_SEND_PRODUCT}`,
                name: 'Gửi hàng',
                parentId: permission_entity_1.PermissionId.TICKET_ORDER,
                rootId: permission_entity_1.PermissionId.TICKET_ORDER,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_ORDER_RETURN_PRODUCT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_ORDER_RETURN_PRODUCT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_ORDER}.${permission_entity_1.PermissionId.TICKET_ORDER_RETURN_PRODUCT}`,
                name: 'Hoàn trả hàng',
                parentId: permission_entity_1.PermissionId.TICKET_ORDER,
                rootId: permission_entity_1.PermissionId.TICKET_ORDER,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_ORDER_PAYMENT_AND_CLOSE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_ORDER_PAYMENT_AND_CLOSE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_ORDER}.${permission_entity_1.PermissionId.TICKET_ORDER_PAYMENT_AND_CLOSE}`,
                name: 'Đóng phiếu',
                parentId: permission_entity_1.PermissionId.TICKET_ORDER,
                rootId: permission_entity_1.PermissionId.TICKET_ORDER,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_ORDER_PAY_DEBT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_ORDER_PAY_DEBT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_ORDER}.${permission_entity_1.PermissionId.TICKET_ORDER_PAY_DEBT}`,
                name: 'Trả nợ',
                parentId: permission_entity_1.PermissionId.TICKET_ORDER,
                rootId: permission_entity_1.PermissionId.TICKET_ORDER,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_ORDER_REOPEN,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_ORDER_REOPEN],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_ORDER}.${permission_entity_1.PermissionId.TICKET_ORDER_REOPEN}`,
                name: 'Mở lại phiếu',
                parentId: permission_entity_1.PermissionId.TICKET_ORDER,
                rootId: permission_entity_1.PermissionId.TICKET_ORDER,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_ORDER_CANCEL,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_ORDER_CANCEL],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_ORDER}.${permission_entity_1.PermissionId.TICKET_ORDER_CANCEL}`,
                name: 'Hủy đơn',
                parentId: permission_entity_1.PermissionId.TICKET_ORDER,
                rootId: permission_entity_1.PermissionId.TICKET_ORDER,
            },
        ];
        const permissionTicketClinic = [
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC,
                level: 1,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}`,
                name: 'Quản lý phòng khám',
                parentId: 0,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_READ,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_READ],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_READ}`,
                name: 'Xem phiếu khám',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_CREATE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_CREATE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_CREATE}`,
                name: 'Đăng ký khám mới',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_DESTROY_DRAFT_SCHEDULE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_DESTROY_DRAFT_SCHEDULE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_DESTROY_DRAFT_SCHEDULE}`,
                name: 'Xóa phiếu khám',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_START_CHECKUP,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_START_CHECKUP],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_START_CHECKUP}`,
                name: 'Bắt đầu vào khám',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_PROCEDURE_LIST,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_PROCEDURE_LIST],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_PROCEDURE_LIST}`,
                name: 'Chỉ định dịch vụ',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_LABORATORY_LIST,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_LABORATORY_LIST],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_LABORATORY_LIST}`,
                name: 'Chỉ định Xét nghiệm',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_RADIOLOGY_LIST,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_RADIOLOGY_LIST],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_RADIOLOGY_LIST}`,
                name: 'Chỉ định CĐHA',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_PRODUCT_CONSUMABLE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_PRODUCT_CONSUMABLE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_PRODUCT_CONSUMABLE}`,
                name: 'Sửa danh sách vật tư tiêu hao',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_PRODUCT_PRESCRIPTION,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_PRODUCT_PRESCRIPTION],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_PRODUCT_PRESCRIPTION}`,
                name: 'Kê đơn thuốc',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_ITEMS_MONEY,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_ITEMS_MONEY],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_ITEMS_MONEY}`,
                name: 'Sửa số lượng và chiết khấu',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_PREPAYMENT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_PREPAYMENT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_PREPAYMENT}`,
                name: 'Tạm ứng',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_REFUND_OVERPAID,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_REFUND_OVERPAID],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_REFUND_OVERPAID}`,
                name: 'Hoàn trả tiền thừa',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_PAY_DEBT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_PAY_DEBT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_PAY_DEBT}`,
                name: 'Trả nợ',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_SEND_PRODUCT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_SEND_PRODUCT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_SEND_PRODUCT}`,
                name: 'Xuất thuốc',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_RETURN_PRODUCT,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_RETURN_PRODUCT],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_RETURN_PRODUCT}`,
                name: 'Hoàn trả thuốc',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_CLOSE,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_CLOSE],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_CLOSE}`,
                name: 'Đóng phiếu khám',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_REOPEN,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_REOPEN],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_REOPEN}`,
                name: 'Mở lại phiếu khám',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_DIAGNOSIS_BASIC,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_DIAGNOSIS_BASIC],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_DIAGNOSIS_BASIC}`,
                name: 'Khám và chẩn đoán',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
            {
                id: permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_DIAGNOSIS_SPECIAL,
                level: 2,
                code: permission_entity_1.PermissionId[permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_DIAGNOSIS_SPECIAL],
                isActive: 1,
                pathId: `${permission_entity_1.PermissionId.TICKET_CLINIC}.${permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_DIAGNOSIS_SPECIAL}`,
                name: 'Khám chuyên sâu',
                parentId: permission_entity_1.PermissionId.TICKET_CLINIC,
                rootId: permission_entity_1.PermissionId.TICKET_CLINIC,
            },
        ];
        await this.permissionRepository.delete({});
        const { idsEffect } = await this.permissionRepository.upsert([
            ...permissionOrganization,
            ...permissionRole,
            ...permissionUser,
            ...permissionStatistic,
            ...permissionMasterData,
            ...permissionProduct,
            ...permissionDistributor,
            ...permissionCustomer,
            ...permissionReceipt,
            ...permissionAppointment,
            ...permissionTicketProcedureResult,
            ...permissionTicketLaboratoryResult,
            ...permissionTicketRadiologyResult,
            ...permissionTicketOrder,
            ...permissionTicketClinic,
        ]);
        this.cacheDataService.reloadPermissionAll();
        return { data: { idsEffect } };
    }
};
exports.ApiPermissionService = ApiPermissionService;
exports.ApiPermissionService = ApiPermissionService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _a : Object, typeof (_b = typeof permission_repository_1.PermissionRepository !== "undefined" && permission_repository_1.PermissionRepository) === "function" ? _b : Object])
], ApiPermissionService);


/***/ }),
/* 321 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(322), exports);
__exportStar(__webpack_require__(323), exports);


/***/ }),
/* 322 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PermissionGetOneQuery = exports.PermissionGetManyQuery = exports.PermissionPaginationQuery = exports.PermissionGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const permission_options_request_1 = __webpack_require__(323);
class PermissionGetQuery {
}
exports.PermissionGetQuery = PermissionGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(permission_options_request_1.PermissionRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof permission_options_request_1.PermissionRelationQuery !== "undefined" && permission_options_request_1.PermissionRelationQuery) === "function" ? _a : Object)
], PermissionGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            level: { EQUAL: 1 },
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(permission_options_request_1.PermissionFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof permission_options_request_1.PermissionFilterQuery !== "undefined" && permission_options_request_1.PermissionFilterQuery) === "function" ? _b : Object)
], PermissionGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            id: 'ASC',
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(permission_options_request_1.PermissionSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof permission_options_request_1.PermissionSortQuery !== "undefined" && permission_options_request_1.PermissionSortQuery) === "function" ? _c : Object)
], PermissionGetQuery.prototype, "sort", void 0);
class PermissionPaginationQuery extends (0, swagger_1.IntersectionType)(PermissionGetQuery, query_1.PaginationQuery) {
}
exports.PermissionPaginationQuery = PermissionPaginationQuery;
class PermissionGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(PermissionGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.PermissionGetManyQuery = PermissionGetManyQuery;
class PermissionGetOneQuery extends (0, swagger_1.PickType)(PermissionGetQuery, ['relation']) {
}
exports.PermissionGetOneQuery = PermissionGetOneQuery;


/***/ }),
/* 323 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PermissionSortQuery = exports.PermissionFilterQuery = exports.PermissionRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const dto_1 = __webpack_require__(195);
const query_1 = __webpack_require__(185);
class PermissionRelationQuery {
}
exports.PermissionRelationQuery = PermissionRelationQuery;
class PermissionFilterQuery {
}
exports.PermissionFilterQuery = PermissionFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => dto_1.ConditionNumber),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof dto_1.ConditionNumber !== "undefined" && dto_1.ConditionNumber) === "function" ? _a : Object)
], PermissionFilterQuery.prototype, "level", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => dto_1.ConditionNumber),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof dto_1.ConditionNumber !== "undefined" && dto_1.ConditionNumber) === "function" ? _b : Object)
], PermissionFilterQuery.prototype, "rootId", void 0);
class PermissionSortQuery extends query_1.SortQuery {
}
exports.PermissionSortQuery = PermissionSortQuery;


/***/ }),
/* 324 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiPrescriptionSampleModule = void 0;
const common_1 = __webpack_require__(3);
const api_prescription_sample_controller_1 = __webpack_require__(325);
const api_prescription_sample_service_1 = __webpack_require__(326);
let ApiPrescriptionSampleModule = class ApiPrescriptionSampleModule {
};
exports.ApiPrescriptionSampleModule = ApiPrescriptionSampleModule;
exports.ApiPrescriptionSampleModule = ApiPrescriptionSampleModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_prescription_sample_controller_1.ApiPrescriptionSampleController],
        providers: [api_prescription_sample_service_1.ApiPrescriptionSampleService],
    })
], ApiPrescriptionSampleModule);


/***/ }),
/* 325 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiPrescriptionSampleController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_prescription_sample_service_1 = __webpack_require__(326);
const request_1 = __webpack_require__(327);
let ApiPrescriptionSampleController = class ApiPrescriptionSampleController {
    constructor(apiPrescriptionSampleService) {
        this.apiPrescriptionSampleService = apiPrescriptionSampleService;
    }
    pagination({ oid }, query) {
        return this.apiPrescriptionSampleService.pagination(oid, query);
    }
    list({ oid }, query) {
        return this.apiPrescriptionSampleService.getMany(oid, query);
    }
    findOne({ oid }, { id }) {
        return this.apiPrescriptionSampleService.getOne(oid, id);
    }
    async createOne({ oid }, body) {
        return await this.apiPrescriptionSampleService.createOne(oid, body);
    }
    async updateOne({ oid }, { id }, body) {
        return await this.apiPrescriptionSampleService.updateOne(oid, id, body);
    }
    async destroyOne({ oid }, { id }) {
        return await this.apiPrescriptionSampleService.destroyOne(oid, id);
    }
};
exports.ApiPrescriptionSampleController = ApiPrescriptionSampleController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.PrescriptionSamplePaginationQuery !== "undefined" && request_1.PrescriptionSamplePaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiPrescriptionSampleController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.PrescriptionSampleGetManyQuery !== "undefined" && request_1.PrescriptionSampleGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", void 0)
], ApiPrescriptionSampleController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object]),
    __metadata("design:returntype", void 0)
], ApiPrescriptionSampleController.prototype, "findOne", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_PRESCRIPTION_SAMPLE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_h = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _h : Object, typeof (_j = typeof request_1.PrescriptionSampleCreateBody !== "undefined" && request_1.PrescriptionSampleCreateBody) === "function" ? _j : Object]),
    __metadata("design:returntype", Promise)
], ApiPrescriptionSampleController.prototype, "createOne", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_PRESCRIPTION_SAMPLE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_k = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _k : Object, typeof (_l = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _l : Object, typeof (_m = typeof request_1.PrescriptionSampleUpdateBody !== "undefined" && request_1.PrescriptionSampleUpdateBody) === "function" ? _m : Object]),
    __metadata("design:returntype", Promise)
], ApiPrescriptionSampleController.prototype, "updateOne", null);
__decorate([
    (0, common_1.Delete)('destroy/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_PRESCRIPTION_SAMPLE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_o = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _o : Object, typeof (_p = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _p : Object]),
    __metadata("design:returntype", Promise)
], ApiPrescriptionSampleController.prototype, "destroyOne", null);
exports.ApiPrescriptionSampleController = ApiPrescriptionSampleController = __decorate([
    (0, swagger_1.ApiTags)('PrescriptionSample'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('prescription-sample'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_prescription_sample_service_1.ApiPrescriptionSampleService !== "undefined" && api_prescription_sample_service_1.ApiPrescriptionSampleService) === "function" ? _a : Object])
], ApiPrescriptionSampleController);


/***/ }),
/* 326 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiPrescriptionSampleService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const object_helper_1 = __webpack_require__(85);
const prescription_sample_repository_1 = __webpack_require__(107);
const product_repository_1 = __webpack_require__(113);
let ApiPrescriptionSampleService = class ApiPrescriptionSampleService {
    constructor(prescriptionSampleRepository, productRepository) {
        this.prescriptionSampleRepository = prescriptionSampleRepository;
        this.productRepository = productRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { data, total } = await this.prescriptionSampleRepository.pagination({
            page,
            limit,
            condition: {
                oid,
            },
            sort,
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getMany(oid, query) {
        const { limit, filter, relation, sort } = query;
        const data = await this.prescriptionSampleRepository.findMany({
            condition: {
                oid,
            },
            limit,
            sort,
        });
        if (relation === null || relation === void 0 ? void 0 : relation.medicineList) {
            const productIdList = data
                .map((i) => {
                try {
                    i.medicineList = JSON.parse(i.medicines || '[]');
                }
                catch (error) {
                    i.medicineList = [];
                }
                return i.medicineList;
            })
                .flat()
                .map((i) => i.productId);
            const productList = await this.productRepository.findManyBy({
                oid,
                id: { IN: productIdList },
            });
            const productMap = (0, object_helper_1.arrayToKeyValue)(productList, 'id');
            data.forEach((i) => {
                i.medicineList.forEach((j) => {
                    j.product = productMap[j.productId] || null;
                });
            });
        }
        return { data };
    }
    async getOne(oid, id) {
        const prescriptionSample = await this.prescriptionSampleRepository.findOneBy({ oid, id });
        if (!prescriptionSample)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        return { data: { prescriptionSample } };
    }
    async createOne(oid, body) {
        const prescriptionSample = await this.prescriptionSampleRepository.insertOneFullFieldAndReturnEntity(Object.assign(Object.assign({}, body), { oid }));
        return { data: { prescriptionSample } };
    }
    async updateOne(oid, id, body) {
        const prescriptionSampleList = await this.prescriptionSampleRepository.updateAndReturnEntity({ id, oid }, body);
        return { data: { prescriptionSample: prescriptionSampleList[0] } };
    }
    async destroyOne(oid, id) {
        const affected = await this.prescriptionSampleRepository.delete({ oid, id });
        if (affected === 0) {
            throw new exception_filter_1.BusinessException('error.Database.DeleteFailed');
        }
        return { data: true };
    }
};
exports.ApiPrescriptionSampleService = ApiPrescriptionSampleService;
exports.ApiPrescriptionSampleService = ApiPrescriptionSampleService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof prescription_sample_repository_1.PrescriptionSampleRepository !== "undefined" && prescription_sample_repository_1.PrescriptionSampleRepository) === "function" ? _a : Object, typeof (_b = typeof product_repository_1.ProductRepository !== "undefined" && product_repository_1.ProductRepository) === "function" ? _b : Object])
], ApiPrescriptionSampleService);


/***/ }),
/* 327 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(328), exports);
__exportStar(__webpack_require__(329), exports);
__exportStar(__webpack_require__(330), exports);


/***/ }),
/* 328 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PrescriptionSampleSortQuery = exports.PrescriptionSampleFilterQuery = exports.PrescriptionSampleRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
class PrescriptionSampleRelationQuery {
}
exports.PrescriptionSampleRelationQuery = PrescriptionSampleRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], PrescriptionSampleRelationQuery.prototype, "medicineList", void 0);
class PrescriptionSampleFilterQuery {
}
exports.PrescriptionSampleFilterQuery = PrescriptionSampleFilterQuery;
class PrescriptionSampleSortQuery extends query_1.SortQuery {
}
exports.PrescriptionSampleSortQuery = PrescriptionSampleSortQuery;


/***/ }),
/* 329 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PrescriptionSampleUpdateBody = exports.PrescriptionSampleCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class PrescriptionSampleCreateBody {
}
exports.PrescriptionSampleCreateBody = PrescriptionSampleCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 105000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], PrescriptionSampleCreateBody.prototype, "priority", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Nhóm ABC' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], PrescriptionSampleCreateBody.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], PrescriptionSampleCreateBody.prototype, "medicines", void 0);
class PrescriptionSampleUpdateBody extends (0, swagger_1.PartialType)(PrescriptionSampleCreateBody) {
}
exports.PrescriptionSampleUpdateBody = PrescriptionSampleUpdateBody;


/***/ }),
/* 330 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PrescriptionSampleGetOneQuery = exports.PrescriptionSampleGetManyQuery = exports.PrescriptionSamplePaginationQuery = exports.PrescriptionSampleGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const prescription_sample_options_request_1 = __webpack_require__(328);
class PrescriptionSampleGetQuery {
}
exports.PrescriptionSampleGetQuery = PrescriptionSampleGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({}),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(prescription_sample_options_request_1.PrescriptionSampleRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof prescription_sample_options_request_1.PrescriptionSampleRelationQuery !== "undefined" && prescription_sample_options_request_1.PrescriptionSampleRelationQuery) === "function" ? _a : Object)
], PrescriptionSampleGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({}),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(prescription_sample_options_request_1.PrescriptionSampleFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof prescription_sample_options_request_1.PrescriptionSampleFilterQuery !== "undefined" && prescription_sample_options_request_1.PrescriptionSampleFilterQuery) === "function" ? _b : Object)
], PrescriptionSampleGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ id: 'ASC' }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(prescription_sample_options_request_1.PrescriptionSampleSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof prescription_sample_options_request_1.PrescriptionSampleSortQuery !== "undefined" && prescription_sample_options_request_1.PrescriptionSampleSortQuery) === "function" ? _c : Object)
], PrescriptionSampleGetQuery.prototype, "sort", void 0);
class PrescriptionSamplePaginationQuery extends (0, swagger_1.IntersectionType)(PrescriptionSampleGetQuery, query_1.PaginationQuery) {
}
exports.PrescriptionSamplePaginationQuery = PrescriptionSamplePaginationQuery;
class PrescriptionSampleGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(PrescriptionSampleGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.PrescriptionSampleGetManyQuery = PrescriptionSampleGetManyQuery;
class PrescriptionSampleGetOneQuery extends (0, swagger_1.PickType)(PrescriptionSampleGetQuery, [
    'relation',
]) {
}
exports.PrescriptionSampleGetOneQuery = PrescriptionSampleGetOneQuery;


/***/ }),
/* 331 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiPrintHtmlModule = void 0;
const common_1 = __webpack_require__(3);
const api_print_html_controller_1 = __webpack_require__(332);
const api_print_html_service_1 = __webpack_require__(333);
let ApiPrintHtmlModule = class ApiPrintHtmlModule {
};
exports.ApiPrintHtmlModule = ApiPrintHtmlModule;
exports.ApiPrintHtmlModule = ApiPrintHtmlModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_print_html_controller_1.ApiPrintHtmlController],
        providers: [api_print_html_service_1.ApiPrintHtmlService],
    })
], ApiPrintHtmlModule);


/***/ }),
/* 332 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiPrintHtmlController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_print_html_service_1 = __webpack_require__(333);
const request_1 = __webpack_require__(334);
let ApiPrintHtmlController = class ApiPrintHtmlController {
    constructor(apiPrintHtmlService) {
        this.apiPrintHtmlService = apiPrintHtmlService;
    }
    pagination({ oid }, query) {
        return this.apiPrintHtmlService.pagination(oid, query);
    }
    getList({ oid }, query) {
        return this.apiPrintHtmlService.getList(oid, query);
    }
    getOne({ oid }, query) {
        return this.apiPrintHtmlService.getOne(oid, query);
    }
    findOne({ oid }, { id }, query) {
        return this.apiPrintHtmlService.detail(oid, id, query);
    }
    async createOne({ oid }, body) {
        return await this.apiPrintHtmlService.createOne(oid, body);
    }
    async updateOne({ oid }, { id }, body) {
        return await this.apiPrintHtmlService.updateOne(oid, id, body);
    }
    async destroyOne({ oid }, { id }) {
        return await this.apiPrintHtmlService.destroyOne(oid, id);
    }
    async systemList() {
        return await this.apiPrintHtmlService.systemList();
    }
};
exports.ApiPrintHtmlController = ApiPrintHtmlController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.PrintHtmlPaginationQuery !== "undefined" && request_1.PrintHtmlPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiPrintHtmlController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('get-list'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.PrintHtmlGetManyQuery !== "undefined" && request_1.PrintHtmlGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", void 0)
], ApiPrintHtmlController.prototype, "getList", null);
__decorate([
    (0, common_1.Get)('get-one'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof request_1.PrintHtmlGetOneQuery !== "undefined" && request_1.PrintHtmlGetOneQuery) === "function" ? _g : Object]),
    __metadata("design:returntype", void 0)
], ApiPrintHtmlController.prototype, "getOne", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_h = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _h : Object, typeof (_j = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _j : Object, typeof (_k = typeof request_1.PrintHtmlGetOneQuery !== "undefined" && request_1.PrintHtmlGetOneQuery) === "function" ? _k : Object]),
    __metadata("design:returntype", void 0)
], ApiPrintHtmlController.prototype, "findOne", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_PRINT_HTML),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_l = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _l : Object, typeof (_m = typeof request_1.PrintHtmlCreateBody !== "undefined" && request_1.PrintHtmlCreateBody) === "function" ? _m : Object]),
    __metadata("design:returntype", Promise)
], ApiPrintHtmlController.prototype, "createOne", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_PRINT_HTML),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_o = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _o : Object, typeof (_p = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _p : Object, typeof (_q = typeof request_1.PrintHtmlUpdateBody !== "undefined" && request_1.PrintHtmlUpdateBody) === "function" ? _q : Object]),
    __metadata("design:returntype", Promise)
], ApiPrintHtmlController.prototype, "updateOne", null);
__decorate([
    (0, common_1.Delete)('destroy/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_PRINT_HTML),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_r = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _r : Object, typeof (_s = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _s : Object]),
    __metadata("design:returntype", Promise)
], ApiPrintHtmlController.prototype, "destroyOne", null);
__decorate([
    (0, common_1.Get)('system-list'),
    (0, user_guard_1.IsUser)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], ApiPrintHtmlController.prototype, "systemList", null);
exports.ApiPrintHtmlController = ApiPrintHtmlController = __decorate([
    (0, swagger_1.ApiTags)('PrintHtml'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('print-html'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_print_html_service_1.ApiPrintHtmlService !== "undefined" && api_print_html_service_1.ApiPrintHtmlService) === "function" ? _a : Object])
], ApiPrintHtmlController);


/***/ }),
/* 333 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiPrintHtmlService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const print_html_repository_1 = __webpack_require__(108);
let ApiPrintHtmlService = class ApiPrintHtmlService {
    constructor(printHtmlRepository) {
        this.printHtmlRepository = printHtmlRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { data, total } = await this.printHtmlRepository.pagination({
            page,
            limit,
            relation,
            condition: {
                oid,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            sort,
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getList(oid, query) {
        const { limit, filter, relation } = query;
        const data = await this.printHtmlRepository.findMany({
            relation,
            condition: {
                oid,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            limit,
        });
        return { data };
    }
    async getOne(oid, query) {
        const { filter, relation } = query;
        const printHtml = await this.printHtmlRepository.findOne({
            relation,
            condition: {
                oid,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
        });
        return { data: { printHtml } };
    }
    async detail(oid, id, query) {
        const printHtml = await this.printHtmlRepository.findOne({
            condition: {
                oid,
                id,
            },
            relation: query.relation,
        });
        if (!printHtml)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        return { data: { printHtml } };
    }
    async createOne(oid, body) {
        const printHtml = await this.printHtmlRepository.insertOneFullFieldAndReturnEntity(Object.assign({ oid }, body));
        if (!printHtml)
            throw new exception_filter_1.BusinessException('error.Database.InsertFailed');
        return { data: { printHtml } };
    }
    async updateOne(oid, id, body) {
        const [printHtml] = await this.printHtmlRepository.updateAndReturnEntity({ id, oid }, body);
        if (!printHtml)
            throw new exception_filter_1.BusinessException('error.Database.UpdateFailed');
        return { data: { printHtml } };
    }
    async destroyOne(oid, id) {
        const affected = await this.printHtmlRepository.delete({ oid, id });
        if (affected === 0) {
            throw new exception_filter_1.BusinessException('error.Database.DeleteFailed');
        }
        return { data: true };
    }
    async systemList() {
        const data = await this.printHtmlRepository.findMany({
            condition: { oid: 1 },
            sort: { id: 'ASC' },
        });
        return { data };
    }
};
exports.ApiPrintHtmlService = ApiPrintHtmlService;
exports.ApiPrintHtmlService = ApiPrintHtmlService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof print_html_repository_1.PrintHtmlRepository !== "undefined" && print_html_repository_1.PrintHtmlRepository) === "function" ? _a : Object])
], ApiPrintHtmlService);


/***/ }),
/* 334 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(335), exports);
__exportStar(__webpack_require__(336), exports);
__exportStar(__webpack_require__(337), exports);


/***/ }),
/* 335 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PrintHtmlGetOneQuery = exports.PrintHtmlGetManyQuery = exports.PrintHtmlPaginationQuery = exports.PrintHtmlGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const print_html_options_request_1 = __webpack_require__(336);
class PrintHtmlGetQuery {
}
exports.PrintHtmlGetQuery = PrintHtmlGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(print_html_options_request_1.PrintHtmlRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof print_html_options_request_1.PrintHtmlRelationQuery !== "undefined" && print_html_options_request_1.PrintHtmlRelationQuery) === "function" ? _a : Object)
], PrintHtmlGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ updatedAt: { GT: Date.now() } }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(print_html_options_request_1.PrintHtmlFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof print_html_options_request_1.PrintHtmlFilterQuery !== "undefined" && print_html_options_request_1.PrintHtmlFilterQuery) === "function" ? _b : Object)
], PrintHtmlGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ id: 'ASC' }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(print_html_options_request_1.PrintHtmlSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof print_html_options_request_1.PrintHtmlSortQuery !== "undefined" && print_html_options_request_1.PrintHtmlSortQuery) === "function" ? _c : Object)
], PrintHtmlGetQuery.prototype, "sort", void 0);
class PrintHtmlPaginationQuery extends (0, swagger_1.IntersectionType)(PrintHtmlGetQuery, query_1.PaginationQuery) {
}
exports.PrintHtmlPaginationQuery = PrintHtmlPaginationQuery;
class PrintHtmlGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(PrintHtmlGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.PrintHtmlGetManyQuery = PrintHtmlGetManyQuery;
class PrintHtmlGetOneQuery extends (0, swagger_1.PickType)(PrintHtmlGetQuery, ['filter', 'relation']) {
}
exports.PrintHtmlGetOneQuery = PrintHtmlGetOneQuery;


/***/ }),
/* 336 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PrintHtmlSortQuery = exports.PrintHtmlFilterQuery = exports.PrintHtmlRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const condition_timestamp_1 = __webpack_require__(201);
const query_1 = __webpack_require__(185);
class PrintHtmlRelationQuery {
}
exports.PrintHtmlRelationQuery = PrintHtmlRelationQuery;
class PrintHtmlFilterQuery {
}
exports.PrintHtmlFilterQuery = PrintHtmlFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => condition_timestamp_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof condition_timestamp_1.ConditionTimestamp !== "undefined" && condition_timestamp_1.ConditionTimestamp) === "function" ? _a : Object)
], PrintHtmlFilterQuery.prototype, "updatedAt", void 0);
class PrintHtmlSortQuery extends query_1.SortQuery {
}
exports.PrintHtmlSortQuery = PrintHtmlSortQuery;


/***/ }),
/* 337 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PrintHtmlUpdateBody = exports.PrintHtmlCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class PrintHtmlCreateBody {
}
exports.PrintHtmlCreateBody = PrintHtmlCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Đơn thuốc' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], PrintHtmlCreateBody.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: '<div>ĐƠN THUỐC</div>' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], PrintHtmlCreateBody.prototype, "content", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: '' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], PrintHtmlCreateBody.prototype, "initVariable", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: '' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], PrintHtmlCreateBody.prototype, "dataExample", void 0);
class PrintHtmlUpdateBody extends PrintHtmlCreateBody {
}
exports.PrintHtmlUpdateBody = PrintHtmlUpdateBody;


/***/ }),
/* 338 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiProcedureGroupModule = void 0;
const common_1 = __webpack_require__(3);
const api_procedure_group_controller_1 = __webpack_require__(339);
const api_procedure_group_service_1 = __webpack_require__(340);
let ApiProcedureGroupModule = class ApiProcedureGroupModule {
};
exports.ApiProcedureGroupModule = ApiProcedureGroupModule;
exports.ApiProcedureGroupModule = ApiProcedureGroupModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_procedure_group_controller_1.ApiProcedureGroupController],
        providers: [api_procedure_group_service_1.ApiProcedureGroupService],
    })
], ApiProcedureGroupModule);


/***/ }),
/* 339 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiProcedureGroupController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_procedure_group_service_1 = __webpack_require__(340);
const request_1 = __webpack_require__(341);
let ApiProcedureGroupController = class ApiProcedureGroupController {
    constructor(apiProcedureGroupService) {
        this.apiProcedureGroupService = apiProcedureGroupService;
    }
    pagination({ oid }, query) {
        return this.apiProcedureGroupService.pagination(oid, query);
    }
    list({ oid }, query) {
        return this.apiProcedureGroupService.getMany(oid, query);
    }
    findOne({ oid }, { id }) {
        return this.apiProcedureGroupService.getOne(oid, id);
    }
    async replaceAll({ oid }, body) {
        return await this.apiProcedureGroupService.replaceAll(oid, body);
    }
    async createOne({ oid }, body) {
        return await this.apiProcedureGroupService.createOne(oid, body);
    }
    async updateOne({ oid }, { id }, body) {
        return await this.apiProcedureGroupService.updateOne(oid, id, body);
    }
    async destroyOne({ oid }, { id }) {
        return await this.apiProcedureGroupService.destroyOne(oid, id);
    }
};
exports.ApiProcedureGroupController = ApiProcedureGroupController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.ProcedureGroupPaginationQuery !== "undefined" && request_1.ProcedureGroupPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiProcedureGroupController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.ProcedureGroupGetManyQuery !== "undefined" && request_1.ProcedureGroupGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", void 0)
], ApiProcedureGroupController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object]),
    __metadata("design:returntype", void 0)
], ApiProcedureGroupController.prototype, "findOne", null);
__decorate([
    (0, common_1.Put)('replace-all'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_PROCEDURE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_h = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _h : Object, typeof (_j = typeof request_1.ProcedureGroupReplaceAllBody !== "undefined" && request_1.ProcedureGroupReplaceAllBody) === "function" ? _j : Object]),
    __metadata("design:returntype", Promise)
], ApiProcedureGroupController.prototype, "replaceAll", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_PROCEDURE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_k = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _k : Object, typeof (_l = typeof request_1.ProcedureGroupCreateBody !== "undefined" && request_1.ProcedureGroupCreateBody) === "function" ? _l : Object]),
    __metadata("design:returntype", Promise)
], ApiProcedureGroupController.prototype, "createOne", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_PROCEDURE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_m = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _m : Object, typeof (_o = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _o : Object, typeof (_p = typeof request_1.ProcedureGroupUpdateBody !== "undefined" && request_1.ProcedureGroupUpdateBody) === "function" ? _p : Object]),
    __metadata("design:returntype", Promise)
], ApiProcedureGroupController.prototype, "updateOne", null);
__decorate([
    (0, common_1.Delete)('destroy/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_PROCEDURE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_q = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _q : Object, typeof (_r = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _r : Object]),
    __metadata("design:returntype", Promise)
], ApiProcedureGroupController.prototype, "destroyOne", null);
exports.ApiProcedureGroupController = ApiProcedureGroupController = __decorate([
    (0, swagger_1.ApiTags)('ProcedureGroup'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('procedure-group'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_procedure_group_service_1.ApiProcedureGroupService !== "undefined" && api_procedure_group_service_1.ApiProcedureGroupService) === "function" ? _a : Object])
], ApiProcedureGroupController);


/***/ }),
/* 340 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiProcedureGroupService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const procedure_group_repository_1 = __webpack_require__(109);
let ApiProcedureGroupService = class ApiProcedureGroupService {
    constructor(procedureGroupRepository) {
        this.procedureGroupRepository = procedureGroupRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { data, total } = await this.procedureGroupRepository.pagination({
            page,
            limit,
            relation,
            condition: {
                oid,
            },
            sort,
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getMany(oid, query) {
        const { limit, filter, relation } = query;
        const data = await this.procedureGroupRepository.findMany({
            relation,
            condition: {
                oid,
            },
            limit,
        });
        return { data };
    }
    async getOne(oid, id) {
        const data = await this.procedureGroupRepository.findOneBy({ oid, id });
        if (!data)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        return { data };
    }
    async replaceAll(oid, body) {
        await this.procedureGroupRepository.replaceAll(oid, body.procedureGroupReplaceAll);
        return { data: true };
    }
    async createOne(oid, body) {
        const id = await this.procedureGroupRepository.insertOne(Object.assign({ oid }, body));
        const data = await this.procedureGroupRepository.findOneById(id);
        return { data };
    }
    async updateOne(oid, id, body) {
        const affected = await this.procedureGroupRepository.update({ id, oid }, body);
        const data = await this.procedureGroupRepository.findOneBy({ oid, id });
        return { data };
    }
    async destroyOne(oid, id) {
        const affected = await this.procedureGroupRepository.delete({ oid, id });
        if (affected === 0) {
            throw new exception_filter_1.BusinessException('error.Database.DeleteFailed');
        }
        return { data: true };
    }
};
exports.ApiProcedureGroupService = ApiProcedureGroupService;
exports.ApiProcedureGroupService = ApiProcedureGroupService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof procedure_group_repository_1.ProcedureGroupRepository !== "undefined" && procedure_group_repository_1.ProcedureGroupRepository) === "function" ? _a : Object])
], ApiProcedureGroupService);


/***/ }),
/* 341 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(342), exports);
__exportStar(__webpack_require__(343), exports);
__exportStar(__webpack_require__(344), exports);


/***/ }),
/* 342 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProcedureGroupGetOneQuery = exports.ProcedureGroupGetManyQuery = exports.ProcedureGroupPaginationQuery = exports.ProcedureGroupGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const procedure_group_options_request_1 = __webpack_require__(343);
class ProcedureGroupGetQuery {
}
exports.ProcedureGroupGetQuery = ProcedureGroupGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(procedure_group_options_request_1.ProcedureGroupRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof procedure_group_options_request_1.ProcedureGroupRelationQuery !== "undefined" && procedure_group_options_request_1.ProcedureGroupRelationQuery) === "function" ? _a : Object)
], ProcedureGroupGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ updatedAt: { GT: Date.now() } }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(procedure_group_options_request_1.ProcedureGroupFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof procedure_group_options_request_1.ProcedureGroupFilterQuery !== "undefined" && procedure_group_options_request_1.ProcedureGroupFilterQuery) === "function" ? _b : Object)
], ProcedureGroupGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ id: 'ASC' }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(procedure_group_options_request_1.ProcedureGroupSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof procedure_group_options_request_1.ProcedureGroupSortQuery !== "undefined" && procedure_group_options_request_1.ProcedureGroupSortQuery) === "function" ? _c : Object)
], ProcedureGroupGetQuery.prototype, "sort", void 0);
class ProcedureGroupPaginationQuery extends (0, swagger_1.IntersectionType)(ProcedureGroupGetQuery, query_1.PaginationQuery) {
}
exports.ProcedureGroupPaginationQuery = ProcedureGroupPaginationQuery;
class ProcedureGroupGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(ProcedureGroupGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.ProcedureGroupGetManyQuery = ProcedureGroupGetManyQuery;
class ProcedureGroupGetOneQuery extends (0, swagger_1.PickType)(ProcedureGroupGetQuery, ['relation']) {
}
exports.ProcedureGroupGetOneQuery = ProcedureGroupGetOneQuery;


/***/ }),
/* 343 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProcedureGroupSortQuery = exports.ProcedureGroupFilterQuery = exports.ProcedureGroupRelationQuery = void 0;
const query_1 = __webpack_require__(185);
class ProcedureGroupRelationQuery {
}
exports.ProcedureGroupRelationQuery = ProcedureGroupRelationQuery;
class ProcedureGroupFilterQuery {
}
exports.ProcedureGroupFilterQuery = ProcedureGroupFilterQuery;
class ProcedureGroupSortQuery extends query_1.SortQuery {
}
exports.ProcedureGroupSortQuery = ProcedureGroupSortQuery;


/***/ }),
/* 344 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProcedureGroupReplaceAllBody = exports.ProcedureGroupReplaceBody = exports.ProcedureGroupUpdateBody = exports.ProcedureGroupCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class ProcedureGroupCreateBody {
}
exports.ProcedureGroupCreateBody = ProcedureGroupCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Nhóm ABC' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], ProcedureGroupCreateBody.prototype, "name", void 0);
class ProcedureGroupUpdateBody extends (0, swagger_1.PartialType)(ProcedureGroupCreateBody) {
}
exports.ProcedureGroupUpdateBody = ProcedureGroupUpdateBody;
class ProcedureGroupReplaceBody {
}
exports.ProcedureGroupReplaceBody = ProcedureGroupReplaceBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Nhóm ABC' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], ProcedureGroupReplaceBody.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 2 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", Number)
], ProcedureGroupReplaceBody.prototype, "id", void 0);
class ProcedureGroupReplaceAllBody {
}
exports.ProcedureGroupReplaceAllBody = ProcedureGroupReplaceAllBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: ProcedureGroupReplaceBody, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => ProcedureGroupReplaceBody),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], ProcedureGroupReplaceAllBody.prototype, "procedureGroupReplaceAll", void 0);


/***/ }),
/* 345 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiProcedureModule = void 0;
const common_1 = __webpack_require__(3);
const api_procedure_controller_1 = __webpack_require__(346);
const api_procedure_service_1 = __webpack_require__(347);
let ApiProcedureModule = class ApiProcedureModule {
};
exports.ApiProcedureModule = ApiProcedureModule;
exports.ApiProcedureModule = ApiProcedureModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_procedure_controller_1.ApiProcedureController],
        providers: [api_procedure_service_1.ApiProcedureService],
    })
], ApiProcedureModule);


/***/ }),
/* 346 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiProcedureController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_procedure_service_1 = __webpack_require__(347);
const request_1 = __webpack_require__(348);
let ApiProcedureController = class ApiProcedureController {
    constructor(apiProcedureService) {
        this.apiProcedureService = apiProcedureService;
    }
    pagination({ oid }, query) {
        return this.apiProcedureService.pagination(oid, query);
    }
    async list({ oid }, query) {
        return await this.apiProcedureService.getMany(oid, query);
    }
    async detail({ oid }, { id }, query) {
        return await this.apiProcedureService.getOne(oid, id, query);
    }
    async create({ oid }, body) {
        return await this.apiProcedureService.createOne(oid, body);
    }
    async update({ oid }, { id }, body) {
        return await this.apiProcedureService.updateOne(oid, id, body);
    }
    async destroyOne({ oid }, { id }) {
        return await this.apiProcedureService.destroyOne(oid, id);
    }
};
exports.ApiProcedureController = ApiProcedureController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.ProcedurePaginationQuery !== "undefined" && request_1.ProcedurePaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiProcedureController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.ProcedureGetManyQuery !== "undefined" && request_1.ProcedureGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", Promise)
], ApiProcedureController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object, typeof (_h = typeof request_1.ProcedureGetOneQuery !== "undefined" && request_1.ProcedureGetOneQuery) === "function" ? _h : Object]),
    __metadata("design:returntype", Promise)
], ApiProcedureController.prototype, "detail", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_PROCEDURE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_j = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _j : Object, typeof (_k = typeof request_1.ProcedureCreateBody !== "undefined" && request_1.ProcedureCreateBody) === "function" ? _k : Object]),
    __metadata("design:returntype", Promise)
], ApiProcedureController.prototype, "create", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_PROCEDURE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_l = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _l : Object, typeof (_m = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _m : Object, typeof (_o = typeof request_1.ProcedureUpdateBody !== "undefined" && request_1.ProcedureUpdateBody) === "function" ? _o : Object]),
    __metadata("design:returntype", Promise)
], ApiProcedureController.prototype, "update", null);
__decorate([
    (0, common_1.Delete)('destroy/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_PROCEDURE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_p = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _p : Object, typeof (_q = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _q : Object]),
    __metadata("design:returntype", Promise)
], ApiProcedureController.prototype, "destroyOne", null);
exports.ApiProcedureController = ApiProcedureController = __decorate([
    (0, swagger_1.ApiTags)('Procedure'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('procedure'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_procedure_service_1.ApiProcedureService !== "undefined" && api_procedure_service_1.ApiProcedureService) === "function" ? _a : Object])
], ApiProcedureController);


/***/ }),
/* 347 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiProcedureService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const procedure_repository_1 = __webpack_require__(110);
const ticket_procedure_repository_1 = __webpack_require__(129);
let ApiProcedureService = class ApiProcedureService {
    constructor(procedureRepository, ticketProcedureRepository) {
        this.procedureRepository = procedureRepository;
        this.ticketProcedureRepository = ticketProcedureRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, relation, sort } = query;
        const { data, total } = await this.procedureRepository.pagination({
            relation,
            page,
            limit,
            condition: {
                oid,
                name: (filter === null || filter === void 0 ? void 0 : filter.searchText) ? { LIKE: filter.searchText } : undefined,
                procedureGroupId: filter === null || filter === void 0 ? void 0 : filter.procedureGroupId,
                isActive: filter === null || filter === void 0 ? void 0 : filter.isActive,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            sort,
        });
        return {
            data,
            meta: { page, limit, total },
        };
    }
    async getMany(oid, query) {
        const { limit, filter, relation } = query;
        const data = await this.procedureRepository.findMany({
            relation,
            condition: {
                oid,
                name: (filter === null || filter === void 0 ? void 0 : filter.searchText) ? { LIKE: filter.searchText } : undefined,
                procedureGroupId: filter === null || filter === void 0 ? void 0 : filter.procedureGroupId,
                isActive: filter === null || filter === void 0 ? void 0 : filter.isActive,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            sort: { id: 'ASC' },
            limit,
        });
        return { data };
    }
    async getOne(oid, id, query) {
        var _a;
        const procedure = await this.procedureRepository.findOne({
            relation: { procedureGroup: (_a = query === null || query === void 0 ? void 0 : query.relation) === null || _a === void 0 ? void 0 : _a.procedureGroup },
            condition: { oid, id },
        });
        if (!procedure)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        return { data: { procedure } };
    }
    async createOne(oid, body) {
        const procedure = await this.procedureRepository.insertOneFullFieldAndReturnEntity(Object.assign({ oid }, body));
        return { data: { procedure } };
    }
    async updateOne(oid, id, body) {
        const [procedure] = await this.procedureRepository.updateAndReturnEntity({ oid, id }, body);
        if (!procedure)
            throw new exception_filter_1.BusinessException('error.Database.UpdateFailed');
        return { data: { procedure } };
    }
    async destroyOne(oid, id) {
        const countTicketProcedure = await this.ticketProcedureRepository.countBy({
            oid,
            procedureId: id,
        });
        if (countTicketProcedure > 0) {
            return {
                data: { countTicketProcedure },
                success: false,
            };
        }
        const affected = await this.procedureRepository.delete({ oid, id });
        if (affected === 0)
            throw new exception_filter_1.BusinessException('error.Database.DeleteFailed');
        return { data: { countTicketProcedure: 0, procedureId: id } };
    }
};
exports.ApiProcedureService = ApiProcedureService;
exports.ApiProcedureService = ApiProcedureService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof procedure_repository_1.ProcedureRepository !== "undefined" && procedure_repository_1.ProcedureRepository) === "function" ? _a : Object, typeof (_b = typeof ticket_procedure_repository_1.TicketProcedureRepository !== "undefined" && ticket_procedure_repository_1.TicketProcedureRepository) === "function" ? _b : Object])
], ApiProcedureService);


/***/ }),
/* 348 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(349), exports);
__exportStar(__webpack_require__(350), exports);
__exportStar(__webpack_require__(351), exports);


/***/ }),
/* 349 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProcedureGetOneQuery = exports.ProcedureGetManyQuery = exports.ProcedurePaginationQuery = exports.ProcedureGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const procedure_options_request_1 = __webpack_require__(350);
class ProcedureGetQuery {
}
exports.ProcedureGetQuery = ProcedureGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(procedure_options_request_1.ProcedureRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof procedure_options_request_1.ProcedureRelationQuery !== "undefined" && procedure_options_request_1.ProcedureRelationQuery) === "function" ? _a : Object)
], ProcedureGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ isActive: 1 }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(procedure_options_request_1.ProcedureFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof procedure_options_request_1.ProcedureFilterQuery !== "undefined" && procedure_options_request_1.ProcedureFilterQuery) === "function" ? _b : Object)
], ProcedureGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({ id: 'ASC' }) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(procedure_options_request_1.ProcedureSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof procedure_options_request_1.ProcedureSortQuery !== "undefined" && procedure_options_request_1.ProcedureSortQuery) === "function" ? _c : Object)
], ProcedureGetQuery.prototype, "sort", void 0);
class ProcedurePaginationQuery extends (0, swagger_1.IntersectionType)(ProcedureGetQuery, query_1.PaginationQuery) {
}
exports.ProcedurePaginationQuery = ProcedurePaginationQuery;
class ProcedureGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(ProcedureGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.ProcedureGetManyQuery = ProcedureGetManyQuery;
class ProcedureGetOneQuery extends (0, swagger_1.PickType)(ProcedureGetQuery, ['relation']) {
}
exports.ProcedureGetOneQuery = ProcedureGetOneQuery;


/***/ }),
/* 350 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProcedureSortQuery = exports.ProcedureFilterQuery = exports.ProcedureRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const dto_1 = __webpack_require__(195);
const query_1 = __webpack_require__(185);
class ProcedureRelationQuery {
}
exports.ProcedureRelationQuery = ProcedureRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ProcedureRelationQuery.prototype, "procedureGroup", void 0);
class ProcedureFilterQuery {
}
exports.ProcedureFilterQuery = ProcedureFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProcedureFilterQuery.prototype, "searchText", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ProcedureFilterQuery.prototype, "procedureGroupId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], ProcedureFilterQuery.prototype, "isActive", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => dto_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof dto_1.ConditionTimestamp !== "undefined" && dto_1.ConditionTimestamp) === "function" ? _a : Object)
], ProcedureFilterQuery.prototype, "updatedAt", void 0);
class ProcedureSortQuery extends query_1.SortQuery {
}
exports.ProcedureSortQuery = ProcedureSortQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], ProcedureSortQuery.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], ProcedureSortQuery.prototype, "price", void 0);


/***/ }),
/* 351 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProcedureUpdateBody = exports.ProcedureCreateBody = exports.ConsumableConversion = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
const procedure_entity_1 = __webpack_require__(59);
class ConsumableConversion {
}
exports.ConsumableConversion = ConsumableConversion;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsPositive)(),
    __metadata("design:type", Number)
], ConsumableConversion.prototype, "productId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsPositive)(),
    __metadata("design:type", Number)
], ConsumableConversion.prototype, "quantity", void 0);
class ProcedureCreateBody {
}
exports.ProcedureCreateBody = ProcedureCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Truyền dịch 500ml' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProcedureCreateBody.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], ProcedureCreateBody.prototype, "procedureGroupId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: procedure_entity_1.ProcedureType.Basic }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_custom_1.IsEnumValue)(procedure_entity_1.ProcedureType),
    __metadata("design:type", typeof (_a = typeof procedure_entity_1.ProcedureType !== "undefined" && procedure_entity_1.ProcedureType) === "function" ? _a : Object)
], ProcedureCreateBody.prototype, "procedureType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 4 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ProcedureCreateBody.prototype, "quantityDefault", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 4 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ProcedureCreateBody.prototype, "gapHours", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 105000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], ProcedureCreateBody.prototype, "price", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        type: 'string',
        example: JSON.stringify([{ productId: 20, quantity: 1 }]),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            const err = [];
            const result = JSON.parse(value).map((i) => {
                const instance = Object.assign(new ConsumableConversion(), i);
                const validate = (0, class_validator_1.validateSync)(instance, {
                    whitelist: true,
                    forbidNonWhitelisted: true,
                    skipMissingProperties: true,
                });
                if (validate.length)
                    err.push(...validate);
                return instance;
            });
            if (err.length)
                return err;
            else
                return JSON.stringify(result);
        }
        catch (error) {
            return [error.message];
        }
    }),
    (0, class_validator_1.IsString)({
        message: `Validate consumablesHint failed: Example: `
            + `${JSON.stringify([{ productId: 30, quantity: 4 }])}`,
    }),
    __metadata("design:type", String)
], ProcedureCreateBody.prototype, "consumablesHint", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], ProcedureCreateBody.prototype, "isActive", void 0);
class ProcedureUpdateBody extends (0, swagger_1.PartialType)(ProcedureCreateBody) {
}
exports.ProcedureUpdateBody = ProcedureUpdateBody;


/***/ }),
/* 352 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiProductGroupModule = void 0;
const common_1 = __webpack_require__(3);
const api_product_group_controller_1 = __webpack_require__(353);
const api_product_group_service_1 = __webpack_require__(354);
let ApiProductGroupModule = class ApiProductGroupModule {
};
exports.ApiProductGroupModule = ApiProductGroupModule;
exports.ApiProductGroupModule = ApiProductGroupModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_product_group_controller_1.ApiProductGroupController],
        providers: [api_product_group_service_1.ApiProductGroupService],
    })
], ApiProductGroupModule);


/***/ }),
/* 353 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiProductGroupController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_product_group_service_1 = __webpack_require__(354);
const request_1 = __webpack_require__(355);
let ApiProductGroupController = class ApiProductGroupController {
    constructor(apiProductGroupService) {
        this.apiProductGroupService = apiProductGroupService;
    }
    pagination({ oid }, query) {
        return this.apiProductGroupService.pagination(oid, query);
    }
    list({ oid }, query) {
        return this.apiProductGroupService.getMany(oid, query);
    }
    findOne({ oid }, { id }) {
        return this.apiProductGroupService.getOne(oid, id);
    }
    async replaceAll({ oid }, body) {
        return await this.apiProductGroupService.replaceAll(oid, body);
    }
    async createOne({ oid }, body) {
        return await this.apiProductGroupService.createOne(oid, body);
    }
    async updateOne({ oid }, { id }, body) {
        return await this.apiProductGroupService.updateOne(oid, id, body);
    }
    async destroyOne({ oid }, { id }) {
        return await this.apiProductGroupService.destroyOne(oid, id);
    }
};
exports.ApiProductGroupController = ApiProductGroupController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.ProductGroupPaginationQuery !== "undefined" && request_1.ProductGroupPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiProductGroupController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.ProductGroupGetManyQuery !== "undefined" && request_1.ProductGroupGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", void 0)
], ApiProductGroupController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object]),
    __metadata("design:returntype", void 0)
], ApiProductGroupController.prototype, "findOne", null);
__decorate([
    (0, common_1.Put)('replace-all'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.PRODUCT_UPDATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_h = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _h : Object, typeof (_j = typeof request_1.ProductGroupReplaceAllBody !== "undefined" && request_1.ProductGroupReplaceAllBody) === "function" ? _j : Object]),
    __metadata("design:returntype", Promise)
], ApiProductGroupController.prototype, "replaceAll", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.PRODUCT_UPDATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_k = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _k : Object, typeof (_l = typeof request_1.ProductGroupCreateBody !== "undefined" && request_1.ProductGroupCreateBody) === "function" ? _l : Object]),
    __metadata("design:returntype", Promise)
], ApiProductGroupController.prototype, "createOne", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.PRODUCT_UPDATE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_m = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _m : Object, typeof (_o = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _o : Object, typeof (_p = typeof request_1.ProductGroupUpdateBody !== "undefined" && request_1.ProductGroupUpdateBody) === "function" ? _p : Object]),
    __metadata("design:returntype", Promise)
], ApiProductGroupController.prototype, "updateOne", null);
__decorate([
    (0, common_1.Delete)('destroy/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.PRODUCT_UPDATE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_q = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _q : Object, typeof (_r = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _r : Object]),
    __metadata("design:returntype", Promise)
], ApiProductGroupController.prototype, "destroyOne", null);
exports.ApiProductGroupController = ApiProductGroupController = __decorate([
    (0, swagger_1.ApiTags)('ProductGroup'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('product-group'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_product_group_service_1.ApiProductGroupService !== "undefined" && api_product_group_service_1.ApiProductGroupService) === "function" ? _a : Object])
], ApiProductGroupController);


/***/ }),
/* 354 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiProductGroupService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const product_group_repository_1 = __webpack_require__(111);
let ApiProductGroupService = class ApiProductGroupService {
    constructor(productGroupRepository) {
        this.productGroupRepository = productGroupRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { data, total } = await this.productGroupRepository.pagination({
            page,
            limit,
            relation,
            condition: {
                oid,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            sort,
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getMany(oid, query) {
        const { limit, filter, relation } = query;
        const data = await this.productGroupRepository.findMany({
            relation,
            condition: {
                oid,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            limit,
        });
        return { data };
    }
    async getOne(oid, id) {
        const data = await this.productGroupRepository.findOneBy({ oid, id });
        if (!data)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        return { data };
    }
    async replaceAll(oid, body) {
        await this.productGroupRepository.replaceAll(oid, body.productGroupReplaceAll);
        return { data: true };
    }
    async createOne(oid, body) {
        const id = await this.productGroupRepository.insertOne(Object.assign({ oid }, body));
        const data = await this.productGroupRepository.findOneById(id);
        return { data };
    }
    async updateOne(oid, id, body) {
        const affected = await this.productGroupRepository.update({ id, oid }, body);
        const data = await this.productGroupRepository.findOneBy({ oid, id });
        return { data };
    }
    async destroyOne(oid, id) {
        const affected = await this.productGroupRepository.delete({ oid, id });
        if (affected === 0) {
            throw new exception_filter_1.BusinessException('error.Database.DeleteFailed');
        }
        return { data: true };
    }
};
exports.ApiProductGroupService = ApiProductGroupService;
exports.ApiProductGroupService = ApiProductGroupService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof product_group_repository_1.ProductGroupRepository !== "undefined" && product_group_repository_1.ProductGroupRepository) === "function" ? _a : Object])
], ApiProductGroupService);


/***/ }),
/* 355 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(356), exports);
__exportStar(__webpack_require__(357), exports);
__exportStar(__webpack_require__(358), exports);


/***/ }),
/* 356 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProductGroupGetOneQuery = exports.ProductGroupGetManyQuery = exports.ProductGroupPaginationQuery = exports.ProductGroupGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const product_group_options_request_1 = __webpack_require__(357);
class ProductGroupGetQuery {
}
exports.ProductGroupGetQuery = ProductGroupGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(product_group_options_request_1.ProductGroupRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof product_group_options_request_1.ProductGroupRelationQuery !== "undefined" && product_group_options_request_1.ProductGroupRelationQuery) === "function" ? _a : Object)
], ProductGroupGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ updatedAt: { GT: Date.now() } }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(product_group_options_request_1.ProductGroupFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof product_group_options_request_1.ProductGroupFilterQuery !== "undefined" && product_group_options_request_1.ProductGroupFilterQuery) === "function" ? _b : Object)
], ProductGroupGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ id: 'ASC' }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(product_group_options_request_1.ProductGroupSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof product_group_options_request_1.ProductGroupSortQuery !== "undefined" && product_group_options_request_1.ProductGroupSortQuery) === "function" ? _c : Object)
], ProductGroupGetQuery.prototype, "sort", void 0);
class ProductGroupPaginationQuery extends (0, swagger_1.IntersectionType)(ProductGroupGetQuery, query_1.PaginationQuery) {
}
exports.ProductGroupPaginationQuery = ProductGroupPaginationQuery;
class ProductGroupGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(ProductGroupGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.ProductGroupGetManyQuery = ProductGroupGetManyQuery;
class ProductGroupGetOneQuery extends (0, swagger_1.PickType)(ProductGroupGetQuery, ['relation']) {
}
exports.ProductGroupGetOneQuery = ProductGroupGetOneQuery;


/***/ }),
/* 357 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProductGroupSortQuery = exports.ProductGroupFilterQuery = exports.ProductGroupRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const condition_timestamp_1 = __webpack_require__(201);
const query_1 = __webpack_require__(185);
class ProductGroupRelationQuery {
}
exports.ProductGroupRelationQuery = ProductGroupRelationQuery;
class ProductGroupFilterQuery {
}
exports.ProductGroupFilterQuery = ProductGroupFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => condition_timestamp_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof condition_timestamp_1.ConditionTimestamp !== "undefined" && condition_timestamp_1.ConditionTimestamp) === "function" ? _a : Object)
], ProductGroupFilterQuery.prototype, "updatedAt", void 0);
class ProductGroupSortQuery extends query_1.SortQuery {
}
exports.ProductGroupSortQuery = ProductGroupSortQuery;


/***/ }),
/* 358 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProductGroupReplaceAllBody = exports.ProductGroupReplaceBody = exports.ProductGroupUpdateBody = exports.ProductGroupCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class ProductGroupCreateBody {
}
exports.ProductGroupCreateBody = ProductGroupCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Nhóm ABC' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], ProductGroupCreateBody.prototype, "name", void 0);
class ProductGroupUpdateBody extends (0, swagger_1.PartialType)(ProductGroupCreateBody) {
}
exports.ProductGroupUpdateBody = ProductGroupUpdateBody;
class ProductGroupReplaceBody {
}
exports.ProductGroupReplaceBody = ProductGroupReplaceBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Nhóm ABC' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], ProductGroupReplaceBody.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 2 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", Number)
], ProductGroupReplaceBody.prototype, "id", void 0);
class ProductGroupReplaceAllBody {
}
exports.ProductGroupReplaceAllBody = ProductGroupReplaceAllBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: ProductGroupReplaceBody, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => ProductGroupReplaceBody),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], ProductGroupReplaceAllBody.prototype, "productGroupReplaceAll", void 0);


/***/ }),
/* 359 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiProductMovementModule = void 0;
const common_1 = __webpack_require__(3);
const api_product_movement_controller_1 = __webpack_require__(360);
const api_product_movement_service_1 = __webpack_require__(361);
let ApiProductMovementModule = class ApiProductMovementModule {
};
exports.ApiProductMovementModule = ApiProductMovementModule;
exports.ApiProductMovementModule = ApiProductMovementModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_product_movement_controller_1.ApiProductMovementController],
        providers: [api_product_movement_service_1.ApiProductMovementService],
    })
], ApiProductMovementModule);


/***/ }),
/* 360 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiProductMovementController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const permission_guard_1 = __webpack_require__(87);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_product_movement_service_1 = __webpack_require__(361);
const request_1 = __webpack_require__(362);
let ApiProductMovementController = class ApiProductMovementController {
    constructor(apiProductMovementService) {
        this.apiProductMovementService = apiProductMovementService;
    }
    paginationProductMovement({ oid }, query) {
        return this.apiProductMovementService.pagination(oid, query);
    }
};
exports.ApiProductMovementController = ApiProductMovementController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.READ_MOVEMENT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.ProductMovementPaginationQuery !== "undefined" && request_1.ProductMovementPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiProductMovementController.prototype, "paginationProductMovement", null);
exports.ApiProductMovementController = ApiProductMovementController = __decorate([
    (0, swagger_1.ApiTags)('Product Movement'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('product-movement'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_product_movement_service_1.ApiProductMovementService !== "undefined" && api_product_movement_service_1.ApiProductMovementService) === "function" ? _a : Object])
], ApiProductMovementController);


/***/ }),
/* 361 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiProductMovementService = void 0;
const common_1 = __webpack_require__(3);
const object_helper_1 = __webpack_require__(85);
const variable_1 = __webpack_require__(41);
const customer_repository_1 = __webpack_require__(100);
const distributor_repository_1 = __webpack_require__(102);
const product_movement_repository_1 = __webpack_require__(112);
const receipt_repository_1 = __webpack_require__(124);
const ticket_repository_1 = __webpack_require__(138);
let ApiProductMovementService = class ApiProductMovementService {
    constructor(productMovementRepository, receiptRepository, ticketRepository, customerRepository, distributorRepository) {
        this.productMovementRepository = productMovementRepository;
        this.receiptRepository = receiptRepository;
        this.ticketRepository = ticketRepository;
        this.customerRepository = customerRepository;
        this.distributorRepository = distributorRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { total, data } = await this.productMovementRepository.pagination({
            relation: { product: relation === null || relation === void 0 ? void 0 : relation.product },
            page,
            limit,
            condition: {
                oid,
                productId: filter === null || filter === void 0 ? void 0 : filter.productId,
                voucherId: filter === null || filter === void 0 ? void 0 : filter.voucherId,
                contactId: filter === null || filter === void 0 ? void 0 : filter.contactId,
                voucherType: filter === null || filter === void 0 ? void 0 : filter.voucherType,
            },
            sort,
        });
        const distributorIds = data
            .filter((i) => i.voucherType === variable_1.VoucherType.Receipt)
            .map((i) => i.contactId);
        const receiptIds = data
            .filter((i) => i.voucherType === variable_1.VoucherType.Receipt)
            .map((i) => i.voucherId);
        const customerIds = data
            .filter((i) => i.voucherType === variable_1.VoucherType.Ticket)
            .map((i) => i.contactId);
        const ticketIds = data
            .filter((i) => i.voucherType === variable_1.VoucherType.Ticket)
            .map((i) => i.voucherId);
        const [distributorList, customerList, receiptList, ticketList] = await Promise.all([
            (relation === null || relation === void 0 ? void 0 : relation.distributor) && distributorIds.length
                ? this.distributorRepository.findManyBy({ id: { IN: (0, object_helper_1.uniqueArray)(distributorIds) } })
                : [],
            (relation === null || relation === void 0 ? void 0 : relation.customer) && customerIds.length
                ? this.customerRepository.findManyBy({ id: { IN: (0, object_helper_1.uniqueArray)(customerIds) } })
                : [],
            (relation === null || relation === void 0 ? void 0 : relation.receipt) && receiptIds.length
                ? this.receiptRepository.findMany({ condition: { id: { IN: (0, object_helper_1.uniqueArray)(receiptIds) } } })
                : [],
            (relation === null || relation === void 0 ? void 0 : relation.ticket) && ticketIds.length
                ? this.ticketRepository.findMany({ condition: { id: { IN: (0, object_helper_1.uniqueArray)(ticketIds) } } })
                : [],
        ]);
        data.forEach((mov) => {
            if (mov.voucherType === variable_1.VoucherType.Receipt) {
                mov.receipt = receiptList.find((rc) => rc.id === mov.voucherId);
                mov.distributor = distributorList.find((rc) => rc.id === mov.contactId);
            }
            if (mov.voucherType === variable_1.VoucherType.Ticket) {
                mov.ticket = ticketList.find((iv) => iv.id === mov.voucherId);
                mov.customer = customerList.find((rc) => rc.id === mov.contactId);
            }
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
};
exports.ApiProductMovementService = ApiProductMovementService;
exports.ApiProductMovementService = ApiProductMovementService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof product_movement_repository_1.ProductMovementRepository !== "undefined" && product_movement_repository_1.ProductMovementRepository) === "function" ? _a : Object, typeof (_b = typeof receipt_repository_1.ReceiptRepository !== "undefined" && receipt_repository_1.ReceiptRepository) === "function" ? _b : Object, typeof (_c = typeof ticket_repository_1.TicketRepository !== "undefined" && ticket_repository_1.TicketRepository) === "function" ? _c : Object, typeof (_d = typeof customer_repository_1.CustomerRepository !== "undefined" && customer_repository_1.CustomerRepository) === "function" ? _d : Object, typeof (_e = typeof distributor_repository_1.DistributorRepository !== "undefined" && distributor_repository_1.DistributorRepository) === "function" ? _e : Object])
], ApiProductMovementService);


/***/ }),
/* 362 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(363), exports);
__exportStar(__webpack_require__(364), exports);


/***/ }),
/* 363 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProductMovementGetOneQuery = exports.ProductMovementGetManyQuery = exports.ProductMovementPaginationQuery = exports.ProductMovementGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const variable_1 = __webpack_require__(41);
const product_movement_options_request_1 = __webpack_require__(364);
class ProductMovementGetQuery {
}
exports.ProductMovementGetQuery = ProductMovementGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            ticket: true,
            product: true,
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(product_movement_options_request_1.ProductMovementRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof product_movement_options_request_1.ProductMovementRelationQuery !== "undefined" && product_movement_options_request_1.ProductMovementRelationQuery) === "function" ? _a : Object)
], ProductMovementGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            voucherId: 3,
            voucherType: variable_1.VoucherType.Receipt,
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(product_movement_options_request_1.ProductMovementFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof product_movement_options_request_1.ProductMovementFilterQuery !== "undefined" && product_movement_options_request_1.ProductMovementFilterQuery) === "function" ? _b : Object)
], ProductMovementGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ id: 'ASC' }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(product_movement_options_request_1.ProductMovementSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof product_movement_options_request_1.ProductMovementSortQuery !== "undefined" && product_movement_options_request_1.ProductMovementSortQuery) === "function" ? _c : Object)
], ProductMovementGetQuery.prototype, "sort", void 0);
class ProductMovementPaginationQuery extends (0, swagger_1.IntersectionType)(ProductMovementGetQuery, query_1.PaginationQuery) {
}
exports.ProductMovementPaginationQuery = ProductMovementPaginationQuery;
class ProductMovementGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(ProductMovementGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.ProductMovementGetManyQuery = ProductMovementGetManyQuery;
class ProductMovementGetOneQuery extends (0, swagger_1.PickType)(ProductMovementGetQuery, ['relation']) {
}
exports.ProductMovementGetOneQuery = ProductMovementGetOneQuery;


/***/ }),
/* 364 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProductMovementSortQuery = exports.ProductMovementFilterQuery = exports.ProductMovementRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const dto_1 = __webpack_require__(195);
const variable_1 = __webpack_require__(41);
const ConditionEnumVoucherType = (0, dto_1.createConditionEnum)(variable_1.VoucherType);
class ProductMovementRelationQuery {
}
exports.ProductMovementRelationQuery = ProductMovementRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ProductMovementRelationQuery.prototype, "product", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ProductMovementRelationQuery.prototype, "receipt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ProductMovementRelationQuery.prototype, "ticket", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ProductMovementRelationQuery.prototype, "customer", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ProductMovementRelationQuery.prototype, "distributor", void 0);
class ProductMovementFilterQuery {
}
exports.ProductMovementFilterQuery = ProductMovementFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ProductMovementFilterQuery.prototype, "productId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(dto_1.transformConditionNumber),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], ProductMovementFilterQuery.prototype, "voucherId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(dto_1.transformConditionNumber),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], ProductMovementFilterQuery.prototype, "contactId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)((params) => (0, dto_1.transformConditionEnum)(params, variable_1.VoucherType)),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], ProductMovementFilterQuery.prototype, "voucherType", void 0);
class ProductMovementSortQuery extends dto_1.SortQuery {
}
exports.ProductMovementSortQuery = ProductMovementSortQuery;


/***/ }),
/* 365 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiProductModule = void 0;
const common_1 = __webpack_require__(3);
const api_product_controller_1 = __webpack_require__(366);
const api_product_excel_1 = __webpack_require__(367);
const api_product_service_1 = __webpack_require__(368);
let ApiProductModule = class ApiProductModule {
};
exports.ApiProductModule = ApiProductModule;
exports.ApiProductModule = ApiProductModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_product_controller_1.ApiProductController],
        providers: [api_product_service_1.ApiProductService, api_product_excel_1.ApiProductExcel],
    })
], ApiProductModule);


/***/ }),
/* 366 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiProductController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_product_excel_1 = __webpack_require__(367);
const api_product_service_1 = __webpack_require__(368);
const request_1 = __webpack_require__(369);
let ApiProductController = class ApiProductController {
    constructor(apiProductService, apiProductExcel) {
        this.apiProductService = apiProductService;
        this.apiProductExcel = apiProductExcel;
    }
    pagination({ oid }, query) {
        return this.apiProductService.pagination(oid, query);
    }
    async list({ oid }, query) {
        return await this.apiProductService.getList(oid, query);
    }
    async detail({ oid }, { id }, query) {
        return await this.apiProductService.getOne(oid, id, query);
    }
    async create({ oid }, body) {
        return await this.apiProductService.createOne(oid, body);
    }
    async update({ oid }, { id }, body) {
        return await this.apiProductService.updateOne(oid, id, body);
    }
    async deleteOne({ oid, organization }, { id }) {
        return await this.apiProductService.destroyOne({ organization, oid, productId: id });
    }
    async downloadExcel({ user, organization }) {
        return await this.apiProductExcel.downloadExcel({ organization, user });
    }
};
exports.ApiProductController = ApiProductController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.PRODUCT_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_c = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _c : Object, typeof (_d = typeof request_1.ProductPaginationQuery !== "undefined" && request_1.ProductPaginationQuery) === "function" ? _d : Object]),
    __metadata("design:returntype", void 0)
], ApiProductController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.PRODUCT_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_e = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _e : Object, typeof (_f = typeof request_1.ProductGetManyQuery !== "undefined" && request_1.ProductGetManyQuery) === "function" ? _f : Object]),
    __metadata("design:returntype", Promise)
], ApiProductController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.PRODUCT_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_g = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _g : Object, typeof (_h = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _h : Object, typeof (_j = typeof request_1.ProductGetOneQuery !== "undefined" && request_1.ProductGetOneQuery) === "function" ? _j : Object]),
    __metadata("design:returntype", Promise)
], ApiProductController.prototype, "detail", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.PRODUCT_CREATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_k = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _k : Object, typeof (_l = typeof request_1.ProductCreateBody !== "undefined" && request_1.ProductCreateBody) === "function" ? _l : Object]),
    __metadata("design:returntype", Promise)
], ApiProductController.prototype, "create", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.PRODUCT_UPDATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_m = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _m : Object, typeof (_o = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _o : Object, typeof (_p = typeof request_1.ProductUpdateBody !== "undefined" && request_1.ProductUpdateBody) === "function" ? _p : Object]),
    __metadata("design:returntype", Promise)
], ApiProductController.prototype, "update", null);
__decorate([
    (0, common_1.Delete)('destroy/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.PRODUCT_DELETE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_q = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _q : Object, typeof (_r = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _r : Object]),
    __metadata("design:returntype", Promise)
], ApiProductController.prototype, "deleteOne", null);
__decorate([
    (0, common_1.Get)('download-excel'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.PRODUCT_DOWNLOAD_EXCEL),
    __param(0, (0, external_request_1.External)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_s = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _s : Object]),
    __metadata("design:returntype", Promise)
], ApiProductController.prototype, "downloadExcel", null);
exports.ApiProductController = ApiProductController = __decorate([
    (0, swagger_1.ApiTags)('Product'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('product'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_product_service_1.ApiProductService !== "undefined" && api_product_service_1.ApiProductService) === "function" ? _a : Object, typeof (_b = typeof api_product_excel_1.ApiProductExcel !== "undefined" && api_product_excel_1.ApiProductExcel) === "function" ? _b : Object])
], ApiProductController);


/***/ }),
/* 367 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiProductExcel = void 0;
const common_1 = __webpack_require__(3);
const object_helper_1 = __webpack_require__(85);
const time_helper_1 = __webpack_require__(119);
const batch_repository_1 = __webpack_require__(96);
const product_group_repository_1 = __webpack_require__(111);
const product_repository_1 = __webpack_require__(113);
const excel_one_sheet_util_1 = __webpack_require__(263);
let ApiProductExcel = class ApiProductExcel {
    constructor(productRepository, productGroupRepository, batchRepository) {
        this.productRepository = productRepository;
        this.productGroupRepository = productGroupRepository;
        this.batchRepository = batchRepository;
    }
    async downloadExcel(options) {
        const { user, organization } = options;
        const productList = await this.productRepository.findMany({
            condition: { oid: organization.id, isActive: 1 },
            sort: { id: 'ASC' },
        });
        const batchList = await this.batchRepository.findMany({
            condition: { oid: organization.id, quantity: { NOT: 0 } },
        });
        const batchListMapProductId = (0, object_helper_1.arrayToKeyArray)(batchList, 'productId');
        productList.forEach((product) => {
            product.batchList = batchListMapProductId[product.id] || [];
        });
        const productGroupAll = await this.productGroupRepository.findManyBy({});
        const productGroupMap = (0, object_helper_1.arrayToKeyValue)(productGroupAll, 'id');
        const workbook = this.getWorkbookProduct(productList, {
            orgName: organization.name,
            orgPhone: organization.phone,
            orgAddress: [
                organization.addressWard,
                organization.addressDistrict,
                organization.addressProvince,
            ]
                .filter((i) => !!i)
                .join(' - ')
                .replace('Tỉnh', '')
                .replace('Thành phố', '')
                .replace('Quận ', '')
                .replace('Huyện ', '')
                .replace('Phường ', '')
                .replace('Xã ', ''),
            userFullName: user.fullName,
            productGroupMap,
        });
        const buffer = await workbook.xlsx.writeBuffer();
        return {
            data: {
                buffer,
                mimeType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
                filename: 'MEA-san-pham.xlsx',
            },
        };
    }
    getWorkbookProduct(productList, meta) {
        const dataRows = [];
        productList.forEach((product, productIndex) => {
            var _a;
            const unitArray = JSON.parse(product.unit || '[]');
            const unitNameBasic = ((_a = unitArray.find((i) => i.rate === 1)) === null || _a === void 0 ? void 0 : _a.name) || '';
            if (product.batchList.length === 0) {
                dataRows.push({
                    style: {
                        num: { alignment: { horizontal: 'center' } },
                        id: { alignment: { horizontal: 'center' } },
                        brandName: { alignment: { wrapText: true } },
                        substance: { alignment: { wrapText: true } },
                        lotNumber: { alignment: { horizontal: 'center' } },
                        expiryDate: { alignment: { horizontal: 'center' }, numFmt: 'dd/mm/yyyy' },
                        quantity: { numFmt: '###,##0', font: { bold: true } },
                        costAmount: { numFmt: '###,##0' },
                        costPrice: { numFmt: '###,##0' },
                        wholesalePrice: { numFmt: '###,##0' },
                        retailPrice: { numFmt: '###,##0' },
                        unit: { alignment: { horizontal: 'center' } },
                        route: { alignment: { horizontal: 'center' } },
                    },
                    data: [
                        {
                            num: productIndex + 1,
                            id: 'SP' + product.id,
                            brandName: product.brandName || '',
                            substance: product.substance || '',
                            lotNumber: product.lotNumber || '',
                            expiryDate: product.expiryDate ? new Date(product.expiryDate + 7 * 60 * 60 * 1000) : '',
                            quantity: product.quantity || 0,
                            costAmount: product.costAmount || 0,
                            costPrice: product.costPrice || 0,
                            wholesalePrice: product.wholesalePrice || 0,
                            retailPrice: product.retailPrice || 0,
                            group: meta.productGroupMap[product.productGroupId] || '',
                            unit: unitNameBasic,
                            route: product.route || '',
                            source: product.source || '',
                        },
                    ],
                });
            }
            else {
                product.batchList.forEach((batch, batchIndex) => {
                    dataRows.push({
                        style: {
                            num: { alignment: { horizontal: 'center' } },
                            id: { alignment: { horizontal: 'center' } },
                            brandName: { alignment: { wrapText: true } },
                            substance: { alignment: { wrapText: true } },
                            lotNumber: { alignment: { horizontal: 'center' } },
                            expiryDate: { alignment: { horizontal: 'center' }, numFmt: 'dd/mm/yyyy' },
                            quantity: { font: { bold: true } },
                            costAmount: { numFmt: '###,##0' },
                            costPrice: { numFmt: '###,##0' },
                            wholesalePrice: { numFmt: '###,##0' },
                            retailPrice: { numFmt: '###,##0' },
                            group: {},
                            unit: { alignment: { horizontal: 'center' } },
                            route: { alignment: { horizontal: 'center' } },
                        },
                        data: [
                            {
                                num: productIndex + 1,
                                id: 'SP' + product.id,
                                brandName: product.brandName || '',
                                substance: product.substance || '',
                                lotNumber: batch.lotNumber || '',
                                expiryDate: batch.expiryDate ? new Date(batch.expiryDate + 7 * 60 * 60 * 1000) : '',
                                quantity: batch.quantity || 0,
                                costAmount: batch.costPrice * batch.quantity,
                                costPrice: batch.costPrice || 0,
                                wholesalePrice: batch.wholesalePrice || 0,
                                retailPrice: batch.retailPrice || 0,
                                group: meta.productGroupMap[product.productGroupId] || '',
                                unit: unitNameBasic,
                                route: product.route || '',
                                source: product.source || '',
                            },
                        ],
                    });
                });
            }
        });
        const workbook = (0, excel_one_sheet_util_1.excelOneSheetWorkbook)({
            layout: { sheetName: 'Sản phẩm' },
            headerSheet: (worksheet) => {
                worksheet.addRow([meta.orgName]).eachCell((cell) => {
                    cell.font = {
                        size: 12,
                        bold: true,
                        name: 'Times New Roman',
                    };
                });
                worksheet.addRow([meta.orgPhone]).eachCell((cell) => {
                    cell.font = {
                        size: 12,
                        bold: true,
                        name: 'Times New Roman',
                    };
                });
                worksheet.addRow([meta.orgAddress]).eachCell((cell) => {
                    cell.font = {
                        size: 12,
                        bold: true,
                        name: 'Times New Roman',
                    };
                });
                worksheet.addRow(['BÁO CÁO TỒN KHO']).eachCell((cell) => {
                    cell.font = {
                        size: 16,
                        bold: true,
                        name: 'Times New Roman',
                    };
                    cell.alignment = { horizontal: 'center' };
                });
                worksheet.mergeCells(4, 1, 4, 15);
                worksheet
                    .addRow([`Thời gian: ${time_helper_1.DTimer.timeToText(new Date(), 'hh:mm:ss DD/MM/YYYY', 7)}`])
                    .eachCell((cell) => {
                    cell.font = {
                        size: 12,
                        italic: true,
                        name: 'Times New Roman',
                    };
                    cell.alignment = { horizontal: 'center' };
                });
                worksheet.mergeCells(5, 1, 5, 15);
                worksheet.addRow([]);
                const rowTitle = worksheet.addRow([
                    'STT',
                    'ID',
                    'Tên sản phẩm',
                    'Hoạt chất',
                    'Lô',
                    'HSD',
                    'Số Lượng',
                    'Tổng Vốn',
                    'Giá nhập',
                    'Giá bán sỉ',
                    'Giá bán lẻ',
                    'Nhóm',
                    'Đơn vị',
                    'Đường dùng',
                    'Nguồn gốc',
                ]);
                rowTitle.height = 32;
                rowTitle.eachCell((cell) => {
                    cell.font = {
                        size: 12,
                        bold: true,
                        name: 'Times New Roman',
                    };
                    cell.alignment = { horizontal: 'center', vertical: 'middle', wrapText: true };
                    cell.fill = {
                        type: 'pattern',
                        pattern: 'solid',
                        fgColor: { argb: 'D8D8D8' },
                        bgColor: { argb: 'D8D8D8' },
                    };
                    cell.border = {
                        top: { style: 'thin' },
                        left: { style: 'thin' },
                        bottom: { style: 'thin' },
                        right: { style: 'thin' },
                    };
                });
            },
            columns: [
                { key: 'num', width: 5 },
                { key: 'id', width: 10 },
                { key: 'brandName', width: 30 },
                { key: 'substance', width: 30 },
                { key: 'lotNumber', width: 10 },
                { key: 'expiryDate', width: 10 },
                { key: 'quantity', width: 10 },
                { key: 'costAmount', width: 10 },
                { key: 'costPrice', width: 10 },
                { key: 'wholesalePrice', width: 10 },
                { key: 'retailPrice', width: 10 },
                { key: 'group', width: 20 },
                { key: 'unit', width: 10 },
                { key: 'route', width: 10 },
                { key: 'source', width: 20 },
            ],
            rows: dataRows,
            footerSheet: (worksheet) => {
                worksheet.addRow(['']);
                worksheet.addRow([`Người xuất báo cáo: ${meta.userFullName}`]).eachCell((cell) => {
                    cell.font = {
                        size: 12,
                        bold: true,
                        italic: true,
                        name: 'Times New Roman',
                    };
                });
            },
        });
        return workbook;
    }
};
exports.ApiProductExcel = ApiProductExcel;
exports.ApiProductExcel = ApiProductExcel = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof product_repository_1.ProductRepository !== "undefined" && product_repository_1.ProductRepository) === "function" ? _a : Object, typeof (_b = typeof product_group_repository_1.ProductGroupRepository !== "undefined" && product_group_repository_1.ProductGroupRepository) === "function" ? _b : Object, typeof (_c = typeof batch_repository_1.BatchRepository !== "undefined" && batch_repository_1.BatchRepository) === "function" ? _c : Object])
], ApiProductExcel);


/***/ }),
/* 368 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiProductService = void 0;
const common_1 = __webpack_require__(3);
const cache_data_service_1 = __webpack_require__(30);
const exception_filter_1 = __webpack_require__(9);
const object_helper_1 = __webpack_require__(85);
const bat_movement_repository_1 = __webpack_require__(95);
const batch_repository_1 = __webpack_require__(96);
const organization_repository_1 = __webpack_require__(34);
const product_movement_repository_1 = __webpack_require__(112);
const product_repository_1 = __webpack_require__(113);
const receipt_item_repository_1 = __webpack_require__(116);
const ticket_product_repository_1 = __webpack_require__(130);
const socket_emit_service_1 = __webpack_require__(204);
let ApiProductService = class ApiProductService {
    constructor(socketEmitService, cacheDataService, organizationRepository, ticketProductRepository, receiptItemRepository, productRepository, batchRepository, productMovementRepository, batchMovementRepository) {
        this.socketEmitService = socketEmitService;
        this.cacheDataService = cacheDataService;
        this.organizationRepository = organizationRepository;
        this.ticketProductRepository = ticketProductRepository;
        this.receiptItemRepository = receiptItemRepository;
        this.productRepository = productRepository;
        this.batchRepository = batchRepository;
        this.productMovementRepository = productMovementRepository;
        this.batchMovementRepository = batchMovementRepository;
    }
    async pagination(oid, query) {
        var _a, _b;
        const { page, limit, filter, sort, relation } = query;
        const { total, data } = await this.productRepository.pagination({
            page,
            limit,
            condition: {
                oid,
                productGroupId: filter === null || filter === void 0 ? void 0 : filter.productGroupId,
                isActive: filter === null || filter === void 0 ? void 0 : filter.isActive,
                quantity: filter === null || filter === void 0 ? void 0 : filter.quantity,
                expiryDate: filter === null || filter === void 0 ? void 0 : filter.expiryDate,
                $OR: filter === null || filter === void 0 ? void 0 : filter.$OR,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            sort,
        });
        const productHasBatchesList = data.filter((i) => i.hasManageBatches);
        const productHasBatchesIds = (0, object_helper_1.uniqueArray)(productHasBatchesList.map((item) => item.id));
        if ((relation === null || relation === void 0 ? void 0 : relation.batchList) && productHasBatchesIds.length) {
            const batchList = await this.batchRepository.findManyBy({
                productId: { IN: productHasBatchesIds },
                quantity: (_a = filter === null || filter === void 0 ? void 0 : filter.batchList) === null || _a === void 0 ? void 0 : _a.quantity,
                expiryDate: (_b = filter === null || filter === void 0 ? void 0 : filter.batchList) === null || _b === void 0 ? void 0 : _b.expiryDate,
            });
            const batchListMapProductId = (0, object_helper_1.arrayToKeyArray)(batchList, 'productId');
            data.forEach((item) => {
                item.batchList = batchListMapProductId[item.id] || [];
            });
        }
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getList(oid, query) {
        var _a, _b;
        const { filter, limit, relation } = query;
        const productList = await this.productRepository.findMany({
            condition: {
                oid,
                isActive: filter === null || filter === void 0 ? void 0 : filter.isActive,
                productGroupId: filter === null || filter === void 0 ? void 0 : filter.productGroupId,
                quantity: filter === null || filter === void 0 ? void 0 : filter.quantity,
                expiryDate: filter === null || filter === void 0 ? void 0 : filter.expiryDate,
                $OR: filter === null || filter === void 0 ? void 0 : filter.$OR,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            limit,
        });
        const productHasBatchesList = productList.filter((i) => i.hasManageBatches);
        const productHasBatchesIds = (0, object_helper_1.uniqueArray)(productHasBatchesList.map((item) => item.id));
        if ((relation === null || relation === void 0 ? void 0 : relation.batchList) && productHasBatchesIds.length) {
            const batchList = await this.batchRepository.findManyBy({
                id: { IN: productHasBatchesIds },
                quantity: (_a = filter === null || filter === void 0 ? void 0 : filter.batchList) === null || _a === void 0 ? void 0 : _a.quantity,
                expiryDate: (_b = filter === null || filter === void 0 ? void 0 : filter.batchList) === null || _b === void 0 ? void 0 : _b.expiryDate,
            });
            const batchListMapProductId = (0, object_helper_1.arrayToKeyArray)(batchList, 'productId');
            productList.forEach((item) => {
                item.batchList = batchListMapProductId[item.id] || [];
            });
        }
        return { data: productList };
    }
    async getOne(oid, id, query) {
        var _a;
        const { relation, filter } = query;
        const product = await this.productRepository.findOne({
            relation: { productGroup: relation === null || relation === void 0 ? void 0 : relation.productGroup },
            condition: { oid, id },
        });
        if (!product) {
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        }
        if ((relation === null || relation === void 0 ? void 0 : relation.batchList) && product.hasManageBatches) {
            product.batchList = await this.batchRepository.findMany({
                condition: {
                    oid,
                    productId: product.id,
                    quantity: (_a = filter === null || filter === void 0 ? void 0 : filter.batchList) === null || _a === void 0 ? void 0 : _a.quantity,
                    expiryDate: filter === null || filter === void 0 ? void 0 : filter.batchList.expiryDate,
                },
                sort: { expiryDate: 'ASC' },
            });
        }
        return { data: { product } };
    }
    async createOne(oid, body) {
        const product = await this.productRepository.insertOneFullFieldAndReturnEntity(Object.assign({ oid }, body));
        this.socketEmitService.productUpsert(oid, { product });
        return { data: { product } };
    }
    async updateOne(oid, id, body) {
        const rootProduct = await this.productRepository.findOneById(id);
        if (rootProduct.quantity) {
            if (!body.hasManageQuantity) {
                throw new exception_filter_1.BusinessException('error.Product.ConflictManageQuantity');
            }
            if (body.hasManageBatches !== rootProduct.hasManageBatches) {
                throw new exception_filter_1.BusinessException('error.Product.ConflictManageBatches');
            }
        }
        const [product] = await this.productRepository.updateAndReturnEntity({ oid, id }, body);
        if (!product) {
            throw new exception_filter_1.BusinessException('error.Database.UpdateFailed');
        }
        this.socketEmitService.productUpsert(oid, { product });
        return { data: { product } };
    }
    async destroyOne(options) {
        const { oid, productId, organization } = options;
        const countReceiptItem = await this.receiptItemRepository.countBy({ oid, productId });
        const countTicketProduct = await this.ticketProductRepository.countBy({ oid, productId });
        if (countReceiptItem > 0 || countTicketProduct > 0) {
            return {
                data: { countReceiptItem, countTicketProduct },
                success: false,
            };
        }
        await Promise.allSettled([
            this.productRepository.delete({ oid, id: productId }),
            this.batchRepository.delete({ oid, id: productId }),
            this.productMovementRepository.delete({ oid, productId }),
            this.batchMovementRepository.delete({ oid, productId }),
        ]);
        organization.dataVersionParse.product += 1;
        organization.dataVersionParse.batch += 1;
        await this.organizationRepository.update({ id: oid }, {
            dataVersion: JSON.stringify(organization.dataVersionParse),
        });
        this.cacheDataService.clearOrganization(oid);
        return { data: { countReceiptItem: 0, countTicketProduct: 0, productId } };
    }
};
exports.ApiProductService = ApiProductService;
exports.ApiProductService = ApiProductService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _a : Object, typeof (_b = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _b : Object, typeof (_c = typeof organization_repository_1.OrganizationRepository !== "undefined" && organization_repository_1.OrganizationRepository) === "function" ? _c : Object, typeof (_d = typeof ticket_product_repository_1.TicketProductRepository !== "undefined" && ticket_product_repository_1.TicketProductRepository) === "function" ? _d : Object, typeof (_e = typeof receipt_item_repository_1.ReceiptItemRepository !== "undefined" && receipt_item_repository_1.ReceiptItemRepository) === "function" ? _e : Object, typeof (_f = typeof product_repository_1.ProductRepository !== "undefined" && product_repository_1.ProductRepository) === "function" ? _f : Object, typeof (_g = typeof batch_repository_1.BatchRepository !== "undefined" && batch_repository_1.BatchRepository) === "function" ? _g : Object, typeof (_h = typeof product_movement_repository_1.ProductMovementRepository !== "undefined" && product_movement_repository_1.ProductMovementRepository) === "function" ? _h : Object, typeof (_j = typeof bat_movement_repository_1.BatchMovementRepository !== "undefined" && bat_movement_repository_1.BatchMovementRepository) === "function" ? _j : Object])
], ApiProductService);


/***/ }),
/* 369 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(370), exports);
__exportStar(__webpack_require__(371), exports);
__exportStar(__webpack_require__(372), exports);


/***/ }),
/* 370 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProductGetOneQuery = exports.ProductGetManyQuery = exports.ProductPaginationQuery = exports.ProductGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const product_options_request_1 = __webpack_require__(371);
class ProductGetQuery {
}
exports.ProductGetQuery = ProductGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ batchList: true }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(product_options_request_1.ProductRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof product_options_request_1.ProductRelationQuery !== "undefined" && product_options_request_1.ProductRelationQuery) === "function" ? _a : Object)
], ProductGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ isActive: 1, quantity: { GT: 10 } }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(product_options_request_1.ProductFilterQueryFull, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof product_options_request_1.ProductFilterQueryFull !== "undefined" && product_options_request_1.ProductFilterQueryFull) === "function" ? _b : Object)
], ProductGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({ id: 'DESC' }) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(product_options_request_1.ProductSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof product_options_request_1.ProductSortQuery !== "undefined" && product_options_request_1.ProductSortQuery) === "function" ? _c : Object)
], ProductGetQuery.prototype, "sort", void 0);
class ProductPaginationQuery extends (0, swagger_1.IntersectionType)(ProductGetQuery, query_1.PaginationQuery) {
}
exports.ProductPaginationQuery = ProductPaginationQuery;
class ProductGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(ProductGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.ProductGetManyQuery = ProductGetManyQuery;
class ProductGetOneQuery extends (0, swagger_1.PickType)(ProductGetQuery, ['relation', 'filter']) {
}
exports.ProductGetOneQuery = ProductGetOneQuery;


/***/ }),
/* 371 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProductSortQuery = exports.ProductFilterQueryFull = exports.ProductFilterQuery = exports.BatchFilterQuery = exports.ProductRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const dto_1 = __webpack_require__(195);
const condition_number_1 = __webpack_require__(199);
const condition_timestamp_1 = __webpack_require__(201);
const query_1 = __webpack_require__(185);
class ProductRelationQuery {
}
exports.ProductRelationQuery = ProductRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ProductRelationQuery.prototype, "batchList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ProductRelationQuery.prototype, "productGroup", void 0);
class BatchFilterQuery {
}
exports.BatchFilterQuery = BatchFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => condition_number_1.ConditionNumber),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof condition_number_1.ConditionNumber !== "undefined" && condition_number_1.ConditionNumber) === "function" ? _a : Object)
], BatchFilterQuery.prototype, "quantity", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => condition_timestamp_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof condition_timestamp_1.ConditionTimestamp !== "undefined" && condition_timestamp_1.ConditionTimestamp) === "function" ? _b : Object)
], BatchFilterQuery.prototype, "expiryDate", void 0);
class ProductFilterQuery {
}
exports.ProductFilterQuery = ProductFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ProductFilterQuery.prototype, "productGroupId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => dto_1.ConditionString),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof dto_1.ConditionString !== "undefined" && dto_1.ConditionString) === "function" ? _c : Object)
], ProductFilterQuery.prototype, "brandName", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => dto_1.ConditionString),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_d = typeof dto_1.ConditionString !== "undefined" && dto_1.ConditionString) === "function" ? _d : Object)
], ProductFilterQuery.prototype, "substance", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], ProductFilterQuery.prototype, "isActive", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => condition_number_1.ConditionNumber),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_e = typeof condition_number_1.ConditionNumber !== "undefined" && condition_number_1.ConditionNumber) === "function" ? _e : Object)
], ProductFilterQuery.prototype, "quantity", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => condition_timestamp_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_f = typeof condition_timestamp_1.ConditionTimestamp !== "undefined" && condition_timestamp_1.ConditionTimestamp) === "function" ? _f : Object)
], ProductFilterQuery.prototype, "expiryDate", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => condition_timestamp_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_g = typeof condition_timestamp_1.ConditionTimestamp !== "undefined" && condition_timestamp_1.ConditionTimestamp) === "function" ? _g : Object)
], ProductFilterQuery.prototype, "updatedAt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => ProductFilterQuery),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], ProductFilterQuery.prototype, "$OR", void 0);
class ProductFilterQueryFull extends ProductFilterQuery {
}
exports.ProductFilterQueryFull = ProductFilterQueryFull;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => BatchFilterQuery),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", BatchFilterQuery)
], ProductFilterQueryFull.prototype, "batchList", void 0);
class ProductSortQuery extends query_1.SortQuery {
}
exports.ProductSortQuery = ProductSortQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], ProductSortQuery.prototype, "brandName", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], ProductSortQuery.prototype, "quantity", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], ProductSortQuery.prototype, "costAmount", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], ProductSortQuery.prototype, "expiryDate", void 0);


/***/ }),
/* 372 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProductUpdateBody = exports.ProductCreateBody = exports.UnitConversionBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class UnitConversionBody {
}
exports.UnitConversionBody = UnitConversionBody;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], UnitConversionBody.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], UnitConversionBody.prototype, "rate", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], UnitConversionBody.prototype, "default", void 0);
class ProductCreateBody {
}
exports.ProductCreateBody = ProductCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Klacid 125mg/5ml' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProductCreateBody.prototype, "brandName", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Clarythromycin 125mg/5ml' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProductCreateBody.prototype, "substance", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'ABC12345' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProductCreateBody.prototype, "lotNumber", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1679995369195 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], ProductCreateBody.prototype, "expiryDate", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 20000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ProductCreateBody.prototype, "costPrice", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 45000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ProductCreateBody.prototype, "wholesalePrice", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 59000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ProductCreateBody.prototype, "retailPrice", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], ProductCreateBody.prototype, "productGroupId", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ name: 'unit', type: 'string', example: JSON.stringify([{ name: 'Viên', rate: 1 }]) }),
    (0, class_transformer_1.Expose)({ name: 'unit' }),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            const err = [];
            const result = JSON.parse(value).map((i) => {
                const instance = Object.assign(new UnitConversionBody(), i);
                const validate = (0, class_validator_1.validateSync)(instance, {
                    whitelist: true,
                    forbidNonWhitelisted: true,
                    skipMissingProperties: true,
                });
                if (validate.length)
                    err.push(...validate);
                return instance;
            });
            if (err.length)
                return err;
            else
                return JSON.stringify(result);
        }
        catch (error) {
            return [error.message];
        }
    }),
    (0, class_validator_1.IsString)({ message: `Validate unit failed: Example: ${JSON.stringify([{ name: 'Viên', rate: 1 }])}` }),
    __metadata("design:type", String)
], ProductCreateBody.prototype, "unit", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Uống' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProductCreateBody.prototype, "route", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Ấn Độ' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProductCreateBody.prototype, "source", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        example: 'https://cdn.medigoapp.com/product/Klacid_125mg_5ml_4724e139c8.jpg',
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProductCreateBody.prototype, "image", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Uống 1 viên/ngày, 9h sáng, sau ăn no' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProductCreateBody.prototype, "hintUsage", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], ProductCreateBody.prototype, "hasManageQuantity", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 0 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], ProductCreateBody.prototype, "hasManageBatches", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], ProductCreateBody.prototype, "isActive", void 0);
class ProductUpdateBody extends (0, swagger_1.PartialType)(ProductCreateBody) {
}
exports.ProductUpdateBody = ProductUpdateBody;


/***/ }),
/* 373 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRadiologyGroupModule = void 0;
const common_1 = __webpack_require__(3);
const api_radiology_group_controller_1 = __webpack_require__(374);
const api_radiology_group_service_1 = __webpack_require__(375);
let ApiRadiologyGroupModule = class ApiRadiologyGroupModule {
};
exports.ApiRadiologyGroupModule = ApiRadiologyGroupModule;
exports.ApiRadiologyGroupModule = ApiRadiologyGroupModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_radiology_group_controller_1.ApiRadiologyGroupController],
        providers: [api_radiology_group_service_1.ApiRadiologyGroupService],
    })
], ApiRadiologyGroupModule);


/***/ }),
/* 374 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRadiologyGroupController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_radiology_group_service_1 = __webpack_require__(375);
const request_1 = __webpack_require__(376);
let ApiRadiologyGroupController = class ApiRadiologyGroupController {
    constructor(apiRadiologyGroupService) {
        this.apiRadiologyGroupService = apiRadiologyGroupService;
    }
    pagination({ oid }, query) {
        return this.apiRadiologyGroupService.pagination(oid, query);
    }
    list({ oid }, query) {
        return this.apiRadiologyGroupService.getMany(oid, query);
    }
    findOne({ oid }, { id }) {
        return this.apiRadiologyGroupService.getOne(oid, id);
    }
    async createOne({ oid }, body) {
        return await this.apiRadiologyGroupService.createOne(oid, body);
    }
    async updateOne({ oid }, { id }, body) {
        return await this.apiRadiologyGroupService.updateOne(oid, id, body);
    }
    async destroyOne({ oid }, { id }) {
        return await this.apiRadiologyGroupService.destroyOne(oid, id);
    }
    async replaceAll({ oid }, body) {
        return await this.apiRadiologyGroupService.replaceAll(oid, body);
    }
    async systemList() {
        return await this.apiRadiologyGroupService.systemList();
    }
};
exports.ApiRadiologyGroupController = ApiRadiologyGroupController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.RadiologyGroupPaginationQuery !== "undefined" && request_1.RadiologyGroupPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiRadiologyGroupController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.RadiologyGroupGetManyQuery !== "undefined" && request_1.RadiologyGroupGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", void 0)
], ApiRadiologyGroupController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object]),
    __metadata("design:returntype", void 0)
], ApiRadiologyGroupController.prototype, "findOne", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_RADIOLOGY),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_h = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _h : Object, typeof (_j = typeof request_1.RadiologyGroupCreateBody !== "undefined" && request_1.RadiologyGroupCreateBody) === "function" ? _j : Object]),
    __metadata("design:returntype", Promise)
], ApiRadiologyGroupController.prototype, "createOne", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_RADIOLOGY),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_k = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _k : Object, typeof (_l = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _l : Object, typeof (_m = typeof request_1.RadiologyGroupUpdateBody !== "undefined" && request_1.RadiologyGroupUpdateBody) === "function" ? _m : Object]),
    __metadata("design:returntype", Promise)
], ApiRadiologyGroupController.prototype, "updateOne", null);
__decorate([
    (0, common_1.Delete)('destroy/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_RADIOLOGY),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_o = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _o : Object, typeof (_p = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _p : Object]),
    __metadata("design:returntype", Promise)
], ApiRadiologyGroupController.prototype, "destroyOne", null);
__decorate([
    (0, common_1.Put)('replace-all'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_RADIOLOGY),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_q = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _q : Object, typeof (_r = typeof request_1.RadiologyGroupReplaceAllBody !== "undefined" && request_1.RadiologyGroupReplaceAllBody) === "function" ? _r : Object]),
    __metadata("design:returntype", Promise)
], ApiRadiologyGroupController.prototype, "replaceAll", null);
__decorate([
    (0, common_1.Get)('system-list'),
    (0, user_guard_1.IsUser)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], ApiRadiologyGroupController.prototype, "systemList", null);
exports.ApiRadiologyGroupController = ApiRadiologyGroupController = __decorate([
    (0, swagger_1.ApiTags)('RadiologyGroup'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('radiology-group'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_radiology_group_service_1.ApiRadiologyGroupService !== "undefined" && api_radiology_group_service_1.ApiRadiologyGroupService) === "function" ? _a : Object])
], ApiRadiologyGroupController);


/***/ }),
/* 375 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRadiologyGroupService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const radiology_group_repository_1 = __webpack_require__(114);
let ApiRadiologyGroupService = class ApiRadiologyGroupService {
    constructor(radiologyGroupRepository) {
        this.radiologyGroupRepository = radiologyGroupRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { data, total } = await this.radiologyGroupRepository.pagination({
            page,
            limit,
            relation,
            condition: {
                oid,
            },
            sort,
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getMany(oid, query) {
        const { limit, filter, relation } = query;
        const data = await this.radiologyGroupRepository.findMany({
            relation,
            condition: {
                oid,
            },
            limit,
        });
        return { data };
    }
    async getOne(oid, id) {
        const radiologyGroup = await this.radiologyGroupRepository.findOneBy({ oid, id });
        if (!radiologyGroup)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        return { data: { radiologyGroup } };
    }
    async createOne(oid, body) {
        const radiologyGroup = await this.radiologyGroupRepository.insertOneAndReturnEntity(Object.assign({ oid }, body));
        return { data: { radiologyGroup } };
    }
    async updateOne(oid, id, body) {
        const radiologyGroupList = await this.radiologyGroupRepository.updateAndReturnEntity({ id, oid }, body);
        return { data: { radiologyGroup: radiologyGroupList[0] } };
    }
    async destroyOne(oid, id) {
        const affected = await this.radiologyGroupRepository.delete({ oid, id });
        if (affected === 0)
            throw new exception_filter_1.BusinessException('error.Database.DeleteFailed');
        return { data: true };
    }
    async replaceAll(oid, body) {
        await this.radiologyGroupRepository.replaceAll(oid, body.radiologyGroupReplaceAll);
        return { data: true };
    }
    async systemList() {
        const data = await this.radiologyGroupRepository.findMany({
            condition: { oid: 1 },
        });
        return { data };
    }
};
exports.ApiRadiologyGroupService = ApiRadiologyGroupService;
exports.ApiRadiologyGroupService = ApiRadiologyGroupService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof radiology_group_repository_1.RadiologyGroupRepository !== "undefined" && radiology_group_repository_1.RadiologyGroupRepository) === "function" ? _a : Object])
], ApiRadiologyGroupService);


/***/ }),
/* 376 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(377), exports);
__exportStar(__webpack_require__(378), exports);
__exportStar(__webpack_require__(379), exports);


/***/ }),
/* 377 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RadiologyGroupGetOneQuery = exports.RadiologyGroupGetManyQuery = exports.RadiologyGroupPaginationQuery = exports.RadiologyGroupGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const radiology_group_options_request_1 = __webpack_require__(378);
class RadiologyGroupGetQuery {
}
exports.RadiologyGroupGetQuery = RadiologyGroupGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(radiology_group_options_request_1.RadiologyGroupRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof radiology_group_options_request_1.RadiologyGroupRelationQuery !== "undefined" && radiology_group_options_request_1.RadiologyGroupRelationQuery) === "function" ? _a : Object)
], RadiologyGroupGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ updatedAt: { GT: Date.now() } }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(radiology_group_options_request_1.RadiologyGroupFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof radiology_group_options_request_1.RadiologyGroupFilterQuery !== "undefined" && radiology_group_options_request_1.RadiologyGroupFilterQuery) === "function" ? _b : Object)
], RadiologyGroupGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ id: 'ASC' }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(radiology_group_options_request_1.RadiologyGroupSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof radiology_group_options_request_1.RadiologyGroupSortQuery !== "undefined" && radiology_group_options_request_1.RadiologyGroupSortQuery) === "function" ? _c : Object)
], RadiologyGroupGetQuery.prototype, "sort", void 0);
class RadiologyGroupPaginationQuery extends (0, swagger_1.IntersectionType)(RadiologyGroupGetQuery, query_1.PaginationQuery) {
}
exports.RadiologyGroupPaginationQuery = RadiologyGroupPaginationQuery;
class RadiologyGroupGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(RadiologyGroupGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.RadiologyGroupGetManyQuery = RadiologyGroupGetManyQuery;
class RadiologyGroupGetOneQuery extends (0, swagger_1.PickType)(RadiologyGroupGetQuery, ['relation']) {
}
exports.RadiologyGroupGetOneQuery = RadiologyGroupGetOneQuery;


/***/ }),
/* 378 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RadiologyGroupSortQuery = exports.RadiologyGroupFilterQuery = exports.RadiologyGroupRelationQuery = void 0;
const query_1 = __webpack_require__(185);
class RadiologyGroupRelationQuery {
}
exports.RadiologyGroupRelationQuery = RadiologyGroupRelationQuery;
class RadiologyGroupFilterQuery {
}
exports.RadiologyGroupFilterQuery = RadiologyGroupFilterQuery;
class RadiologyGroupSortQuery extends query_1.SortQuery {
}
exports.RadiologyGroupSortQuery = RadiologyGroupSortQuery;


/***/ }),
/* 379 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RadiologyGroupReplaceAllBody = exports.RadiologyGroupReplaceBody = exports.RadiologyGroupUpdateBody = exports.RadiologyGroupCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class RadiologyGroupCreateBody {
}
exports.RadiologyGroupCreateBody = RadiologyGroupCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Nhóm ABC' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], RadiologyGroupCreateBody.prototype, "name", void 0);
class RadiologyGroupUpdateBody extends (0, swagger_1.PartialType)(RadiologyGroupCreateBody) {
}
exports.RadiologyGroupUpdateBody = RadiologyGroupUpdateBody;
class RadiologyGroupReplaceBody {
}
exports.RadiologyGroupReplaceBody = RadiologyGroupReplaceBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Nhóm ABC' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], RadiologyGroupReplaceBody.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 2 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", Number)
], RadiologyGroupReplaceBody.prototype, "id", void 0);
class RadiologyGroupReplaceAllBody {
}
exports.RadiologyGroupReplaceAllBody = RadiologyGroupReplaceAllBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: RadiologyGroupReplaceBody, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => RadiologyGroupReplaceBody),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], RadiologyGroupReplaceAllBody.prototype, "radiologyGroupReplaceAll", void 0);


/***/ }),
/* 380 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRadiologyModule = void 0;
const common_1 = __webpack_require__(3);
const api_radiology_controller_1 = __webpack_require__(381);
const api_radiology_service_1 = __webpack_require__(382);
let ApiRadiologyModule = class ApiRadiologyModule {
};
exports.ApiRadiologyModule = ApiRadiologyModule;
exports.ApiRadiologyModule = ApiRadiologyModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_radiology_controller_1.ApiRadiologyController],
        providers: [api_radiology_service_1.ApiRadiologyService],
    })
], ApiRadiologyModule);


/***/ }),
/* 381 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRadiologyController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_radiology_service_1 = __webpack_require__(382);
const request_1 = __webpack_require__(383);
let ApiRadiologyController = class ApiRadiologyController {
    constructor(apiRadiologyService) {
        this.apiRadiologyService = apiRadiologyService;
    }
    pagination({ oid }, query) {
        return this.apiRadiologyService.pagination(oid, query);
    }
    async list({ oid }, query) {
        return await this.apiRadiologyService.getMany(oid, query);
    }
    async detail({ oid }, { id }, query) {
        return await this.apiRadiologyService.getOne(oid, id, query);
    }
    async create({ oid }, body) {
        return await this.apiRadiologyService.createOne(oid, body);
    }
    async update({ oid }, { id }, body) {
        return await this.apiRadiologyService.updateOne(oid, id, body);
    }
    async destroyOne({ oid }, { id }) {
        return await this.apiRadiologyService.destroyOne(oid, id);
    }
    async systemList() {
        return await this.apiRadiologyService.systemList();
    }
    async systemCopy({ oid }, body) {
        return await this.apiRadiologyService.systemCopy(oid, body);
    }
};
exports.ApiRadiologyController = ApiRadiologyController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.RadiologyPaginationQuery !== "undefined" && request_1.RadiologyPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiRadiologyController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.RadiologyGetManyQuery !== "undefined" && request_1.RadiologyGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", Promise)
], ApiRadiologyController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_RADIOLOGY),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object, typeof (_h = typeof request_1.RadiologyGetOneQuery !== "undefined" && request_1.RadiologyGetOneQuery) === "function" ? _h : Object]),
    __metadata("design:returntype", Promise)
], ApiRadiologyController.prototype, "detail", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_RADIOLOGY),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_j = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _j : Object, typeof (_k = typeof request_1.RadiologyUpsertBody !== "undefined" && request_1.RadiologyUpsertBody) === "function" ? _k : Object]),
    __metadata("design:returntype", Promise)
], ApiRadiologyController.prototype, "create", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_RADIOLOGY),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_l = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _l : Object, typeof (_m = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _m : Object, typeof (_o = typeof request_1.RadiologyUpsertBody !== "undefined" && request_1.RadiologyUpsertBody) === "function" ? _o : Object]),
    __metadata("design:returntype", Promise)
], ApiRadiologyController.prototype, "update", null);
__decorate([
    (0, common_1.Delete)('destroy/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_RADIOLOGY),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_p = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _p : Object, typeof (_q = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _q : Object]),
    __metadata("design:returntype", Promise)
], ApiRadiologyController.prototype, "destroyOne", null);
__decorate([
    (0, common_1.Get)('system-list'),
    (0, user_guard_1.IsUser)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], ApiRadiologyController.prototype, "systemList", null);
__decorate([
    (0, common_1.Post)('system-copy'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_RADIOLOGY),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_r = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _r : Object, typeof (_s = typeof request_1.RadiologySystemCopyBody !== "undefined" && request_1.RadiologySystemCopyBody) === "function" ? _s : Object]),
    __metadata("design:returntype", Promise)
], ApiRadiologyController.prototype, "systemCopy", null);
exports.ApiRadiologyController = ApiRadiologyController = __decorate([
    (0, swagger_1.ApiTags)('Radiology'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('radiology'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_radiology_service_1.ApiRadiologyService !== "undefined" && api_radiology_service_1.ApiRadiologyService) === "function" ? _a : Object])
], ApiRadiologyController);


/***/ }),
/* 382 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRadiologyService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const radiology_repository_1 = __webpack_require__(115);
const ticket_radiology_repository_1 = __webpack_require__(131);
let ApiRadiologyService = class ApiRadiologyService {
    constructor(radiologyRepository, ticketRadiologyRepository) {
        this.radiologyRepository = radiologyRepository;
        this.ticketRadiologyRepository = ticketRadiologyRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, relation, sort } = query;
        const { data, total } = await this.radiologyRepository.pagination({
            relation,
            page,
            limit,
            condition: {
                oid,
                radiologyGroupId: filter === null || filter === void 0 ? void 0 : filter.radiologyGroupId,
                printHtmlId: filter === null || filter === void 0 ? void 0 : filter.printHtmlId,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            sort,
        });
        return {
            data,
            meta: { page, limit, total },
        };
    }
    async getMany(oid, query) {
        const { limit, filter, relation, sort } = query;
        const data = await this.radiologyRepository.findMany({
            relation,
            condition: {
                oid,
                radiologyGroupId: filter === null || filter === void 0 ? void 0 : filter.radiologyGroupId,
                printHtmlId: filter === null || filter === void 0 ? void 0 : filter.printHtmlId,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            sort,
            limit,
        });
        return { data };
    }
    async getOne(oid, id, query) {
        const radiology = await this.radiologyRepository.findOne({
            relation: query === null || query === void 0 ? void 0 : query.relation,
            condition: { oid, id },
        });
        if (!radiology)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        return { data: { radiology } };
    }
    async createOne(oid, body) {
        const radiology = await this.radiologyRepository.insertOneFullFieldAndReturnEntity(Object.assign({ oid }, body));
        return { data: { radiology } };
    }
    async updateOne(oid, id, body) {
        const [radiology] = await this.radiologyRepository.updateAndReturnEntity({ oid, id }, body);
        if (!radiology)
            throw new exception_filter_1.BusinessException('error.Database.UpdateFailed');
        return { data: { radiology } };
    }
    async destroyOne(oid, id) {
        const countTicketRadiology = await this.ticketRadiologyRepository.countBy({
            oid,
            radiologyId: id,
        });
        if (countTicketRadiology > 0) {
            return {
                data: { countTicketRadiology },
                success: false,
            };
        }
        const affected = await this.radiologyRepository.delete({ oid, id });
        if (affected === 0)
            throw new exception_filter_1.BusinessException('error.Database.DeleteFailed');
        return { data: { countTicketRadiology: 0, radiologyId: id } };
    }
    async systemList() {
        const data = await this.radiologyRepository.findMany({
            relation: { printHtml: true },
            condition: { oid: 1 },
            sort: { priority: 'ASC' },
        });
        return { data };
    }
    async systemCopy(oid, body) {
        const radiologySystemList = await this.radiologyRepository.findMany({
            condition: { oid: 1, id: { IN: body.radiologyIdList } },
        });
        const radiologyInsertList = radiologySystemList.map((i) => {
            const dto = {
                oid,
                name: i.name,
                price: i.price,
                printHtmlId: i.printHtmlId,
                radiologyGroupId: 0,
                descriptionDefault: i.descriptionDefault,
                requestNoteDefault: i.requestNoteDefault,
                resultDefault: i.resultDefault,
                priority: 0,
            };
            return dto;
        });
        const insertIds = await this.radiologyRepository.insertMany(radiologyInsertList);
        await this.radiologyRepository.update({ id: { IN: insertIds } }, { priority: () => `"id"` });
        return { data: true };
    }
};
exports.ApiRadiologyService = ApiRadiologyService;
exports.ApiRadiologyService = ApiRadiologyService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof radiology_repository_1.RadiologyRepository !== "undefined" && radiology_repository_1.RadiologyRepository) === "function" ? _a : Object, typeof (_b = typeof ticket_radiology_repository_1.TicketRadiologyRepository !== "undefined" && ticket_radiology_repository_1.TicketRadiologyRepository) === "function" ? _b : Object])
], ApiRadiologyService);


/***/ }),
/* 383 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(384), exports);
__exportStar(__webpack_require__(385), exports);
__exportStar(__webpack_require__(386), exports);
__exportStar(__webpack_require__(387), exports);


/***/ }),
/* 384 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RadiologyGetOneQuery = exports.RadiologyGetManyQuery = exports.RadiologyPaginationQuery = exports.RadiologyGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const radiology_options_request_1 = __webpack_require__(385);
class RadiologyGetQuery {
}
exports.RadiologyGetQuery = RadiologyGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(radiology_options_request_1.RadiologyRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof radiology_options_request_1.RadiologyRelationQuery !== "undefined" && radiology_options_request_1.RadiologyRelationQuery) === "function" ? _a : Object)
], RadiologyGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ updatedAt: { GT: Date.now() } }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(radiology_options_request_1.RadiologyFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof radiology_options_request_1.RadiologyFilterQuery !== "undefined" && radiology_options_request_1.RadiologyFilterQuery) === "function" ? _b : Object)
], RadiologyGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ id: 'ASC' }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(radiology_options_request_1.RadiologySortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof radiology_options_request_1.RadiologySortQuery !== "undefined" && radiology_options_request_1.RadiologySortQuery) === "function" ? _c : Object)
], RadiologyGetQuery.prototype, "sort", void 0);
class RadiologyPaginationQuery extends (0, swagger_1.IntersectionType)(RadiologyGetQuery, query_1.PaginationQuery) {
}
exports.RadiologyPaginationQuery = RadiologyPaginationQuery;
class RadiologyGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(RadiologyGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.RadiologyGetManyQuery = RadiologyGetManyQuery;
class RadiologyGetOneQuery extends (0, swagger_1.PickType)(RadiologyGetQuery, ['relation']) {
}
exports.RadiologyGetOneQuery = RadiologyGetOneQuery;


/***/ }),
/* 385 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RadiologySortQuery = exports.RadiologyFilterQuery = exports.RadiologyRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const dto_1 = __webpack_require__(195);
const query_1 = __webpack_require__(185);
class RadiologyRelationQuery {
}
exports.RadiologyRelationQuery = RadiologyRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], RadiologyRelationQuery.prototype, "radiologyGroup", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], RadiologyRelationQuery.prototype, "printHtml", void 0);
class RadiologyFilterQuery {
}
exports.RadiologyFilterQuery = RadiologyFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], RadiologyFilterQuery.prototype, "radiologyGroupId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], RadiologyFilterQuery.prototype, "printHtmlId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => dto_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof dto_1.ConditionTimestamp !== "undefined" && dto_1.ConditionTimestamp) === "function" ? _a : Object)
], RadiologyFilterQuery.prototype, "updatedAt", void 0);
class RadiologySortQuery extends query_1.SortQuery {
}
exports.RadiologySortQuery = RadiologySortQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], RadiologySortQuery.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], RadiologySortQuery.prototype, "priority", void 0);


/***/ }),
/* 386 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RadiologySystemCopyBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class RadiologySystemCopyBody {
}
exports.RadiologySystemCopyBody = RadiologySystemCopyBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ArrayMinSize)(1),
    __metadata("design:type", Array)
], RadiologySystemCopyBody.prototype, "radiologyIdList", void 0);


/***/ }),
/* 387 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RadiologyUpsertBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const DOMPurify = __webpack_require__(388);
class RadiologyUpsertBody {
}
exports.RadiologyUpsertBody = RadiologyUpsertBody;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 105000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], RadiologyUpsertBody.prototype, "priority", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Siêu âm tuyến giáp' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RadiologyUpsertBody.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], RadiologyUpsertBody.prototype, "radiologyGroupId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], RadiologyUpsertBody.prototype, "printHtmlId", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 105000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], RadiologyUpsertBody.prototype, "price", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Siêu âm thai, rau, ối' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RadiologyUpsertBody.prototype, "requestNoteDefault", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: '<h1>Âm tính</h1>' }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => DOMPurify.sanitize(value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RadiologyUpsertBody.prototype, "descriptionDefault", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Chưa có dấu hiệu bất thường' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RadiologyUpsertBody.prototype, "resultDefault", void 0);


/***/ }),
/* 388 */
/***/ ((module) => {

module.exports = require("isomorphic-dompurify");

/***/ }),
/* 389 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiReceiptItemModule = void 0;
const common_1 = __webpack_require__(3);
const api_receipt_item_controller_1 = __webpack_require__(390);
const api_receipt_item_service_1 = __webpack_require__(392);
let ApiReceiptItemModule = class ApiReceiptItemModule {
};
exports.ApiReceiptItemModule = ApiReceiptItemModule;
exports.ApiReceiptItemModule = ApiReceiptItemModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_receipt_item_controller_1.ApiReceiptItemController],
        providers: [api_receipt_item_service_1.ApiReceiptItemService],
    })
], ApiReceiptItemModule);


/***/ }),
/* 390 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiReceiptItemController = void 0;
const common_1 = __webpack_require__(3);
const route_params_decorator_1 = __webpack_require__(391);
const swagger_1 = __webpack_require__(6);
const permission_guard_1 = __webpack_require__(87);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_receipt_item_service_1 = __webpack_require__(392);
const request_1 = __webpack_require__(393);
let ApiReceiptItemController = class ApiReceiptItemController {
    constructor(apiReceiptItemService) {
        this.apiReceiptItemService = apiReceiptItemService;
    }
    async pagination({ oid }, query) {
        return await this.apiReceiptItemService.pagination(oid, query);
    }
};
exports.ApiReceiptItemController = ApiReceiptItemController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.RECEIPT_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, route_params_decorator_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.ReceiptItemPaginationQuery !== "undefined" && request_1.ReceiptItemPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", Promise)
], ApiReceiptItemController.prototype, "pagination", null);
exports.ApiReceiptItemController = ApiReceiptItemController = __decorate([
    (0, swagger_1.ApiTags)('ReceiptItem'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('receipt-item'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_receipt_item_service_1.ApiReceiptItemService !== "undefined" && api_receipt_item_service_1.ApiReceiptItemService) === "function" ? _a : Object])
], ApiReceiptItemController);


/***/ }),
/* 391 */
/***/ ((module) => {

module.exports = require("@nestjs/common/decorators/http/route-params.decorator");

/***/ }),
/* 392 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiReceiptItemService = void 0;
const common_1 = __webpack_require__(3);
const receipt_item_repository_1 = __webpack_require__(116);
let ApiReceiptItemService = class ApiReceiptItemService {
    constructor(receiptItemRepository) {
        this.receiptItemRepository = receiptItemRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, relation, sort } = query;
        const { total, data } = await this.receiptItemRepository.pagination({
            relation,
            page,
            limit,
            condition: {
                oid,
                receiptId: filter === null || filter === void 0 ? void 0 : filter.receiptId,
                distributorId: filter === null || filter === void 0 ? void 0 : filter.distributorId,
                productId: filter === null || filter === void 0 ? void 0 : filter.productId,
                batchId: filter === null || filter === void 0 ? void 0 : filter.batchId,
            },
            sort,
        });
        return {
            data,
            meta: { page, limit, total },
        };
    }
};
exports.ApiReceiptItemService = ApiReceiptItemService;
exports.ApiReceiptItemService = ApiReceiptItemService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof receipt_item_repository_1.ReceiptItemRepository !== "undefined" && receipt_item_repository_1.ReceiptItemRepository) === "function" ? _a : Object])
], ApiReceiptItemService);


/***/ }),
/* 393 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(394), exports);
__exportStar(__webpack_require__(395), exports);


/***/ }),
/* 394 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReceiptItemGetOneQuery = exports.ReceiptItemGetManyQuery = exports.ReceiptItemPaginationQuery = exports.ReceiptItemGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const receipt_item_options_request_1 = __webpack_require__(395);
class ReceiptItemGetQuery {
}
exports.ReceiptItemGetQuery = ReceiptItemGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(receipt_item_options_request_1.ReceiptItemRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof receipt_item_options_request_1.ReceiptItemRelationQuery !== "undefined" && receipt_item_options_request_1.ReceiptItemRelationQuery) === "function" ? _a : Object)
], ReceiptItemGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            receiptId: 1,
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(receipt_item_options_request_1.ReceiptItemFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof receipt_item_options_request_1.ReceiptItemFilterQuery !== "undefined" && receipt_item_options_request_1.ReceiptItemFilterQuery) === "function" ? _b : Object)
], ReceiptItemGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            id: 'ASC',
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(receipt_item_options_request_1.ReceiptItemSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof receipt_item_options_request_1.ReceiptItemSortQuery !== "undefined" && receipt_item_options_request_1.ReceiptItemSortQuery) === "function" ? _c : Object)
], ReceiptItemGetQuery.prototype, "sort", void 0);
class ReceiptItemPaginationQuery extends (0, swagger_1.IntersectionType)(ReceiptItemGetQuery, query_1.PaginationQuery) {
}
exports.ReceiptItemPaginationQuery = ReceiptItemPaginationQuery;
class ReceiptItemGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(ReceiptItemGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.ReceiptItemGetManyQuery = ReceiptItemGetManyQuery;
class ReceiptItemGetOneQuery extends (0, swagger_1.PickType)(ReceiptItemGetQuery, ['relation']) {
}
exports.ReceiptItemGetOneQuery = ReceiptItemGetOneQuery;


/***/ }),
/* 395 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReceiptItemSortQuery = exports.ReceiptItemFilterQuery = exports.ReceiptItemRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
class ReceiptItemRelationQuery {
}
exports.ReceiptItemRelationQuery = ReceiptItemRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsObject)(),
    __metadata("design:type", Object)
], ReceiptItemRelationQuery.prototype, "receipt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ReceiptItemRelationQuery.prototype, "batch", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ReceiptItemRelationQuery.prototype, "product", void 0);
class ReceiptItemFilterQuery {
}
exports.ReceiptItemFilterQuery = ReceiptItemFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptItemFilterQuery.prototype, "receiptId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptItemFilterQuery.prototype, "distributorId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptItemFilterQuery.prototype, "productId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptItemFilterQuery.prototype, "batchId", void 0);
class ReceiptItemSortQuery extends query_1.SortQuery {
}
exports.ReceiptItemSortQuery = ReceiptItemSortQuery;


/***/ }),
/* 396 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiReceiptModule = void 0;
const common_1 = __webpack_require__(3);
const api_receipt_controller_1 = __webpack_require__(397);
const api_receipt_service_1 = __webpack_require__(398);
let ApiReceiptModule = class ApiReceiptModule {
};
exports.ApiReceiptModule = ApiReceiptModule;
exports.ApiReceiptModule = ApiReceiptModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_receipt_controller_1.ApiReceiptController],
        providers: [api_receipt_service_1.ApiReceiptService],
    })
], ApiReceiptModule);


/***/ }),
/* 397 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiReceiptController = void 0;
const common_1 = __webpack_require__(3);
const route_params_decorator_1 = __webpack_require__(391);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_receipt_service_1 = __webpack_require__(398);
const request_1 = __webpack_require__(399);
let ApiReceiptController = class ApiReceiptController {
    constructor(apiReceiptService) {
        this.apiReceiptService = apiReceiptService;
    }
    async pagination({ oid }, query) {
        return await this.apiReceiptService.pagination(oid, query);
    }
    async list({ oid }, query) {
        return await this.apiReceiptService.getMany(oid, query);
    }
    async detail({ oid }, { id }, query) {
        return await this.apiReceiptService.getOne(oid, id, query);
    }
    async createDraft({ oid }, body) {
        return await this.apiReceiptService.createDraft({ oid, body });
    }
    async updateDraftPrepayment({ oid }, { id }, body) {
        return await this.apiReceiptService.updateDraftPrepayment({
            oid,
            receiptId: id,
            body,
        });
    }
    async prepayment({ oid }, { id }, body) {
        return await this.apiReceiptService.prepayment({
            oid,
            receiptId: id,
            money: body.money,
        });
    }
    async refundPrepayment({ oid }, { id }, body) {
        return await this.apiReceiptService.refundPrepayment({
            oid,
            receiptId: id,
            money: body.money,
        });
    }
    async payDebt({ oid }, { id }, body) {
        return await this.apiReceiptService.payDebt({
            oid,
            receiptId: id,
            money: body.money,
            time: Date.now(),
        });
    }
    async sendProductAndPayment({ oid }, { id }, body) {
        return await this.apiReceiptService.sendProductAndPayment({
            oid,
            receiptId: id,
            time: Date.now(),
            money: body.money,
        });
    }
    async cancel({ oid }, { id }, body) {
        return await this.apiReceiptService.cancel({
            oid,
            receiptId: id,
            time: Date.now(),
            money: body.money,
        });
    }
    async destroyDraft({ oid }, { id }) {
        return await this.apiReceiptService.destroy({
            oid,
            receiptId: id,
        });
    }
};
exports.ApiReceiptController = ApiReceiptController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.RECEIPT_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, route_params_decorator_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.ReceiptPaginationQuery !== "undefined" && request_1.ReceiptPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", Promise)
], ApiReceiptController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.RECEIPT_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, route_params_decorator_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.ReceiptGetManyQuery !== "undefined" && request_1.ReceiptGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", Promise)
], ApiReceiptController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.RECEIPT_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, route_params_decorator_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object, typeof (_h = typeof request_1.ReceiptGetOneQuery !== "undefined" && request_1.ReceiptGetOneQuery) === "function" ? _h : Object]),
    __metadata("design:returntype", Promise)
], ApiReceiptController.prototype, "detail", null);
__decorate([
    (0, common_1.Post)('create-draft'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.RECEIPT_CREATE_DRAFT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, route_params_decorator_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_j = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _j : Object, typeof (_k = typeof request_1.ReceiptDraftInsertBody !== "undefined" && request_1.ReceiptDraftInsertBody) === "function" ? _k : Object]),
    __metadata("design:returntype", Promise)
], ApiReceiptController.prototype, "createDraft", null);
__decorate([
    (0, common_1.Patch)('update-draft-prepayment/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.RECEIPT_UPDATE_DRAFT_PREPAYMENT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, route_params_decorator_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_l = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _l : Object, typeof (_m = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _m : Object, typeof (_o = typeof request_1.ReceiptUpdateBody !== "undefined" && request_1.ReceiptUpdateBody) === "function" ? _o : Object]),
    __metadata("design:returntype", Promise)
], ApiReceiptController.prototype, "updateDraftPrepayment", null);
__decorate([
    (0, common_1.Post)('prepayment/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.RECEIPT_PAYMENT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, route_params_decorator_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_p = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _p : Object, typeof (_q = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _q : Object, typeof (_r = typeof request_1.ReceiptPrepaymentBody !== "undefined" && request_1.ReceiptPrepaymentBody) === "function" ? _r : Object]),
    __metadata("design:returntype", Promise)
], ApiReceiptController.prototype, "prepayment", null);
__decorate([
    (0, common_1.Post)('refund-prepayment/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.RECEIPT_REFUND_PAYMENT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, route_params_decorator_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_s = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _s : Object, typeof (_t = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _t : Object, typeof (_u = typeof request_1.ReceiptRefundPrepaymentBody !== "undefined" && request_1.ReceiptRefundPrepaymentBody) === "function" ? _u : Object]),
    __metadata("design:returntype", Promise)
], ApiReceiptController.prototype, "refundPrepayment", null);
__decorate([
    (0, common_1.Post)('pay-debt/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.RECEIPT_PAY_DEBT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, route_params_decorator_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_v = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _v : Object, typeof (_w = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _w : Object, typeof (_x = typeof request_1.ReceiptPayDebtBody !== "undefined" && request_1.ReceiptPayDebtBody) === "function" ? _x : Object]),
    __metadata("design:returntype", Promise)
], ApiReceiptController.prototype, "payDebt", null);
__decorate([
    (0, common_1.Post)('send-product-and-payment/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.RECEIPT_SEND_PRODUCT, permission_entity_1.PermissionId.RECEIPT_PAYMENT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, route_params_decorator_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_y = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _y : Object, typeof (_z = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _z : Object, typeof (_0 = typeof request_1.ReceiptSendProductAndPaymentBody !== "undefined" && request_1.ReceiptSendProductAndPaymentBody) === "function" ? _0 : Object]),
    __metadata("design:returntype", Promise)
], ApiReceiptController.prototype, "sendProductAndPayment", null);
__decorate([
    (0, common_1.Post)('cancel/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.RECEIPT_CANCEL),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, route_params_decorator_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_1 = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _1 : Object, typeof (_2 = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _2 : Object, typeof (_3 = typeof request_1.ReceiptReturnProductBody !== "undefined" && request_1.ReceiptReturnProductBody) === "function" ? _3 : Object]),
    __metadata("design:returntype", Promise)
], ApiReceiptController.prototype, "cancel", null);
__decorate([
    (0, common_1.Delete)('destroy/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.RECEIPT_DESTROY_DRAFT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_4 = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _4 : Object, typeof (_5 = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _5 : Object]),
    __metadata("design:returntype", Promise)
], ApiReceiptController.prototype, "destroyDraft", null);
exports.ApiReceiptController = ApiReceiptController = __decorate([
    (0, swagger_1.ApiTags)('Receipt'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('receipt'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_receipt_service_1.ApiReceiptService !== "undefined" && api_receipt_service_1.ApiReceiptService) === "function" ? _a : Object])
], ApiReceiptController);


/***/ }),
/* 398 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiReceiptService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const distributor_payment_repository_1 = __webpack_require__(101);
const receipt_cancel_1 = __webpack_require__(117);
const receipt_draft_1 = __webpack_require__(118);
const receipt_pay_debt_1 = __webpack_require__(120);
const receipt_prepayment_1 = __webpack_require__(121);
const receipt_refund_prepayment_1 = __webpack_require__(122);
const receipt_send_product_and_payment_1 = __webpack_require__(123);
const receipt_repository_1 = __webpack_require__(124);
const socket_emit_service_1 = __webpack_require__(204);
let ApiReceiptService = class ApiReceiptService {
    constructor(socketEmitService, receiptRepository, receiptDraft, receiptPrepayment, receiptRefundPrepayment, receiptSendProductAndPayment, receiptPayDebt, receiptCancel, distributorPaymentRepository) {
        this.socketEmitService = socketEmitService;
        this.receiptRepository = receiptRepository;
        this.receiptDraft = receiptDraft;
        this.receiptPrepayment = receiptPrepayment;
        this.receiptRefundPrepayment = receiptRefundPrepayment;
        this.receiptSendProductAndPayment = receiptSendProductAndPayment;
        this.receiptPayDebt = receiptPayDebt;
        this.receiptCancel = receiptCancel;
        this.distributorPaymentRepository = distributorPaymentRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { startedAt, distributorId, status } = query.filter || {};
        const { total, data } = await this.receiptRepository.pagination({
            page: query.page,
            limit: query.limit,
            condition: {
                oid,
                distributorId,
                status,
                startedAt,
            },
            relation: {
                distributor: relation === null || relation === void 0 ? void 0 : relation.distributor,
                receiptItems: relation === null || relation === void 0 ? void 0 : relation.receiptItems,
            },
            sort: query.sort || { id: 'DESC' },
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getMany(oid, query) {
        const { relation, limit } = query;
        const { startedAt, distributorId, status } = query.filter || {};
        const receiptList = await this.receiptRepository.findMany({
            condition: {
                oid,
                distributorId,
                status,
                startedAt,
            },
            limit,
            relation: { distributor: relation === null || relation === void 0 ? void 0 : relation.distributor },
        });
        return { data: receiptList };
    }
    async getOne(oid, id, { relation }) {
        const receipt = await this.receiptRepository.findOne({
            condition: { oid, id },
            relation: {
                distributor: !!(relation === null || relation === void 0 ? void 0 : relation.distributor),
                distributorPayments: !!(relation === null || relation === void 0 ? void 0 : relation.distributorPayments),
                receiptItems: relation === null || relation === void 0 ? void 0 : relation.receiptItems,
            },
        });
        if (!receipt) {
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        }
        return { data: { receipt } };
    }
    async queryOne(oid, id, { relation }) {
        const receipt = await this.receiptRepository.queryOneBy({ oid, id }, {
            distributor: !!(relation === null || relation === void 0 ? void 0 : relation.distributor),
            distributorPayments: !!(relation === null || relation === void 0 ? void 0 : relation.distributorPayments),
            receiptItems: relation === null || relation === void 0 ? void 0 : relation.receiptItems,
        });
        return { data: receipt };
    }
    async createDraft(params) {
        const { oid, body } = params;
        try {
            const { receiptId } = await this.receiptDraft.createDraft({
                oid,
                receiptInsertDto: body.receipt,
                receiptItemListDto: body.receiptItemList,
            });
            return { data: { receiptId } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async updateDraftPrepayment(params) {
        const { oid, receiptId, body } = params;
        try {
            await this.receiptDraft.updateDraftPrepayment({
                oid,
                receiptId,
                receiptUpdateDto: body.receipt,
                receiptItemListDto: body.receiptItemList,
            });
            return { data: { receiptId } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async prepayment(params) {
        const { oid, receiptId, money } = params;
        try {
            const { receiptBasic } = await this.receiptPrepayment.prepayment({
                oid,
                receiptId,
                time: Date.now(),
                money,
            });
            const distributorPayments = await this.distributorPaymentRepository.findMany({
                condition: {
                    oid,
                    distributorId: receiptBasic.distributorId,
                    receiptId,
                },
                sort: { id: 'ASC' },
            });
            return {
                data: {
                    receiptBasic,
                    distributorPayments,
                },
            };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async refundPrepayment(params) {
        const { oid, receiptId, money } = params;
        try {
            const { receiptBasic } = await this.receiptRefundPrepayment.refundPrepayment({
                oid,
                receiptId,
                time: Date.now(),
                money,
            });
            const distributorPayments = await this.distributorPaymentRepository.findMany({
                condition: {
                    oid,
                    distributorId: receiptBasic.distributorId,
                    receiptId,
                },
                sort: { id: 'ASC' },
            });
            return { data: { receiptBasic, distributorPayments } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async sendProductAndPayment(params) {
        const { oid, receiptId, time, money } = params;
        try {
            const result = await this.receiptSendProductAndPayment.sendProductAndPayment({
                oid,
                receiptId,
                time,
                money,
            });
            const distributorPayments = await this.distributorPaymentRepository.findMany({
                condition: {
                    oid,
                    distributorId: result.receiptBasic.distributorId,
                    receiptId,
                },
                sort: { id: 'ASC' },
            });
            this.emitSocketAfterChangeProductAndDistributor(oid, result);
            return {
                data: {
                    receiptBasic: result.receiptBasic,
                    distributorPayments,
                },
            };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async payDebt(params) {
        const { oid, receiptId, time, money } = params;
        try {
            const { distributor, receiptBasic } = await this.receiptPayDebt.payDebt({
                oid,
                receiptId,
                time,
                money,
            });
            const distributorPayments = await this.distributorPaymentRepository.findMany({
                condition: {
                    oid,
                    distributorId: receiptBasic.distributorId,
                    receiptId,
                },
                sort: { id: 'ASC' },
            });
            if (distributor) {
                this.socketEmitService.distributorUpsert(oid, { distributor });
            }
            return {
                data: {
                    receiptBasic,
                    distributorPayments,
                },
            };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async cancel(params) {
        const { oid, receiptId, time, money } = params;
        try {
            const result = await this.receiptCancel.cancel({ oid, receiptId, time, money });
            const distributorPaymentList = await this.distributorPaymentRepository.findMany({
                condition: {
                    oid,
                    distributorId: result.receiptBasic.distributorId,
                    receiptId,
                },
                sort: { id: 'ASC' },
            });
            this.emitSocketAfterChangeProductAndDistributor(oid, result);
            return {
                data: {
                    receiptBasic: result.receiptBasic,
                    distributorPaymentList,
                },
            };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async destroy(params) {
        const { oid, receiptId } = params;
        try {
            await this.receiptRepository.destroy({ oid, receiptId });
            return { data: { receiptId } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async emitSocketAfterChangeProductAndDistributor(oid, data) {
        const { distributor, productList, batchList } = data;
        if (distributor) {
            this.socketEmitService.distributorUpsert(oid, { distributor });
        }
        if (productList.length) {
            this.socketEmitService.productListUpdate(oid, { productList });
        }
        if (batchList.length) {
            this.socketEmitService.batchListUpdate(oid, { batchList });
        }
    }
};
exports.ApiReceiptService = ApiReceiptService;
exports.ApiReceiptService = ApiReceiptService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _a : Object, typeof (_b = typeof receipt_repository_1.ReceiptRepository !== "undefined" && receipt_repository_1.ReceiptRepository) === "function" ? _b : Object, typeof (_c = typeof receipt_draft_1.ReceiptDraft !== "undefined" && receipt_draft_1.ReceiptDraft) === "function" ? _c : Object, typeof (_d = typeof receipt_prepayment_1.ReceiptPrepayment !== "undefined" && receipt_prepayment_1.ReceiptPrepayment) === "function" ? _d : Object, typeof (_e = typeof receipt_refund_prepayment_1.ReceiptRefundPrepayment !== "undefined" && receipt_refund_prepayment_1.ReceiptRefundPrepayment) === "function" ? _e : Object, typeof (_f = typeof receipt_send_product_and_payment_1.ReceiptSendProductAndPayment !== "undefined" && receipt_send_product_and_payment_1.ReceiptSendProductAndPayment) === "function" ? _f : Object, typeof (_g = typeof receipt_pay_debt_1.ReceiptPayDebt !== "undefined" && receipt_pay_debt_1.ReceiptPayDebt) === "function" ? _g : Object, typeof (_h = typeof receipt_cancel_1.ReceiptCancel !== "undefined" && receipt_cancel_1.ReceiptCancel) === "function" ? _h : Object, typeof (_j = typeof distributor_payment_repository_1.DistributorPaymentRepository !== "undefined" && distributor_payment_repository_1.DistributorPaymentRepository) === "function" ? _j : Object])
], ApiReceiptService);


/***/ }),
/* 399 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(400), exports);
__exportStar(__webpack_require__(402), exports);
__exportStar(__webpack_require__(403), exports);
__exportStar(__webpack_require__(401), exports);
__exportStar(__webpack_require__(404), exports);


/***/ }),
/* 400 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReceiptGetOneQuery = exports.ReceiptGetManyQuery = exports.ReceiptPaginationQuery = exports.ReceiptGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const receipt_options_request_1 = __webpack_require__(401);
class ReceiptGetQuery {
}
exports.ReceiptGetQuery = ReceiptGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            distributor: true,
            receiptItems: { product: true },
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(receipt_options_request_1.ReceiptRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof receipt_options_request_1.ReceiptRelationQuery !== "undefined" && receipt_options_request_1.ReceiptRelationQuery) === "function" ? _a : Object)
], ReceiptGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ distributorId: 33 }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(receipt_options_request_1.ReceiptFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof receipt_options_request_1.ReceiptFilterQuery !== "undefined" && receipt_options_request_1.ReceiptFilterQuery) === "function" ? _b : Object)
], ReceiptGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({ id: 'ASC' }) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(receipt_options_request_1.ReceiptSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof receipt_options_request_1.ReceiptSortQuery !== "undefined" && receipt_options_request_1.ReceiptSortQuery) === "function" ? _c : Object)
], ReceiptGetQuery.prototype, "sort", void 0);
class ReceiptPaginationQuery extends (0, swagger_1.IntersectionType)(ReceiptGetQuery, query_1.PaginationQuery) {
}
exports.ReceiptPaginationQuery = ReceiptPaginationQuery;
class ReceiptGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(ReceiptGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.ReceiptGetManyQuery = ReceiptGetManyQuery;
class ReceiptGetOneQuery extends (0, swagger_1.PickType)(ReceiptGetQuery, ['relation']) {
}
exports.ReceiptGetOneQuery = ReceiptGetOneQuery;


/***/ }),
/* 401 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReceiptSortQuery = exports.ReceiptFilterQuery = exports.ReceiptRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const dto_1 = __webpack_require__(195);
const query_1 = __webpack_require__(185);
const variable_1 = __webpack_require__(41);
class ReceiptRelationQuery {
}
exports.ReceiptRelationQuery = ReceiptRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ReceiptRelationQuery.prototype, "distributor", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ReceiptRelationQuery.prototype, "distributorPayments", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], ReceiptRelationQuery.prototype, "receiptItems", void 0);
const ConditionEnumDeliveryStatus = (0, dto_1.createConditionEnum)(variable_1.ReceiptStatus);
class ReceiptFilterQuery {
}
exports.ReceiptFilterQuery = ReceiptFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptFilterQuery.prototype, "distributorId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)((params) => (0, dto_1.transformConditionEnum)(params, variable_1.ReceiptStatus)),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], ReceiptFilterQuery.prototype, "status", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => dto_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof dto_1.ConditionTimestamp !== "undefined" && dto_1.ConditionTimestamp) === "function" ? _c : Object)
], ReceiptFilterQuery.prototype, "startedAt", void 0);
class ReceiptSortQuery extends query_1.SortQuery {
}
exports.ReceiptSortQuery = ReceiptSortQuery;


/***/ }),
/* 402 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReceiptItemBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
class ReceiptItemBody {
}
exports.ReceiptItemBody = ReceiptItemBody;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 52 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], ReceiptItemBody.prototype, "productId", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 52 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptItemBody.prototype, "batchId", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'ABC12345' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ReceiptItemBody.prototype, "lotNumber", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1679995369195 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], ReceiptItemBody.prototype, "expiryDate", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 52 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptItemBody.prototype, "unitRate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 4 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], ReceiptItemBody.prototype, "quantity", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 12000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptItemBody.prototype, "costPrice", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 50000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptItemBody.prototype, "wholesalePrice", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 50000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptItemBody.prototype, "retailPrice", void 0);


/***/ }),
/* 403 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReceiptReturnProductBody = exports.ReceiptPayDebtBody = exports.ReceiptSendProductAndPaymentBody = exports.ReceiptRefundPrepaymentBody = exports.ReceiptPrepaymentBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class ReceiptPrepaymentBody {
}
exports.ReceiptPrepaymentBody = ReceiptPrepaymentBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1200000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptPrepaymentBody.prototype, "money", void 0);
class ReceiptRefundPrepaymentBody {
}
exports.ReceiptRefundPrepaymentBody = ReceiptRefundPrepaymentBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1200000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptRefundPrepaymentBody.prototype, "money", void 0);
class ReceiptSendProductAndPaymentBody {
}
exports.ReceiptSendProductAndPaymentBody = ReceiptSendProductAndPaymentBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1200000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptSendProductAndPaymentBody.prototype, "money", void 0);
class ReceiptPayDebtBody {
}
exports.ReceiptPayDebtBody = ReceiptPayDebtBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1200000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptPayDebtBody.prototype, "money", void 0);
class ReceiptReturnProductBody {
}
exports.ReceiptReturnProductBody = ReceiptReturnProductBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1200000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptReturnProductBody.prototype, "money", void 0);


/***/ }),
/* 404 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReceiptUpdateBody = exports.ReceiptDraftInsertBody = exports.ReceiptUpdate = exports.ReceiptInsert = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
const receipt_item_body_1 = __webpack_require__(402);
class ReceiptInsert {
}
exports.ReceiptInsert = ReceiptInsert;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 52 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], ReceiptInsert.prototype, "distributorId", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)(),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => Number),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptInsert.prototype, "startedAt", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 50000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptInsert.prototype, "itemsActualMoney", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 80000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptInsert.prototype, "discountMoney", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 10 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptInsert.prototype, "discountPercent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: variable_1.DiscountType, example: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.DiscountType),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], ReceiptInsert.prototype, "discountType", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 50000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptInsert.prototype, "surcharge", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1250000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], ReceiptInsert.prototype, "totalMoney", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Khách hàng còn bo thêm tiền' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ReceiptInsert.prototype, "note", void 0);
class ReceiptUpdate extends (0, swagger_1.OmitType)(ReceiptInsert, ['distributorId']) {
}
exports.ReceiptUpdate = ReceiptUpdate;
class ReceiptDraftInsertBody {
}
exports.ReceiptDraftInsertBody = ReceiptDraftInsertBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: ReceiptInsert }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => ReceiptInsert),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", ReceiptInsert)
], ReceiptDraftInsertBody.prototype, "receipt", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ type: receipt_item_body_1.ReceiptItemBody, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => receipt_item_body_1.ReceiptItemBody),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ArrayMinSize)(1),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], ReceiptDraftInsertBody.prototype, "receiptItemList", void 0);
class ReceiptUpdateBody extends (0, swagger_1.OmitType)(ReceiptDraftInsertBody, ['receipt']) {
}
exports.ReceiptUpdateBody = ReceiptUpdateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: ReceiptUpdate }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => ReceiptUpdate),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", ReceiptUpdate)
], ReceiptUpdateBody.prototype, "receipt", void 0);


/***/ }),
/* 405 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRoleModule = void 0;
const common_1 = __webpack_require__(3);
const api_role_controller_1 = __webpack_require__(406);
const api_role_service_1 = __webpack_require__(407);
let ApiRoleModule = class ApiRoleModule {
};
exports.ApiRoleModule = ApiRoleModule;
exports.ApiRoleModule = ApiRoleModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_role_controller_1.ApiRoleController],
        providers: [api_role_service_1.ApiRoleService],
    })
], ApiRoleModule);


/***/ }),
/* 406 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRoleController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_role_service_1 = __webpack_require__(407);
const request_1 = __webpack_require__(408);
let ApiRoleController = class ApiRoleController {
    constructor(apiRoleService) {
        this.apiRoleService = apiRoleService;
    }
    pagination({ oid }, query) {
        return this.apiRoleService.pagination(oid, query);
    }
    list({ oid }, query) {
        return this.apiRoleService.getMany(oid, query);
    }
    async detail({ oid }, { id }, query) {
        return await this.apiRoleService.getOne(oid, id, query);
    }
    async create({ oid }, body) {
        return await this.apiRoleService.createOne(oid, body);
    }
    async update({ oid }, { id }, body) {
        return await this.apiRoleService.updateOne(oid, +id, body);
    }
    async destroyOne({ oid }, { id }) {
        return await this.apiRoleService.destroyOne(oid, id);
    }
};
exports.ApiRoleController = ApiRoleController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.ROLE_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.RolePaginationQuery !== "undefined" && request_1.RolePaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiRoleController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.ROLE_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.RoleGetManyQuery !== "undefined" && request_1.RoleGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", void 0)
], ApiRoleController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.ROLE_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object, typeof (_h = typeof request_1.RoleGetOneQuery !== "undefined" && request_1.RoleGetOneQuery) === "function" ? _h : Object]),
    __metadata("design:returntype", Promise)
], ApiRoleController.prototype, "detail", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.ROLE_CREATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_j = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _j : Object, typeof (_k = typeof request_1.RoleCreateBody !== "undefined" && request_1.RoleCreateBody) === "function" ? _k : Object]),
    __metadata("design:returntype", Promise)
], ApiRoleController.prototype, "create", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.ROLE_UPDATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_l = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _l : Object, typeof (_m = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _m : Object, typeof (_o = typeof request_1.RoleUpdateBody !== "undefined" && request_1.RoleUpdateBody) === "function" ? _o : Object]),
    __metadata("design:returntype", Promise)
], ApiRoleController.prototype, "update", null);
__decorate([
    (0, common_1.Delete)('destroy/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.ROLE_DELETE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_p = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _p : Object, typeof (_q = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _q : Object]),
    __metadata("design:returntype", Promise)
], ApiRoleController.prototype, "destroyOne", null);
exports.ApiRoleController = ApiRoleController = __decorate([
    (0, swagger_1.ApiTags)('Role'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('role'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_role_service_1.ApiRoleService !== "undefined" && api_role_service_1.ApiRoleService) === "function" ? _a : Object])
], ApiRoleController);


/***/ }),
/* 407 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRoleService = void 0;
const common_1 = __webpack_require__(3);
const cache_data_service_1 = __webpack_require__(30);
const exception_filter_1 = __webpack_require__(9);
const role_repository_1 = __webpack_require__(81);
let ApiRoleService = class ApiRoleService {
    constructor(roleRepository, cacheDataService) {
        this.roleRepository = roleRepository;
        this.cacheDataService = cacheDataService;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { data, total } = await this.roleRepository.pagination({
            page,
            limit,
            relation,
            condition: {
                oid,
                isActive: filter === null || filter === void 0 ? void 0 : filter.isActive,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            sort,
        });
        return {
            data,
            meta: { page, limit, total },
        };
    }
    async getMany(oid, query) {
        const { limit, filter } = query;
        const data = await this.roleRepository.findMany({
            condition: {
                oid,
                isActive: filter === null || filter === void 0 ? void 0 : filter.isActive,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            limit,
        });
        return { data };
    }
    async getOne(oid, id, query) {
        const role = await this.roleRepository.findOneBy({ oid, id });
        if (!role)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        return { data: { role } };
    }
    async createOne(oid, body) {
        const role = await this.roleRepository.insertOneFullFieldAndReturnEntity(Object.assign(Object.assign({}, body), { oid }));
        this.cacheDataService.clearUserAndRole(oid);
        return { data: { role } };
    }
    async updateOne(oid, id, body) {
        const [role] = await this.roleRepository.updateAndReturnEntity({ oid, id }, body);
        if (!role) {
            throw new exception_filter_1.BusinessException('error.Database.UpdateFailed');
        }
        this.cacheDataService.clearUserAndRole(oid);
        return { data: { role } };
    }
    async destroyOne(oid, id) {
        const affected = await this.roleRepository.delete({ oid, id });
        if (affected === 0) {
            throw new exception_filter_1.BusinessException('error.Database.DeleteFailed');
        }
        this.cacheDataService.clearUserAndRole(oid);
        return { data: { roleId: id } };
    }
};
exports.ApiRoleService = ApiRoleService;
exports.ApiRoleService = ApiRoleService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof role_repository_1.RoleRepository !== "undefined" && role_repository_1.RoleRepository) === "function" ? _a : Object, typeof (_b = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _b : Object])
], ApiRoleService);


/***/ }),
/* 408 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(409), exports);
__exportStar(__webpack_require__(410), exports);
__exportStar(__webpack_require__(411), exports);


/***/ }),
/* 409 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoleGetOneQuery = exports.RoleGetManyQuery = exports.RolePaginationQuery = exports.RoleGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const role_options_request_1 = __webpack_require__(410);
class RoleGetQuery {
}
exports.RoleGetQuery = RoleGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(role_options_request_1.RoleRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof role_options_request_1.RoleRelationQuery !== "undefined" && role_options_request_1.RoleRelationQuery) === "function" ? _a : Object)
], RoleGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            isActive: 1,
            updatedAt: { GT: Date.now() },
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(role_options_request_1.RoleFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof role_options_request_1.RoleFilterQuery !== "undefined" && role_options_request_1.RoleFilterQuery) === "function" ? _b : Object)
], RoleGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            id: 'ASC',
            code: 'DESC',
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(role_options_request_1.RoleSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof role_options_request_1.RoleSortQuery !== "undefined" && role_options_request_1.RoleSortQuery) === "function" ? _c : Object)
], RoleGetQuery.prototype, "sort", void 0);
class RolePaginationQuery extends (0, swagger_1.IntersectionType)(RoleGetQuery, query_1.PaginationQuery) {
}
exports.RolePaginationQuery = RolePaginationQuery;
class RoleGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(RoleGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.RoleGetManyQuery = RoleGetManyQuery;
class RoleGetOneQuery extends (0, swagger_1.PickType)(RoleGetQuery, ['relation']) {
}
exports.RoleGetOneQuery = RoleGetOneQuery;


/***/ }),
/* 410 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoleSortQuery = exports.RoleFilterQuery = exports.RoleRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const condition_timestamp_1 = __webpack_require__(201);
const query_1 = __webpack_require__(185);
class RoleRelationQuery {
}
exports.RoleRelationQuery = RoleRelationQuery;
class RoleFilterQuery {
}
exports.RoleFilterQuery = RoleFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], RoleFilterQuery.prototype, "isActive", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => condition_timestamp_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof condition_timestamp_1.ConditionTimestamp !== "undefined" && condition_timestamp_1.ConditionTimestamp) === "function" ? _a : Object)
], RoleFilterQuery.prototype, "updatedAt", void 0);
class RoleSortQuery extends query_1.SortQuery {
}
exports.RoleSortQuery = RoleSortQuery;


/***/ }),
/* 411 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoleUpdateBody = exports.RoleCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class RoleCreateBody {
}
exports.RoleCreateBody = RoleCreateBody;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Bán hàng' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RoleCreateBody.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: 'string', example: '[{"name":"Viên","rate":1}]' }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            const err = [];
            const result = JSON.parse(value).map((i) => {
                if (typeof i !== 'number' || i <= 0) {
                    err.push(i + ' is not number');
                }
                return i;
            });
            if (err.length)
                return err;
            else
                return JSON.stringify(result);
        }
        catch (error) {
            return [error.message];
        }
    }),
    (0, class_validator_1.IsString)({ message: 'Validate permissions failed: Example: ' + JSON.stringify([4, 5, 6]) }),
    __metadata("design:type", String)
], RoleCreateBody.prototype, "permissionIds", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], RoleCreateBody.prototype, "isActive", void 0);
class RoleUpdateBody extends RoleCreateBody {
}
exports.RoleUpdateBody = RoleUpdateBody;


/***/ }),
/* 412 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiSettingModule = void 0;
const common_1 = __webpack_require__(3);
const google_driver_module_1 = __webpack_require__(156);
const api_setting_google_driver_service_1 = __webpack_require__(413);
const api_setting_controller_1 = __webpack_require__(414);
const api_setting_service_1 = __webpack_require__(415);
let ApiSettingModule = class ApiSettingModule {
};
exports.ApiSettingModule = ApiSettingModule;
exports.ApiSettingModule = ApiSettingModule = __decorate([
    (0, common_1.Module)({
        imports: [google_driver_module_1.GoogleDriverModule],
        controllers: [api_setting_controller_1.ApiSettingController],
        providers: [api_setting_service_1.ApiSettingService, api_setting_google_driver_service_1.ApiSettingGoogleDriverService],
    })
], ApiSettingModule);


/***/ }),
/* 413 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiSettingGoogleDriverService = void 0;
const common_1 = __webpack_require__(3);
const cache_data_service_1 = __webpack_require__(30);
const setting_entity_1 = __webpack_require__(31);
const setting_repository_1 = __webpack_require__(82);
const google_driver_service_1 = __webpack_require__(158);
const socket_emit_service_1 = __webpack_require__(204);
let ApiSettingGoogleDriverService = class ApiSettingGoogleDriverService {
    constructor(googleDriverService, cacheDataService, socketEmitService, settingRepository) {
        this.googleDriverService = googleDriverService;
        this.cacheDataService = cacheDataService;
        this.socketEmitService = socketEmitService;
        this.settingRepository = settingRepository;
    }
    async getAuthUrl(options) {
        const { url } = await this.googleDriverService.getAuthUrl({ state: options.state });
        return { data: { url } };
    }
    async logout(oid) {
        const setting = await this.settingRepository.findOneBy({
            key: setting_entity_1.SettingKey.GOOGLE_DRIVER,
            oid,
        });
        if (!setting)
            return;
        const { email } = JSON.parse(setting.data);
        await this.googleDriverService.logout(email);
        await this.settingRepository.delete({ id: setting.id });
        await this.cacheDataService.reloadSettingMap(oid);
        return { data: true };
    }
    async loginCallback(query) {
        const { oid, email, refreshToken } = await this.googleDriverService.loginCallback(query);
        await this.settingRepository.upsertSetting({
            oid,
            key: setting_entity_1.SettingKey.GOOGLE_DRIVER,
            data: JSON.stringify({ oid, email, refreshToken }),
        });
        await this.cacheDataService.reloadSettingMap(oid);
        this.socketEmitService.settingReload(oid);
    }
    async getAllAccounts() {
        const data = await this.settingRepository.findManyBy({
            key: setting_entity_1.SettingKey.GOOGLE_DRIVER,
        });
        return { data: data.map((i) => JSON.parse(i.data)) };
    }
    async getAllFolders(email) {
        const data = await this.googleDriverService.getAllFolders(email);
        return { data };
    }
};
exports.ApiSettingGoogleDriverService = ApiSettingGoogleDriverService;
exports.ApiSettingGoogleDriverService = ApiSettingGoogleDriverService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof google_driver_service_1.GoogleDriverService !== "undefined" && google_driver_service_1.GoogleDriverService) === "function" ? _a : Object, typeof (_b = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _b : Object, typeof (_c = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _c : Object, typeof (_d = typeof setting_repository_1.SettingRepository !== "undefined" && setting_repository_1.SettingRepository) === "function" ? _d : Object])
], ApiSettingGoogleDriverService);


/***/ }),
/* 414 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiSettingController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const fastify_1 = __webpack_require__(304);
const permission_guard_1 = __webpack_require__(87);
const root_guard_1 = __webpack_require__(14);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_setting_google_driver_service_1 = __webpack_require__(413);
const api_setting_service_1 = __webpack_require__(415);
const setting_upsert_request_1 = __webpack_require__(416);
let ApiSettingController = class ApiSettingController {
    constructor(apiSettingService, apiSettingGoogleDriverService) {
        this.apiSettingService = apiSettingService;
        this.apiSettingGoogleDriverService = apiSettingGoogleDriverService;
    }
    async getMap({ oid }) {
        return await this.apiSettingService.getMap(oid);
    }
    async upsert({ oid }, { type }, body) {
        await this.apiSettingService.upsert(oid, type, body);
        return { success: true };
    }
    async getAuthUrl({ oid }) {
        return this.apiSettingGoogleDriverService.getAuthUrl({ state: `${oid}` });
    }
    async authLogout({ oid }) {
        return this.apiSettingGoogleDriverService.logout(oid);
    }
    async authCallback(query, reply) {
        await this.apiSettingGoogleDriverService.loginCallback(query);
        return reply.type('text/html').send(`<script>window.close();</script>`);
    }
    async getAllFolders() {
        return await this.apiSettingGoogleDriverService.getAllFolders('');
    }
    async getAllAccounts() {
        return await this.apiSettingGoogleDriverService.getAllAccounts();
    }
};
exports.ApiSettingController = ApiSettingController;
__decorate([
    (0, common_1.Get)('get-map'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_c = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _c : Object]),
    __metadata("design:returntype", Promise)
], ApiSettingController.prototype, "getMap", null);
__decorate([
    (0, common_1.Post)('upsert/:type'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.ORGANIZATION_SETTING_UPSERT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof setting_upsert_request_1.SettingUpsertParams !== "undefined" && setting_upsert_request_1.SettingUpsertParams) === "function" ? _e : Object, typeof (_f = typeof setting_upsert_request_1.SettingUpsertBody !== "undefined" && setting_upsert_request_1.SettingUpsertBody) === "function" ? _f : Object]),
    __metadata("design:returntype", Promise)
], ApiSettingController.prototype, "upsert", null);
__decorate([
    (0, common_1.Get)('google-driver/get-auth-url'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.ORGANIZATION_SETTING_UPSERT),
    __param(0, (0, external_request_1.External)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_g = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _g : Object]),
    __metadata("design:returntype", Promise)
], ApiSettingController.prototype, "getAuthUrl", null);
__decorate([
    (0, common_1.Post)('google-driver/logout'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.ORGANIZATION_SETTING_UPSERT),
    __param(0, (0, external_request_1.External)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_h = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _h : Object]),
    __metadata("design:returntype", Promise)
], ApiSettingController.prototype, "authLogout", null);
__decorate([
    (0, common_1.Get)('google-driver/login-callback'),
    __param(0, (0, common_1.Query)()),
    __param(1, (0, common_1.Res)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, typeof (_j = typeof fastify_1.FastifyReply !== "undefined" && fastify_1.FastifyReply) === "function" ? _j : Object]),
    __metadata("design:returntype", Promise)
], ApiSettingController.prototype, "authCallback", null);
__decorate([
    (0, common_1.Get)('google-driver/get-all-folders'),
    (0, user_guard_1.IsUser)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], ApiSettingController.prototype, "getAllFolders", null);
__decorate([
    (0, common_1.Get)('google-driver/get-all-accounts'),
    (0, root_guard_1.IsRoot)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], ApiSettingController.prototype, "getAllAccounts", null);
exports.ApiSettingController = ApiSettingController = __decorate([
    (0, swagger_1.ApiTags)('Setting'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('setting'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_setting_service_1.ApiSettingService !== "undefined" && api_setting_service_1.ApiSettingService) === "function" ? _a : Object, typeof (_b = typeof api_setting_google_driver_service_1.ApiSettingGoogleDriverService !== "undefined" && api_setting_google_driver_service_1.ApiSettingGoogleDriverService) === "function" ? _b : Object])
], ApiSettingController);


/***/ }),
/* 415 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiSettingService = void 0;
const common_1 = __webpack_require__(3);
const cache_data_service_1 = __webpack_require__(30);
const setting_repository_1 = __webpack_require__(82);
const socket_emit_service_1 = __webpack_require__(204);
let ApiSettingService = class ApiSettingService {
    constructor(cacheDataService, socketEmitService, settingRepository) {
        this.cacheDataService = cacheDataService;
        this.socketEmitService = socketEmitService;
        this.settingRepository = settingRepository;
    }
    async getMap(oid) {
        const settingMap = await this.cacheDataService.getSettingMap(oid);
        return { data: { settingMap } };
    }
    async upsert(oid, key, body) {
        const data = await this.settingRepository.upsertSetting({
            oid,
            key,
            data: body.data,
        });
        await this.cacheDataService.reloadSettingMap(oid);
        this.socketEmitService.settingReload(oid);
        return { data };
    }
};
exports.ApiSettingService = ApiSettingService;
exports.ApiSettingService = ApiSettingService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _a : Object, typeof (_b = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _b : Object, typeof (_c = typeof setting_repository_1.SettingRepository !== "undefined" && setting_repository_1.SettingRepository) === "function" ? _c : Object])
], ApiSettingService);


/***/ }),
/* 416 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SettingUpsertBody = exports.SettingUpsertParams = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const setting_entity_1 = __webpack_require__(31);
class SettingUpsertParams {
}
exports.SettingUpsertParams = SettingUpsertParams;
__decorate([
    (0, swagger_1.ApiProperty)({ example: setting_entity_1.SettingKey.GOOGLE_DRIVER }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", typeof (_a = typeof setting_entity_1.SettingKey !== "undefined" && setting_entity_1.SettingKey) === "function" ? _a : Object)
], SettingUpsertParams.prototype, "type", void 0);
class SettingUpsertBody {
}
exports.SettingUpsertBody = SettingUpsertBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], SettingUpsertBody.prototype, "data", void 0);


/***/ }),
/* 417 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiStatisticModule = void 0;
const common_1 = __webpack_require__(3);
const api_statistic_receipt_service_1 = __webpack_require__(418);
const api_statistic_ticket_service_1 = __webpack_require__(419);
const api_statistic_controller_1 = __webpack_require__(420);
const api_statistic_service_1 = __webpack_require__(421);
let ApiStatisticModule = class ApiStatisticModule {
};
exports.ApiStatisticModule = ApiStatisticModule;
exports.ApiStatisticModule = ApiStatisticModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_statistic_controller_1.ApiStatisticController],
        providers: [api_statistic_service_1.ApiStatisticService, api_statistic_receipt_service_1.ApiStatisticReceiptService, api_statistic_ticket_service_1.ApiStatisticTicketService],
    })
], ApiStatisticModule);


/***/ }),
/* 418 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiStatisticReceiptService = void 0;
const common_1 = __webpack_require__(3);
const time_helper_1 = __webpack_require__(119);
const statistic_receipt_repository_1 = __webpack_require__(125);
let ApiStatisticReceiptService = class ApiStatisticReceiptService {
    constructor(statisticReceiptRepository) {
        this.statisticReceiptRepository = statisticReceiptRepository;
    }
    async statisticReceipt(oid, query) {
        const { fromTime, toTime, timeType } = query;
        const data = await this.statisticReceiptRepository.statisticReceipt({
            oid,
            fromTime,
            toTime,
            timeType,
        });
        const dataMap = {};
        const date = new Date(fromTime.getTime());
        do {
            const currentTime = time_helper_1.DTimer.info(date, 7);
            let time = '';
            if (timeType === 'date') {
                time = time_helper_1.DTimer.timeToText(date, 'DD/MM/YYYY', 7);
                date.setDate(date.getDate() + 1);
            }
            if (timeType === 'month') {
                time = time_helper_1.DTimer.timeToText(date, 'MM/YYYY', 7);
                date.setMonth(date.getMonth() + 1);
            }
            dataMap[time] = {
                oid,
                year: currentTime.year,
                month: currentTime.month + 1,
                date: currentTime.date,
                sumDiscountMoney: 0,
                sumTotalMoney: 0,
                sumDebt: 0,
                countReceipt: 0,
            };
        } while (date.getTime() <= toTime.getTime());
        data.forEach((i) => {
            const year = i.year;
            const month = `0${i.month}`.slice(-2);
            const date = `0${i.date}`.slice(-2);
            let time = '';
            if (timeType === 'date')
                time = `${date}/${month}/${year}`;
            if (timeType === 'month')
                time = `${month}/${year}`;
            dataMap[time] = i;
        });
        return { data: dataMap };
    }
};
exports.ApiStatisticReceiptService = ApiStatisticReceiptService;
exports.ApiStatisticReceiptService = ApiStatisticReceiptService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof statistic_receipt_repository_1.StatisticReceiptRepository !== "undefined" && statistic_receipt_repository_1.StatisticReceiptRepository) === "function" ? _a : Object])
], ApiStatisticReceiptService);


/***/ }),
/* 419 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiStatisticTicketService = void 0;
const common_1 = __webpack_require__(3);
const time_helper_1 = __webpack_require__(119);
const ticket_statistic_repository_1 = __webpack_require__(137);
let ApiStatisticTicketService = class ApiStatisticTicketService {
    constructor(statisticTicketRepository) {
        this.statisticTicketRepository = statisticTicketRepository;
    }
    async statisticTicket(oid, query) {
        const { filter, groupTimeType, fromTime, toTime } = query;
        const data = await this.statisticTicketRepository.statistic({
            condition: {
                oid,
                registeredAt: {
                    GTE: fromTime.getTime(),
                    LTE: toTime.getTime(),
                },
                ticketType: filter.ticketType,
                ticketStatus: filter.ticketStatus,
            },
            groupTimeType,
        });
        const dataMap = {};
        const date = new Date(fromTime.getTime());
        do {
            const currentTime = time_helper_1.DTimer.info(date, 7);
            let time = '';
            if (groupTimeType === 'date') {
                time = time_helper_1.DTimer.timeToText(date, 'DD/MM/YYYY', 7);
                date.setDate(date.getDate() + 1);
            }
            if (groupTimeType === 'month') {
                time = time_helper_1.DTimer.timeToText(date, 'MM/YYYY', 7);
                date.setMonth(date.getMonth() + 1);
            }
            dataMap[time] = {
                oid,
                year: currentTime.year,
                month: currentTime.month + 1,
                date: currentTime.date,
                sumTotalCostAmount: 0,
                sumProcedureMoney: 0,
                sumProductMoney: 0,
                sumRadiologyMoney: 0,
                sumLaboratoryMoney: 0,
                sumSurcharge: 0,
                sumExpense: 0,
                sumDiscountMoney: 0,
                sumTotalMoney: 0,
                sumProfit: 0,
                sumDebt: 0,
                countTicket: 0,
            };
        } while (date.getTime() <= toTime.getTime());
        data.forEach((i) => {
            const year = i.year;
            const month = `0${i.month}`.slice(-2);
            const date = `0${i.date}`.slice(-2);
            let time = '';
            if (groupTimeType === 'date')
                time = `${date}/${month}/${year}`;
            if (groupTimeType === 'month')
                time = `${month}/${year}`;
            dataMap[time] = Object.assign(Object.assign({}, i), { oid });
        });
        return { data: dataMap };
    }
};
exports.ApiStatisticTicketService = ApiStatisticTicketService;
exports.ApiStatisticTicketService = ApiStatisticTicketService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof ticket_statistic_repository_1.TicketStatisticRepository !== "undefined" && ticket_statistic_repository_1.TicketStatisticRepository) === "function" ? _a : Object])
], ApiStatisticTicketService);


/***/ }),
/* 420 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiStatisticController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const permission_guard_1 = __webpack_require__(87);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_statistic_ticket_service_1 = __webpack_require__(419);
const api_statistic_service_1 = __webpack_require__(421);
const request_1 = __webpack_require__(422);
let ApiStatisticController = class ApiStatisticController {
    constructor(apiStatisticService, apiStatisticTicketService) {
        this.apiStatisticService = apiStatisticService;
        this.apiStatisticTicketService = apiStatisticTicketService;
    }
    async sumWarehouse({ oid }) {
        return await this.apiStatisticService.sumWarehouse(oid);
    }
    async topProductBestSelling({ oid }, query) {
        return await this.apiStatisticService.topProductBestSelling(oid, query);
    }
    async topProductHighSumRetailMoney({ oid }, query) {
        return await this.apiStatisticService.topProductHighMoney(oid, query);
    }
    async topProcedureBestSelling({ oid }, query) {
        return await this.apiStatisticService.topProcedureBestSelling(oid, query);
    }
    async topCustomerBestTicket({ oid }, query) {
        return await this.apiStatisticService.topCustomerBestTicket(oid, query);
    }
    sumCustomerDebt({ oid }) {
        return this.apiStatisticService.sumCustomerDebt(oid);
    }
    async statisticTicket({ oid }, query) {
        return await this.apiStatisticTicketService.statisticTicket(oid, query);
    }
};
exports.ApiStatisticController = ApiStatisticController;
__decorate([
    (0, common_1.Get)('sum-warehouse'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.STATISTIC_PRODUCT),
    __param(0, (0, external_request_1.External)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_c = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _c : Object]),
    __metadata("design:returntype", Promise)
], ApiStatisticController.prototype, "sumWarehouse", null);
__decorate([
    (0, common_1.Get)('top-product-best-selling'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.STATISTIC_PRODUCT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.StatisticTopBestSellingQuery !== "undefined" && request_1.StatisticTopBestSellingQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", Promise)
], ApiStatisticController.prototype, "topProductBestSelling", null);
__decorate([
    (0, common_1.Get)('top-product-high-money'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.STATISTIC_PRODUCT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof request_1.StatisticProductHighMoneyQuery !== "undefined" && request_1.StatisticProductHighMoneyQuery) === "function" ? _g : Object]),
    __metadata("design:returntype", Promise)
], ApiStatisticController.prototype, "topProductHighSumRetailMoney", null);
__decorate([
    (0, common_1.Get)('top-procedure-best-selling'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.STATISTIC_PROCEDURE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_h = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _h : Object, typeof (_j = typeof request_1.StatisticTopBestSellingQuery !== "undefined" && request_1.StatisticTopBestSellingQuery) === "function" ? _j : Object]),
    __metadata("design:returntype", Promise)
], ApiStatisticController.prototype, "topProcedureBestSelling", null);
__decorate([
    (0, common_1.Get)('top-customer-best-ticket'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.STATISTIC_CUSTOMER),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_k = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _k : Object, typeof (_l = typeof request_1.StatisticTopCustomerBestTicketQuery !== "undefined" && request_1.StatisticTopCustomerBestTicketQuery) === "function" ? _l : Object]),
    __metadata("design:returntype", Promise)
], ApiStatisticController.prototype, "topCustomerBestTicket", null);
__decorate([
    (0, common_1.Get)('sum-customer-debt'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.STATISTIC_CUSTOMER),
    __param(0, (0, external_request_1.External)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_m = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _m : Object]),
    __metadata("design:returntype", void 0)
], ApiStatisticController.prototype, "sumCustomerDebt", null);
__decorate([
    (0, common_1.Get)('statistic-ticket'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.STATISTIC_TICKET),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_o = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _o : Object, typeof (_p = typeof request_1.StatisticTicketQuery !== "undefined" && request_1.StatisticTicketQuery) === "function" ? _p : Object]),
    __metadata("design:returntype", Promise)
], ApiStatisticController.prototype, "statisticTicket", null);
exports.ApiStatisticController = ApiStatisticController = __decorate([
    (0, swagger_1.ApiTags)('Statistic'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('statistic'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_statistic_service_1.ApiStatisticService !== "undefined" && api_statistic_service_1.ApiStatisticService) === "function" ? _a : Object, typeof (_b = typeof api_statistic_ticket_service_1.ApiStatisticTicketService !== "undefined" && api_statistic_ticket_service_1.ApiStatisticTicketService) === "function" ? _b : Object])
], ApiStatisticController);


/***/ }),
/* 421 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiStatisticService = void 0;
const common_1 = __webpack_require__(3);
const customer_repository_1 = __webpack_require__(100);
const procedure_repository_1 = __webpack_require__(110);
const product_repository_1 = __webpack_require__(113);
const statistic_repository_1 = __webpack_require__(126);
const ticket_procedure_repository_1 = __webpack_require__(129);
let ApiStatisticService = class ApiStatisticService {
    constructor(statisticRepository, productRepository, procedureRepository, customerRepository, ticketProcedureRepository) {
        this.statisticRepository = statisticRepository;
        this.productRepository = productRepository;
        this.procedureRepository = procedureRepository;
        this.customerRepository = customerRepository;
        this.ticketProcedureRepository = ticketProcedureRepository;
    }
    async sumWarehouse(oid) {
        const data = await this.statisticRepository.sumWarehouse(oid);
        return {
            data: {
                totalCostAmount: Number(data.totalCostAmount),
                totalRetailMoney: Number(data.totalRetailMoney),
            },
        };
    }
    async topProductBestSelling(oid, query) {
        const { fromTime, toTime, orderBy, limit } = query;
        const data = await this.statisticRepository.topProductBestSelling({
            oid,
            fromTime: fromTime.getTime(),
            toTime: toTime.getTime(),
            limit,
            orderBy,
        });
        const productIds = data.map((i) => i.productId);
        const productList = await this.productRepository.findManyBy({
            oid,
            id: { IN: productIds },
        });
        const productMap = {};
        productList.forEach((i) => (productMap[i.id] = i));
        const topData = data.map((i) => ({
            productId: i.productId,
            sumQuantity: i.sumQuantity,
            sumCostAmount: i.sumCostAmount,
            sumActualMoney: i.sumActualMoney,
            sumProfit: i.sumProfit,
            product: productMap[i.productId],
        }));
        return { data: topData };
    }
    async topProductHighMoney(oid, query) {
        const { orderBy, limit } = query;
        const data = await this.statisticRepository.topProductHighMoney({
            oid,
            limit,
            orderBy,
        });
        return { data };
    }
    async topProcedureBestSelling(oid, query) {
        const { fromTime, toTime, orderBy, limit } = query;
        const data = await this.ticketProcedureRepository.topProcedureBestSelling({
            condition: {
                oid,
                startedAt: { GTE: fromTime.getTime(), LTE: toTime.getTime() },
            },
            orderBy,
            limit,
        });
        const procedureIds = data.map((i) => i.procedureId);
        const procedureList = await this.procedureRepository.findManyBy({
            oid,
            id: { IN: procedureIds },
        });
        const procedureMap = {};
        procedureList.forEach((i) => (procedureMap[i.id] = i));
        const topData = data.map((i) => ({
            procedureId: i.procedureId,
            sumQuantity: i.sumQuantity,
            sumActualMoney: i.sumActualMoney,
            procedure: procedureMap[i.procedureId],
        }));
        return { data: topData };
    }
    async topCustomerBestTicket(oid, query) {
        const { fromTime, toTime, orderBy, limit } = query;
        const data = await this.statisticRepository.topCustomerBestTicket({
            oid,
            fromTime,
            toTime,
            orderBy,
            limit,
        });
        const customerIds = data.map((i) => i.customerId);
        const customerList = await this.customerRepository.findManyBy({
            oid,
            id: { IN: customerIds },
        });
        const customerMap = {};
        customerList.forEach((i) => (customerMap[i.id] = i));
        const topData = data.map((i) => ({
            customerId: i.customerId,
            sumTotalCostAmount: i.sumTotalCostAmount,
            sumExpense: i.sumExpense,
            sumSurcharge: i.sumSurcharge,
            sumTotalMoney: i.sumTotalMoney,
            sumProfit: i.sumProfit,
            sumDebt: i.sumDebt,
            countTicket: i.countTicket,
            customer: customerMap[i.customerId],
        }));
        return { data: topData };
    }
    async sumCustomerDebt(oid) {
        const customerSumDebt = await this.statisticRepository.sumCustomerDebt(oid);
        return { data: { customerSumDebt } };
    }
};
exports.ApiStatisticService = ApiStatisticService;
exports.ApiStatisticService = ApiStatisticService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof statistic_repository_1.StatisticRepository !== "undefined" && statistic_repository_1.StatisticRepository) === "function" ? _a : Object, typeof (_b = typeof product_repository_1.ProductRepository !== "undefined" && product_repository_1.ProductRepository) === "function" ? _b : Object, typeof (_c = typeof procedure_repository_1.ProcedureRepository !== "undefined" && procedure_repository_1.ProcedureRepository) === "function" ? _c : Object, typeof (_d = typeof customer_repository_1.CustomerRepository !== "undefined" && customer_repository_1.CustomerRepository) === "function" ? _d : Object, typeof (_e = typeof ticket_procedure_repository_1.TicketProcedureRepository !== "undefined" && ticket_procedure_repository_1.TicketProcedureRepository) === "function" ? _e : Object])
], ApiStatisticService);


/***/ }),
/* 422 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(423), exports);
__exportStar(__webpack_require__(424), exports);
__exportStar(__webpack_require__(428), exports);
__exportStar(__webpack_require__(429), exports);
__exportStar(__webpack_require__(430), exports);
__exportStar(__webpack_require__(431), exports);


/***/ }),
/* 423 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StatisticMonthQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class StatisticMonthQuery {
}
exports.StatisticMonthQuery = StatisticMonthQuery;
__decorate([
    (0, swagger_1.ApiProperty)({}),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => Number),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], StatisticMonthQuery.prototype, "year", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({}),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => Number),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.Min)(1),
    (0, class_validator_1.Max)(12),
    __metadata("design:type", Number)
], StatisticMonthQuery.prototype, "month", void 0);


/***/ }),
/* 424 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StatisticTicketQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const request_1 = __webpack_require__(425);
class StatisticTicketQuery extends (0, swagger_1.PickType)(request_1.TicketGetQuery, ['filter']) {
}
exports.StatisticTicketQuery = StatisticTicketQuery;
__decorate([
    (0, swagger_1.ApiProperty)(),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['date', 'month']),
    __metadata("design:type", String)
], StatisticTicketQuery.prototype, "groupTimeType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)(),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => Date),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
], StatisticTicketQuery.prototype, "fromTime", void 0);
__decorate([
    (0, swagger_1.ApiProperty)(),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => Date),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], StatisticTicketQuery.prototype, "toTime", void 0);


/***/ }),
/* 425 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(426), exports);
__exportStar(__webpack_require__(427), exports);


/***/ }),
/* 426 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketGetOneQuery = exports.TicketGetManyQuery = exports.TicketPaginationQuery = exports.TicketGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const dto_1 = __webpack_require__(195);
const ticket_options_request_1 = __webpack_require__(427);
class TicketGetQuery {
}
exports.TicketGetQuery = TicketGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            customer: true,
            customerPaymentList: true,
            ticketAttributeList: true,
            ticketProductList: { product: true },
            ticketProcedureList: { procedure: true },
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(ticket_options_request_1.TicketRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof ticket_options_request_1.TicketRelationQuery !== "undefined" && ticket_options_request_1.TicketRelationQuery) === "function" ? _a : Object)
], TicketGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            customerId: 1,
            startedAt: { GT: 150000 },
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(ticket_options_request_1.TicketFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof ticket_options_request_1.TicketFilterQuery !== "undefined" && ticket_options_request_1.TicketFilterQuery) === "function" ? _b : Object)
], TicketGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ id: 'ASC' }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(ticket_options_request_1.TicketSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof ticket_options_request_1.TicketSortQuery !== "undefined" && ticket_options_request_1.TicketSortQuery) === "function" ? _c : Object)
], TicketGetQuery.prototype, "sort", void 0);
class TicketPaginationQuery extends (0, swagger_1.IntersectionType)(TicketGetQuery, dto_1.PaginationQuery) {
}
exports.TicketPaginationQuery = TicketPaginationQuery;
class TicketGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(TicketGetQuery, ['filter', 'relation', 'sort']), dto_1.LimitQuery) {
}
exports.TicketGetManyQuery = TicketGetManyQuery;
class TicketGetOneQuery extends (0, swagger_1.PickType)(TicketGetQuery, ['relation']) {
}
exports.TicketGetOneQuery = TicketGetOneQuery;


/***/ }),
/* 427 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketSortQuery = exports.TicketFilterQuery = exports.TicketRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const dto_1 = __webpack_require__(195);
const ticket_entity_1 = __webpack_require__(50);
class TicketRelationQuery {
}
exports.TicketRelationQuery = TicketRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketRelationQuery.prototype, "customer", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketRelationQuery.prototype, "customerPaymentList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketRelationQuery.prototype, "ticketSurchargeList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketRelationQuery.prototype, "ticketExpenseList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketRelationQuery.prototype, "ticketAttributeList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], TicketRelationQuery.prototype, "ticketProductList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], TicketRelationQuery.prototype, "ticketProductConsumableList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], TicketRelationQuery.prototype, "ticketProductPrescriptionList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], TicketRelationQuery.prototype, "ticketProcedureList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], TicketRelationQuery.prototype, "ticketLaboratoryList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], TicketRelationQuery.prototype, "ticketRadiologyList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], TicketRelationQuery.prototype, "ticketUserList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketRelationQuery.prototype, "toAppointment", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketRelationQuery.prototype, "customerSource", void 0);
const ConditionEnumTicketType = (0, dto_1.createConditionEnum)(ticket_entity_1.TicketType);
const ConditionEnumTicketStatus = (0, dto_1.createConditionEnum)(ticket_entity_1.TicketStatus);
class TicketFilterQuery {
}
exports.TicketFilterQuery = TicketFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)((params) => (0, dto_1.transformConditionEnum)(params, ticket_entity_1.TicketStatus)),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], TicketFilterQuery.prototype, "ticketStatus", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)((params) => (0, dto_1.transformConditionEnum)(params, ticket_entity_1.TicketType)),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], TicketFilterQuery.prototype, "ticketType", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketFilterQuery.prototype, "customerId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => dto_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_e = typeof dto_1.ConditionTimestamp !== "undefined" && dto_1.ConditionTimestamp) === "function" ? _e : Object)
], TicketFilterQuery.prototype, "registeredAt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => dto_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_f = typeof dto_1.ConditionTimestamp !== "undefined" && dto_1.ConditionTimestamp) === "function" ? _f : Object)
], TicketFilterQuery.prototype, "startedAt", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => dto_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_g = typeof dto_1.ConditionTimestamp !== "undefined" && dto_1.ConditionTimestamp) === "function" ? _g : Object)
], TicketFilterQuery.prototype, "updatedAt", void 0);
class TicketSortQuery extends dto_1.SortQuery {
}
exports.TicketSortQuery = TicketSortQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], TicketSortQuery.prototype, "registeredAt", void 0);


/***/ }),
/* 428 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StatisticTimeQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
class StatisticTimeQuery extends query_1.LimitQuery {
}
exports.StatisticTimeQuery = StatisticTimeQuery;
__decorate([
    (0, swagger_1.ApiProperty)(),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => Date),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
], StatisticTimeQuery.prototype, "fromTime", void 0);
__decorate([
    (0, swagger_1.ApiProperty)(),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => Date),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], StatisticTimeQuery.prototype, "toTime", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)(),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['date', 'month']),
    __metadata("design:type", String)
], StatisticTimeQuery.prototype, "timeType", void 0);


/***/ }),
/* 429 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StatisticTopBestSellingQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const statistic_time_query_1 = __webpack_require__(428);
class StatisticTopBestSellingQuery extends statistic_time_query_1.StatisticTimeQuery {
}
exports.StatisticTopBestSellingQuery = StatisticTopBestSellingQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        enum: ['sumActualMoney', 'sumProfit', 'sumQuantity'],
        example: 'sumQuantity',
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['sumActualMoney', 'sumQuantity', 'sumProfit']),
    __metadata("design:type", String)
], StatisticTopBestSellingQuery.prototype, "orderBy", void 0);


/***/ }),
/* 430 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StatisticTopCustomerBestTicketQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const statistic_time_query_1 = __webpack_require__(428);
class StatisticTopCustomerBestTicketQuery extends statistic_time_query_1.StatisticTimeQuery {
}
exports.StatisticTopCustomerBestTicketQuery = StatisticTopCustomerBestTicketQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        enum: ['sumTotalMoney', 'sumProfit', 'countTicket'],
        example: 'sumTotalMoney',
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['sumTotalMoney', 'sumProfit', 'countTicket']),
    __metadata("design:type", String)
], StatisticTopCustomerBestTicketQuery.prototype, "orderBy", void 0);


/***/ }),
/* 431 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StatisticProductHighMoneyQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const dto_1 = __webpack_require__(195);
class StatisticProductHighMoneyQuery extends dto_1.LimitQuery {
}
exports.StatisticProductHighMoneyQuery = StatisticProductHighMoneyQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        enum: ['quantity', 'costAmount', 'sumRetailMoney'],
        example: 'costAmount',
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['quantity', 'costAmount', 'sumRetailMoney']),
    __metadata("design:type", String)
], StatisticProductHighMoneyQuery.prototype, "orderBy", void 0);


/***/ }),
/* 432 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketClinicModule = void 0;
const common_1 = __webpack_require__(3);
const api_ticket_clinic_controller_1 = __webpack_require__(433);
const api_ticket_clinic_service_1 = __webpack_require__(434);
let ApiTicketClinicModule = class ApiTicketClinicModule {
};
exports.ApiTicketClinicModule = ApiTicketClinicModule;
exports.ApiTicketClinicModule = ApiTicketClinicModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_ticket_clinic_controller_1.ApiTicketClinicController],
        providers: [api_ticket_clinic_service_1.ApiTicketClinicService],
    })
], ApiTicketClinicModule);


/***/ }),
/* 433 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketClinicController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const dto_1 = __webpack_require__(195);
const permission_guard_1 = __webpack_require__(87);
const interceptor_1 = __webpack_require__(306);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_ticket_clinic_service_1 = __webpack_require__(434);
const request_1 = __webpack_require__(435);
const ticket_clinic_payment_body_1 = __webpack_require__(437);
const ticket_clinic_return_product_list_body_1 = __webpack_require__(438);
const ticket_clinic_update_diagnosis_body_1 = __webpack_require__(445);
let ApiTicketClinicController = class ApiTicketClinicController {
    constructor(apiTicketClinicService) {
        this.apiTicketClinicService = apiTicketClinicService;
    }
    async create({ oid }, body) {
        return await this.apiTicketClinicService.create({
            oid,
            body,
        });
    }
    async startCheckup({ oid }, { id }) {
        return await this.apiTicketClinicService.startCheckup({ oid, ticketId: id });
    }
    async updateDiagnosisBasic({ oid }, files, { id }, body) {
        return await this.apiTicketClinicService.updateDiagnosis({
            oid,
            ticketId: id,
            body,
            files,
        });
    }
    async updateTicketProcedureList({ oid }, { id }, body) {
        return await this.apiTicketClinicService.updateTicketProcedureList({
            oid,
            ticketId: id,
            body,
        });
    }
    async updateTicketProductConsumable({ oid }, { id }, body) {
        return await this.apiTicketClinicService.updateTicketProductConsumable({
            oid,
            ticketId: id,
            body,
        });
    }
    async updateTicketProductPrescription({ oid }, { id }, body) {
        return await this.apiTicketClinicService.updateTicketProductPrescription({
            oid,
            ticketId: id,
            body,
        });
    }
    async updateTicketRadiologyList({ oid }, { id }, body) {
        return await this.apiTicketClinicService.updateTicketRadiologyList({
            oid,
            ticketId: id,
            body,
        });
    }
    async updateTicketLaboratoryList({ oid }, { id }, body) {
        return await this.apiTicketClinicService.updateTicketLaboratoryList({
            oid,
            ticketId: id,
            body,
        });
    }
    async updateItemsMoney({ oid }, { id }, body) {
        return await this.apiTicketClinicService.updateItemsMoney({ oid, ticketId: id, body });
    }
    async sendProduct({ oid }, { id }) {
        return await this.apiTicketClinicService.sendProduct({ oid, ticketId: id });
    }
    async returnProduct({ oid }, { id }, body) {
        return await this.apiTicketClinicService.returnProduct({ oid, ticketId: id, body });
    }
    async prepayment({ oid }, { id }, body) {
        return await this.apiTicketClinicService.prepayment({ oid, ticketId: id, body });
    }
    async refundOverpaid({ oid }, { id }, body) {
        return await this.apiTicketClinicService.refundOverpaid({ oid, ticketId: id, body });
    }
    async payDebt({ oid }, { id }, body) {
        return await this.apiTicketClinicService.payDebt({ oid, ticketId: id, body });
    }
    async close({ oid }, { id }) {
        return await this.apiTicketClinicService.close({ oid, ticketId: id });
    }
    async reopen({ oid }, { id }) {
        return await this.apiTicketClinicService.reopen({ oid, ticketId: id });
    }
    async destroy({ oid }, { id }) {
        return await this.apiTicketClinicService.destroy({
            oid,
            ticketId: id,
        });
    }
};
exports.ApiTicketClinicController = ApiTicketClinicController;
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_CREATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.TicketClinicCreateBody !== "undefined" && request_1.TicketClinicCreateBody) === "function" ? _c : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "create", null);
__decorate([
    (0, common_1.Post)(':id/start-checkup'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_START_CHECKUP),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _e : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "startCheckup", null);
__decorate([
    (0, common_1.Post)(':id/update-diagnosis'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_DIAGNOSIS_BASIC),
    (0, swagger_1.ApiConsumes)('multipart/form-data'),
    (0, common_1.UseInterceptors)((0, interceptor_1.FastifyFilesInterceptor)('files', 10, {})),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.UploadedFiles)()),
    __param(2, (0, common_1.Param)()),
    __param(3, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, Array, typeof (_g = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _g : Object, typeof (_h = typeof ticket_clinic_update_diagnosis_body_1.TicketClinicUpdateDiagnosisBody !== "undefined" && ticket_clinic_update_diagnosis_body_1.TicketClinicUpdateDiagnosisBody) === "function" ? _h : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "updateDiagnosisBasic", null);
__decorate([
    (0, common_1.Post)(':id/update-ticket-procedure-list'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_PROCEDURE_LIST),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_j = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _j : Object, typeof (_k = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _k : Object, typeof (_l = typeof request_1.TicketClinicUpdateTicketProcedureListBody !== "undefined" && request_1.TicketClinicUpdateTicketProcedureListBody) === "function" ? _l : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "updateTicketProcedureList", null);
__decorate([
    (0, common_1.Post)(':id/update-ticket-product-consumable'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_PRODUCT_CONSUMABLE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_m = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _m : Object, typeof (_o = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _o : Object, typeof (_p = typeof request_1.TicketClinicUpdateConsumableBody !== "undefined" && request_1.TicketClinicUpdateConsumableBody) === "function" ? _p : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "updateTicketProductConsumable", null);
__decorate([
    (0, common_1.Post)(':id/update-ticket-product-prescription'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_PRODUCT_PRESCRIPTION),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_q = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _q : Object, typeof (_r = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _r : Object, typeof (_s = typeof request_1.TicketClinicUpdatePrescriptionBody !== "undefined" && request_1.TicketClinicUpdatePrescriptionBody) === "function" ? _s : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "updateTicketProductPrescription", null);
__decorate([
    (0, common_1.Post)(':id/update-ticket-radiology-list'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_RADIOLOGY_LIST),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_t = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _t : Object, typeof (_u = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _u : Object, typeof (_v = typeof request_1.TicketClinicUpdateTicketRadiologyListBody !== "undefined" && request_1.TicketClinicUpdateTicketRadiologyListBody) === "function" ? _v : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "updateTicketRadiologyList", null);
__decorate([
    (0, common_1.Post)(':id/update-ticket-laboratory-list'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_TICKET_RADIOLOGY_LIST),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_w = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _w : Object, typeof (_x = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _x : Object, typeof (_y = typeof request_1.TicketClinicUpdateTicketLaboratoryListBody !== "undefined" && request_1.TicketClinicUpdateTicketLaboratoryListBody) === "function" ? _y : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "updateTicketLaboratoryList", null);
__decorate([
    (0, common_1.Post)(':id/update-items-money'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_UPDATE_ITEMS_MONEY),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_z = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _z : Object, typeof (_0 = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _0 : Object, typeof (_1 = typeof request_1.TicketClinicUpdateItemsMoneyBody !== "undefined" && request_1.TicketClinicUpdateItemsMoneyBody) === "function" ? _1 : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "updateItemsMoney", null);
__decorate([
    (0, common_1.Post)(':id/send-product'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_SEND_PRODUCT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_2 = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _2 : Object, typeof (_3 = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _3 : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "sendProduct", null);
__decorate([
    (0, common_1.Post)(':id/return-product'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_RETURN_PRODUCT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_4 = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _4 : Object, typeof (_5 = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _5 : Object, typeof (_6 = typeof ticket_clinic_return_product_list_body_1.TicketClinicReturnProductListBody !== "undefined" && ticket_clinic_return_product_list_body_1.TicketClinicReturnProductListBody) === "function" ? _6 : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "returnProduct", null);
__decorate([
    (0, common_1.Post)(':id/prepayment'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_PREPAYMENT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_7 = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _7 : Object, typeof (_8 = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _8 : Object, typeof (_9 = typeof ticket_clinic_payment_body_1.TicketClinicPaymentBody !== "undefined" && ticket_clinic_payment_body_1.TicketClinicPaymentBody) === "function" ? _9 : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "prepayment", null);
__decorate([
    (0, common_1.Post)(':id/refund-overpaid'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_REFUND_OVERPAID),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_10 = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _10 : Object, typeof (_11 = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _11 : Object, typeof (_12 = typeof ticket_clinic_payment_body_1.TicketClinicPaymentBody !== "undefined" && ticket_clinic_payment_body_1.TicketClinicPaymentBody) === "function" ? _12 : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "refundOverpaid", null);
__decorate([
    (0, common_1.Post)(':id/pay-debt'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_PAY_DEBT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_13 = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _13 : Object, typeof (_14 = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _14 : Object, typeof (_15 = typeof ticket_clinic_payment_body_1.TicketClinicPaymentBody !== "undefined" && ticket_clinic_payment_body_1.TicketClinicPaymentBody) === "function" ? _15 : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "payDebt", null);
__decorate([
    (0, common_1.Post)(':id/close'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_CLOSE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_16 = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _16 : Object, typeof (_17 = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _17 : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "close", null);
__decorate([
    (0, common_1.Post)(':id/reopen'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_REOPEN),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_18 = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _18 : Object, typeof (_19 = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _19 : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "reopen", null);
__decorate([
    (0, common_1.Delete)(':id/destroy'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_CLINIC_DESTROY_DRAFT_SCHEDULE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_20 = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _20 : Object, typeof (_21 = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _21 : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketClinicController.prototype, "destroy", null);
exports.ApiTicketClinicController = ApiTicketClinicController = __decorate([
    (0, swagger_1.ApiTags)('TicketClinic'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('ticket-clinic'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_ticket_clinic_service_1.ApiTicketClinicService !== "undefined" && api_ticket_clinic_service_1.ApiTicketClinicService) === "function" ? _a : Object])
], ApiTicketClinicController);


/***/ }),
/* 434 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketClinicService = void 0;
const common_1 = __webpack_require__(3);
const cache_data_service_1 = __webpack_require__(30);
const exception_filter_1 = __webpack_require__(9);
const object_helper_1 = __webpack_require__(85);
const time_helper_1 = __webpack_require__(119);
const variable_1 = __webpack_require__(41);
const appointment_entity_1 = __webpack_require__(37);
const ticket_laboratory_entity_1 = __webpack_require__(54);
const ticket_product_entity_1 = __webpack_require__(61);
const ticket_radiology_entity_1 = __webpack_require__(62);
const ticket_entity_1 = __webpack_require__(50);
const appointment_repository_1 = __webpack_require__(94);
const customer_repository_1 = __webpack_require__(100);
const image_repository_1 = __webpack_require__(103);
const ticket_attribute_repository_1 = __webpack_require__(127);
const ticket_product_repository_1 = __webpack_require__(130);
const ticket_user_repository_1 = __webpack_require__(132);
const ticket_pay_debt_1 = __webpack_require__(133);
const ticket_payment_and_close_1 = __webpack_require__(134);
const ticket_prepayment_1 = __webpack_require__(135);
const ticket_send_product_1 = __webpack_require__(136);
const ticket_repository_1 = __webpack_require__(138);
const ticket_clinic_refund_overpaid_1 = __webpack_require__(139);
const ticket_clinic_reopen_1 = __webpack_require__(140);
const ticket_clinic_return_product_1 = __webpack_require__(141);
const ticket_clinic_update_items_money_1 = __webpack_require__(142);
const ticket_clinic_update_ticket_laboratory_list_1 = __webpack_require__(143);
const ticket_clinic_update_ticket_procedure_list_1 = __webpack_require__(144);
const ticket_clinic_update_ticket_product_list_1 = __webpack_require__(145);
const ticket_clinic_update_ticket_radiology_list_1 = __webpack_require__(146);
const image_manager_service_1 = __webpack_require__(311);
const socket_emit_service_1 = __webpack_require__(204);
let ApiTicketClinicService = class ApiTicketClinicService {
    constructor(socketEmitService, cacheDataService, imageManagerService, imageRepository, customerRepository, appointmentRepository, ticketRepository, ticketAttributeRepository, ticketUserRepository, ticketProductRepository, ticketClinicUpdateTicketProcedureList, ticketClinicUpdateTicketLaboratoryList, ticketClinicUpdateTicketRadiologyList, ticketClinicUpdateTicketProductList, ticketClinicUpdateItemsMoney, ticketClinicReturnProduct, ticketClinicRefundOverpaid, ticketSendProduct, ticketPrepayment, ticketPaymentAndClose, ticketPayDebt, ticketClinicReopen) {
        this.socketEmitService = socketEmitService;
        this.cacheDataService = cacheDataService;
        this.imageManagerService = imageManagerService;
        this.imageRepository = imageRepository;
        this.customerRepository = customerRepository;
        this.appointmentRepository = appointmentRepository;
        this.ticketRepository = ticketRepository;
        this.ticketAttributeRepository = ticketAttributeRepository;
        this.ticketUserRepository = ticketUserRepository;
        this.ticketProductRepository = ticketProductRepository;
        this.ticketClinicUpdateTicketProcedureList = ticketClinicUpdateTicketProcedureList;
        this.ticketClinicUpdateTicketLaboratoryList = ticketClinicUpdateTicketLaboratoryList;
        this.ticketClinicUpdateTicketRadiologyList = ticketClinicUpdateTicketRadiologyList;
        this.ticketClinicUpdateTicketProductList = ticketClinicUpdateTicketProductList;
        this.ticketClinicUpdateItemsMoney = ticketClinicUpdateItemsMoney;
        this.ticketClinicReturnProduct = ticketClinicReturnProduct;
        this.ticketClinicRefundOverpaid = ticketClinicRefundOverpaid;
        this.ticketSendProduct = ticketSendProduct;
        this.ticketPrepayment = ticketPrepayment;
        this.ticketPaymentAndClose = ticketPaymentAndClose;
        this.ticketPayDebt = ticketPayDebt;
        this.ticketClinicReopen = ticketClinicReopen;
    }
    async create(options) {
        var _a;
        const { oid, body } = options;
        const { registeredAt, ticketStatus, ticketType, customerSourceId } = body.ticket;
        let customer;
        if (!body.customerId) {
            customer = await this.customerRepository.insertOneFullFieldAndReturnEntity(Object.assign(Object.assign({}, body.customer), { debt: 0, oid }));
        }
        else {
            customer = await this.customerRepository.findOneBy({
                oid,
                id: body.customerId,
            });
        }
        if (!customer)
            throw new exception_filter_1.BusinessException('error.SystemError');
        const countToday = await this.ticketRepository.countToday(oid);
        const ticket = await this.ticketRepository.insertOneAndReturnEntity({
            oid,
            customerId: customer.id,
            ticketType,
            ticketStatus,
            registeredAt,
            startedAt: ticketStatus === ticket_entity_1.TicketStatus.Executing ? registeredAt : null,
            customerSourceId,
            dailyIndex: countToday + 1,
            year: time_helper_1.DTimer.info(registeredAt, 7).year,
            month: time_helper_1.DTimer.info(registeredAt, 7).month + 1,
            date: time_helper_1.DTimer.info(registeredAt, 7).date,
        });
        ticket.customer = customer;
        if (body.fromAppointmentId) {
            await this.appointmentRepository.update({ oid, id: body.fromAppointmentId }, {
                toTicketId: ticket.id,
                appointmentStatus: appointment_entity_1.AppointmentStatus.Completed,
            });
        }
        if ((_a = body.ticketAttributeList) === null || _a === void 0 ? void 0 : _a.length) {
            const ticketAttributeInsertList = body.ticketAttributeList.map((i) => {
                const dto = Object.assign(Object.assign({}, i), { oid, ticketId: ticket.id });
                return dto;
            });
            ticket.ticketAttributeList =
                await this.ticketAttributeRepository.insertManyAndReturnEntity(ticketAttributeInsertList);
        }
        this.socketEmitService.ticketClinicCreate(oid, { ticket });
        return { data: { ticket } };
    }
    async startCheckup(options) {
        const { oid, ticketId } = options;
        const [ticketBasic] = await this.ticketRepository.updateAndReturnEntity({
            oid,
            id: ticketId,
            ticketStatus: { IN: [ticket_entity_1.TicketStatus.Schedule, ticket_entity_1.TicketStatus.Draft, ticket_entity_1.TicketStatus.Approved] },
        }, {
            ticketStatus: ticket_entity_1.TicketStatus.Executing,
            startedAt: Date.now(),
        });
        if (!ticketBasic)
            throw new exception_filter_1.BusinessException('error.Database.UpdateFailed');
        this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic });
        return { data: { ticketBasic } };
    }
    async updateDiagnosis(options) {
        const { oid, ticketId, body, files } = options;
        const { customerChange, imagesChange, ticketAttributeChangeList, ticketAttributeKeyList } = body;
        if (imagesChange) {
            let ticket = await this.ticketRepository.findOneBy({ oid, id: ticketId });
            const imageIdsUpdate = await this.imageManagerService.changeImageList({
                oid,
                customerId: ticket.customerId,
                files,
                filesPosition: imagesChange.filesPosition,
                imageIdsKeep: imagesChange.imageIdsKeep,
                imageIdsOld: JSON.parse(ticket.imageIds || '[]'),
            });
            if (ticket.imageIds !== JSON.stringify(imageIdsUpdate)) {
                const ticketUpdateList = await this.ticketRepository.updateAndReturnEntity({ oid, id: ticketId }, { imageIds: JSON.stringify(imageIdsUpdate) });
                ticket = ticketUpdateList[0];
                ticket.imageList = [];
                const imageIds = JSON.parse(ticket.imageIds);
                const imageList = await this.imageRepository.findManyByIds(imageIds);
                const imageMap = (0, object_helper_1.arrayToKeyValue)(imageList, 'id');
                imageIds.forEach((i) => {
                    ticket.imageList.push(imageMap[i]);
                });
                this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic: ticket });
            }
        }
        if (ticketAttributeChangeList) {
            await this.ticketAttributeRepository.delete({
                oid,
                ticketId,
                key: { IN: ticketAttributeKeyList },
            });
            const ticketAttributeInsertList = ticketAttributeChangeList.map((i) => {
                const dto = Object.assign(Object.assign({}, i), { oid,
                    ticketId });
                return dto;
            });
            await this.ticketAttributeRepository.insertMany(ticketAttributeInsertList);
            const ticketAttributeList = await this.ticketAttributeRepository.findManyBy({
                oid,
                ticketId,
            });
            this.socketEmitService.ticketClinicUpdateTicketAttributeList(oid, {
                ticketId,
                ticketAttributeList,
            });
        }
        if (customerChange) {
            const customerUpdateList = await this.customerRepository.updateAndReturnEntity({ oid, id: customerChange.customerId }, { healthHistory: customerChange.healthHistory });
            const customer = customerUpdateList[0];
            this.socketEmitService.customerUpsert(oid, { customer });
        }
        return { data: true };
    }
    async updateTicketProcedureList(options) {
        const { oid, ticketId, body } = options;
        const result = await this.ticketClinicUpdateTicketProcedureList.updateTicketProcedureList({
            oid,
            ticketId,
            ticketProcedureListDto: body.ticketProcedureList,
        });
        const { ticketBasic, ticketProcedureList } = result;
        this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic });
        this.socketEmitService.ticketClinicUpdateTicketProcedureList(oid, {
            ticketId,
            ticketProcedureList,
        });
        return { data: true };
    }
    async updateTicketProductConsumable(options) {
        const { oid, ticketId, body } = options;
        const result = await this.ticketClinicUpdateTicketProductList.updateTicketProductList({
            oid,
            ticketId,
            ticketProductListDto: body.ticketProductConsumableList.map((i) => {
                return Object.assign(Object.assign({}, i), { quantityPrescription: 0, hintUsage: '' });
            }),
            type: ticket_product_entity_1.TicketProductType.Consumable,
        });
        const { ticketBasic, ticketProductList } = result;
        this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic });
        this.socketEmitService.ticketClinicUpdateTicketProductConsumableList(oid, {
            ticketId,
            ticketProductConsumableList: ticketProductList.filter((i) => {
                return i.type === ticket_product_entity_1.TicketProductType.Consumable;
            }),
        });
        return { data: true };
    }
    async updateTicketProductPrescription(options) {
        const { oid, ticketId, body } = options;
        const { ticketAttributeChangeList, ticketAttributeKeyList } = body;
        let ticketBasic;
        if (body.ticketProductPrescriptionList != null) {
            const result = await this.ticketClinicUpdateTicketProductList.updateTicketProductList({
                oid,
                ticketId,
                ticketProductListDto: body.ticketProductPrescriptionList,
                type: ticket_product_entity_1.TicketProductType.Prescription,
            });
            const { ticketProductList } = result;
            ticketBasic = result.ticketBasic;
            this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic });
            this.socketEmitService.ticketClinicUpdateTicketProductPrescriptionList(oid, {
                ticketId,
                ticketProductPrescriptionList: ticketProductList.filter((i) => {
                    return i.type === ticket_product_entity_1.TicketProductType.Prescription;
                }),
            });
        }
        if (ticketAttributeChangeList) {
            await this.ticketAttributeRepository.delete({
                oid,
                ticketId,
                key: { IN: ticketAttributeKeyList },
            });
            const ticketAttributeInsertList = ticketAttributeChangeList.map((i) => {
                const dto = Object.assign(Object.assign({}, i), { oid,
                    ticketId });
                return dto;
            });
            await this.ticketAttributeRepository.insertMany(ticketAttributeInsertList);
            const ticketAttributeList = await this.ticketAttributeRepository.findManyBy({
                oid,
                ticketId,
            });
            this.socketEmitService.ticketClinicUpdateTicketAttributeList(oid, {
                ticketId,
                ticketAttributeList,
            });
        }
        return { data: true };
    }
    async updateTicketLaboratoryList(options) {
        const { ticketId, oid, body } = options;
        const result = await this.ticketClinicUpdateTicketLaboratoryList.updateTicketLaboratoryList({
            oid,
            ticketId,
            ticketLaboratoryListInsert: body.ticketLaboratoryList.map((i) => {
                const data = Object.assign(Object.assign({}, i), { oid,
                    ticketId, customerId: body.customerId, attention: '', result: '', startedAt: null, status: ticket_laboratory_entity_1.TicketLaboratoryStatus.Pending });
                return data;
            }),
        });
        const { ticketBasic, ticketLaboratoryList } = result;
        this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic });
        this.socketEmitService.ticketClinicUpdateTicketLaboratoryList(oid, {
            ticketId,
            ticketLaboratoryList,
        });
        return { data: true };
    }
    async updateTicketRadiologyList(options) {
        const { ticketId, oid, body } = options;
        const result = await this.ticketClinicUpdateTicketRadiologyList.updateTicketRadiologyList({
            oid,
            ticketId,
            ticketRadiologyListInsert: body.ticketRadiologyList.map((i) => {
                const data = Object.assign(Object.assign({}, i), { oid,
                    ticketId, customerId: body.customerId, imageIds: JSON.stringify([]), description: '', result: '', startedAt: null, status: ticket_radiology_entity_1.TicketRadiologyStatus.Pending });
                return data;
            }),
        });
        const { ticketBasic, ticketRadiologyList } = result;
        this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic });
        this.socketEmitService.ticketClinicUpdateTicketRadiologyList(oid, {
            ticketId,
            ticketRadiologyList,
        });
        return { data: true };
    }
    async updateItemsMoney(options) {
        const { oid, ticketId, body } = options;
        const result = await this.ticketClinicUpdateItemsMoney.updateItemsMoney({
            oid,
            ticketId,
            itemsActualMoney: body.itemsActualMoney,
            discountMoney: body.discountMoney,
            discountPercent: body.discountPercent,
            discountType: body.discountType,
            ticketProductUpdateList: body.ticketProductUpdateList,
            ticketProcedureUpdateList: body.ticketProcedureUpdateList,
            ticketLaboratoryUpdateList: body.ticketLaboratoryUpdateList,
            ticketRadiologyUpdateList: body.ticketRadiologyUpdateList,
        });
        const { ticketBasic, ticketProductList, ticketProcedureList, ticketLaboratoryList, ticketRadiologyList, } = result;
        this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic });
        this.socketEmitService.ticketClinicUpdateTicketProductConsumableList(oid, {
            ticketId,
            ticketProductConsumableList: ticketProductList.filter((i) => {
                return i.type === ticket_product_entity_1.TicketProductType.Consumable;
            }),
        });
        this.socketEmitService.ticketClinicUpdateTicketProductPrescriptionList(oid, {
            ticketId,
            ticketProductPrescriptionList: ticketProductList.filter((i) => {
                return i.type === ticket_product_entity_1.TicketProductType.Prescription;
            }),
        });
        this.socketEmitService.ticketClinicUpdateTicketProcedureList(oid, {
            ticketId,
            ticketProcedureList,
        });
        this.socketEmitService.ticketClinicUpdateTicketLaboratoryList(oid, {
            ticketId,
            ticketLaboratoryList,
        });
        this.socketEmitService.ticketClinicUpdateTicketRadiologyList(oid, {
            ticketId,
            ticketRadiologyList,
        });
        return { data: true };
    }
    async sendProduct(params) {
        const { oid, ticketId } = params;
        const time = Date.now();
        try {
            const allowNegativeQuantity = await this.cacheDataService.getSettingAllowNegativeQuantity(oid);
            const { productList, batchList, ticketBasic } = await this.ticketSendProduct.sendProduct({
                oid,
                ticketId,
                time,
                allowNegativeQuantity,
            });
            this.socketEmitService.batchListUpdate(oid, { batchList });
            this.socketEmitService.productListUpdate(oid, { productList });
            this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic });
            const ticketProductList = await this.ticketProductRepository.findMany({
                relation: { product: true, batch: true },
                condition: { oid, ticketId },
                sort: { id: 'ASC' },
            });
            this.socketEmitService.ticketClinicUpdateTicketProductConsumableList(oid, {
                ticketId,
                ticketProductConsumableList: ticketProductList.filter((i) => {
                    return i.type === ticket_product_entity_1.TicketProductType.Consumable;
                }),
            });
            this.socketEmitService.ticketClinicUpdateTicketProductPrescriptionList(oid, {
                ticketId,
                ticketProductPrescriptionList: ticketProductList.filter((i) => {
                    return i.type === ticket_product_entity_1.TicketProductType.Prescription;
                }),
            });
            return { data: { ticketBasic } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async returnProduct(params) {
        const { oid, ticketId, body } = params;
        try {
            const { ticketBasic, productList, batchList, ticketProductList } = await this.ticketClinicReturnProduct.returnProductList({
                oid,
                ticketId,
                time: Date.now(),
                returnList: body.returnList,
            });
            this.socketEmitService.batchListUpdate(oid, { batchList });
            this.socketEmitService.productListUpdate(oid, { productList });
            this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic });
            this.socketEmitService.ticketClinicUpdateTicketProductConsumableList(oid, {
                ticketId,
                ticketProductConsumableList: ticketProductList.filter((i) => {
                    return i.type === ticket_product_entity_1.TicketProductType.Consumable;
                }),
            });
            this.socketEmitService.ticketClinicUpdateTicketProductPrescriptionList(oid, {
                ticketId,
                ticketProductPrescriptionList: ticketProductList.filter((i) => {
                    return i.type === ticket_product_entity_1.TicketProductType.Prescription;
                }),
            });
            return { data: { ticketBasic } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async prepayment(params) {
        const { oid, ticketId, body } = params;
        try {
            const { ticketBasic } = await this.ticketPrepayment.prepayment({
                oid,
                ticketId,
                time: Date.now(),
                money: body.money,
            });
            this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic });
            return { data: true };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async refundOverpaid(params) {
        const { oid, ticketId, body } = params;
        try {
            const { ticketBasic } = await this.ticketClinicRefundOverpaid.refundOverpaid({
                oid,
                ticketId,
                time: Date.now(),
                money: body.money,
            });
            this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic });
            return { data: { ticketBasic } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async payDebt(params) {
        const { oid, ticketId, body } = params;
        try {
            const { ticketBasic, customer } = await this.ticketPayDebt.payDebt({
                oid,
                ticketId,
                time: Date.now(),
                money: body.money,
            });
            this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic });
            if (customer) {
                this.socketEmitService.customerUpsert(oid, { customer });
            }
            return { data: { ticketBasic } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async close(params) {
        const { oid, ticketId } = params;
        try {
            const { ticketBasic, customer } = await this.ticketPaymentAndClose.paymentAndClose({
                oid,
                ticketId,
                time: Date.now(),
                money: 0,
            });
            this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic });
            if (customer) {
                this.socketEmitService.customerUpsert(oid, { customer });
            }
            return { data: { ticketBasic } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async reopen(params) {
        const { oid, ticketId } = params;
        try {
            const { ticketBasic, customer } = await this.ticketClinicReopen.reopen({
                oid,
                ticketId,
                time: Date.now(),
                description: '',
            });
            this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic });
            if (customer) {
                this.socketEmitService.customerUpsert(oid, { customer });
            }
            return { data: { ticketBasic } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async destroy(params) {
        const { oid, ticketId } = params;
        const ticket = await this.ticketRepository.findOne({
            condition: { id: ticketId, oid },
            relation: { ticketProductList: {}, ticketRadiologyList: {} },
        });
        if (ticket.ticketProductList.find((i) => i.deliveryStatus === variable_1.DeliveryStatus.Delivered)) {
            throw new exception_filter_1.BusinessException('error.ValidateFailed', common_1.HttpStatus.BAD_REQUEST);
        }
        if (ticket.ticketRadiologyList.find((i) => i.status === ticket_radiology_entity_1.TicketRadiologyStatus.Completed)) {
            throw new exception_filter_1.BusinessException('error.ValidateFailed', common_1.HttpStatus.BAD_REQUEST);
        }
        await this.imageManagerService.changeImageList({
            oid,
            customerId: ticket.customerId,
            files: [],
            filesPosition: [],
            imageIdsKeep: [],
            imageIdsOld: JSON.parse(ticket.imageIds || '[]'),
        });
        await this.ticketRepository.update({ oid, id: ticketId }, { ticketStatus: ticket_entity_1.TicketStatus.Cancelled });
        await this.ticketRepository.destroy({ oid, ticketId });
        this.socketEmitService.ticketClinicDestroy(oid, { ticketId });
        return { data: { ticketId } };
    }
};
exports.ApiTicketClinicService = ApiTicketClinicService;
exports.ApiTicketClinicService = ApiTicketClinicService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _a : Object, typeof (_b = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _b : Object, typeof (_c = typeof image_manager_service_1.ImageManagerService !== "undefined" && image_manager_service_1.ImageManagerService) === "function" ? _c : Object, typeof (_d = typeof image_repository_1.ImageRepository !== "undefined" && image_repository_1.ImageRepository) === "function" ? _d : Object, typeof (_e = typeof customer_repository_1.CustomerRepository !== "undefined" && customer_repository_1.CustomerRepository) === "function" ? _e : Object, typeof (_f = typeof appointment_repository_1.AppointmentRepository !== "undefined" && appointment_repository_1.AppointmentRepository) === "function" ? _f : Object, typeof (_g = typeof ticket_repository_1.TicketRepository !== "undefined" && ticket_repository_1.TicketRepository) === "function" ? _g : Object, typeof (_h = typeof ticket_attribute_repository_1.TicketAttributeRepository !== "undefined" && ticket_attribute_repository_1.TicketAttributeRepository) === "function" ? _h : Object, typeof (_j = typeof ticket_user_repository_1.TicketUserRepository !== "undefined" && ticket_user_repository_1.TicketUserRepository) === "function" ? _j : Object, typeof (_k = typeof ticket_product_repository_1.TicketProductRepository !== "undefined" && ticket_product_repository_1.TicketProductRepository) === "function" ? _k : Object, typeof (_l = typeof ticket_clinic_update_ticket_procedure_list_1.TicketClinicUpdateTicketProcedureList !== "undefined" && ticket_clinic_update_ticket_procedure_list_1.TicketClinicUpdateTicketProcedureList) === "function" ? _l : Object, typeof (_m = typeof ticket_clinic_update_ticket_laboratory_list_1.TicketClinicUpdateTicketLaboratoryList !== "undefined" && ticket_clinic_update_ticket_laboratory_list_1.TicketClinicUpdateTicketLaboratoryList) === "function" ? _m : Object, typeof (_o = typeof ticket_clinic_update_ticket_radiology_list_1.TicketClinicUpdateTicketRadiologyList !== "undefined" && ticket_clinic_update_ticket_radiology_list_1.TicketClinicUpdateTicketRadiologyList) === "function" ? _o : Object, typeof (_p = typeof ticket_clinic_update_ticket_product_list_1.TicketClinicUpdateTicketProductList !== "undefined" && ticket_clinic_update_ticket_product_list_1.TicketClinicUpdateTicketProductList) === "function" ? _p : Object, typeof (_q = typeof ticket_clinic_update_items_money_1.TicketClinicUpdateItemsMoney !== "undefined" && ticket_clinic_update_items_money_1.TicketClinicUpdateItemsMoney) === "function" ? _q : Object, typeof (_r = typeof ticket_clinic_return_product_1.TicketClinicReturnProduct !== "undefined" && ticket_clinic_return_product_1.TicketClinicReturnProduct) === "function" ? _r : Object, typeof (_s = typeof ticket_clinic_refund_overpaid_1.TicketClinicRefundOverpaid !== "undefined" && ticket_clinic_refund_overpaid_1.TicketClinicRefundOverpaid) === "function" ? _s : Object, typeof (_t = typeof ticket_send_product_1.TicketSendProduct !== "undefined" && ticket_send_product_1.TicketSendProduct) === "function" ? _t : Object, typeof (_u = typeof ticket_prepayment_1.TicketPrepayment !== "undefined" && ticket_prepayment_1.TicketPrepayment) === "function" ? _u : Object, typeof (_v = typeof ticket_payment_and_close_1.TicketPaymentAndClose !== "undefined" && ticket_payment_and_close_1.TicketPaymentAndClose) === "function" ? _v : Object, typeof (_w = typeof ticket_pay_debt_1.TicketPayDebt !== "undefined" && ticket_pay_debt_1.TicketPayDebt) === "function" ? _w : Object, typeof (_x = typeof ticket_clinic_reopen_1.TicketClinicReopen !== "undefined" && ticket_clinic_reopen_1.TicketClinicReopen) === "function" ? _x : Object])
], ApiTicketClinicService);


/***/ }),
/* 435 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(436), exports);
__exportStar(__webpack_require__(437), exports);
__exportStar(__webpack_require__(438), exports);
__exportStar(__webpack_require__(439), exports);
__exportStar(__webpack_require__(440), exports);
__exportStar(__webpack_require__(441), exports);
__exportStar(__webpack_require__(442), exports);
__exportStar(__webpack_require__(443), exports);
__exportStar(__webpack_require__(444), exports);


/***/ }),
/* 436 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
const ticket_entity_1 = __webpack_require__(50);
const request_1 = __webpack_require__(228);
class TicketAttributeBody {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Diagnosis' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.MaxLength)(100),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], TicketAttributeBody.prototype, "key", void 0);
__decorate([
    (0, swagger_1.ApiProperty)(),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    __metadata("design:type", String)
], TicketAttributeBody.prototype, "value", void 0);
class TicketBody {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 45 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketBody.prototype, "customerSourceId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: ticket_entity_1.TicketType.Clinic }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(ticket_entity_1.TicketType),
    __metadata("design:type", typeof (_a = typeof ticket_entity_1.TicketType !== "undefined" && ticket_entity_1.TicketType) === "function" ? _a : Object)
], TicketBody.prototype, "ticketType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: ticket_entity_1.TicketType.Clinic }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsIn)([ticket_entity_1.TicketStatus.Draft, ticket_entity_1.TicketStatus.Executing]),
    __metadata("design:type", typeof (_b = typeof ticket_entity_1.TicketStatus !== "undefined" && ticket_entity_1.TicketStatus) === "function" ? _b : Object)
], TicketBody.prototype, "ticketStatus", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1678890707005 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketBody.prototype, "registeredAt", void 0);
class TicketClinicCreateBody {
}
exports.TicketClinicCreateBody = TicketClinicCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketAttributeBody, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketAttributeBody),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketClinicCreateBody.prototype, "ticketAttributeList", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ type: request_1.CustomerCreateBody }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => request_1.CustomerCreateBody),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof request_1.CustomerCreateBody !== "undefined" && request_1.CustomerCreateBody) === "function" ? _c : Object)
], TicketClinicCreateBody.prototype, "customer", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketBody }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketBody),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", TicketBody)
], TicketClinicCreateBody.prototype, "ticket", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 45 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketClinicCreateBody.prototype, "customerId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 45 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketClinicCreateBody.prototype, "fromAppointmentId", void 0);


/***/ }),
/* 437 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicPaymentBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class TicketClinicPaymentBody {
}
exports.TicketClinicPaymentBody = TicketClinicPaymentBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1200000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketClinicPaymentBody.prototype, "money", void 0);


/***/ }),
/* 438 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicReturnProductListBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
class TicketProductReturn {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductReturn.prototype, "ticketProductId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 3 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], TicketProductReturn.prototype, "quantityReturn", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 300000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductReturn.prototype, "actualPrice", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 600000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductReturn.prototype, "costAmountReturn", void 0);
class TicketClinicReturnProductListBody {
}
exports.TicketClinicReturnProductListBody = TicketClinicReturnProductListBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketProductReturn, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketProductReturn),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ArrayMinSize)(1),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketClinicReturnProductListBody.prototype, "returnList", void 0);


/***/ }),
/* 439 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicUpdateConsumableBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const typescript_helper_1 = __webpack_require__(174);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
class TicketProductConsumableBody {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], TicketProductConsumableBody.prototype, "productId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductConsumableBody.prototype, "batchId", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 52 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductConsumableBody.prototype, "unitRate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 4 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketProductConsumableBody.prototype, "quantity", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 4 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductConsumableBody.prototype, "costAmount", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductConsumableBody.prototype, "expectedPrice", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductConsumableBody.prototype, "discountMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.Max)(9999.99),
    (0, class_validator_1.Min)(-9999.99),
    __metadata("design:type", Number)
], TicketProductConsumableBody.prototype, "discountPercent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: (0, typescript_helper_1.valuesEnum)(variable_1.DiscountType), example: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.DiscountType),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], TicketProductConsumableBody.prototype, "discountType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductConsumableBody.prototype, "actualPrice", void 0);
class TicketClinicUpdateConsumableBody {
}
exports.TicketClinicUpdateConsumableBody = TicketClinicUpdateConsumableBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketProductConsumableBody, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketProductConsumableBody),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketClinicUpdateConsumableBody.prototype, "ticketProductConsumableList", void 0);


/***/ }),
/* 440 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicUpdateItemsMoneyBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const typescript_helper_1 = __webpack_require__(174);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
class TicketProductUpdateBody {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductUpdateBody.prototype, "ticketProductId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductUpdateBody.prototype, "productId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 4 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketProductUpdateBody.prototype, "quantity", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 4 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductUpdateBody.prototype, "costAmount", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductUpdateBody.prototype, "discountMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.Max)(9999.99),
    (0, class_validator_1.Min)(-9999.99),
    __metadata("design:type", Number)
], TicketProductUpdateBody.prototype, "discountPercent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: (0, typescript_helper_1.valuesEnum)(variable_1.DiscountType), example: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.DiscountType),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], TicketProductUpdateBody.prototype, "discountType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductUpdateBody.prototype, "actualPrice", void 0);
class TicketProcedureUpdateBody {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProcedureUpdateBody.prototype, "ticketProcedureId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProcedureUpdateBody.prototype, "procedureId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProcedureUpdateBody.prototype, "discountMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.Max)(9999.99),
    (0, class_validator_1.Min)(-9999.99),
    __metadata("design:type", Number)
], TicketProcedureUpdateBody.prototype, "discountPercent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: (0, typescript_helper_1.valuesEnum)(variable_1.DiscountType), example: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.DiscountType),
    __metadata("design:type", typeof (_b = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _b : Object)
], TicketProcedureUpdateBody.prototype, "discountType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProcedureUpdateBody.prototype, "actualPrice", void 0);
class TicketLaboratoryUpdateBody {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketLaboratoryUpdateBody.prototype, "ticketLaboratoryId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketLaboratoryUpdateBody.prototype, "laboratoryId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketLaboratoryUpdateBody.prototype, "discountMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.Max)(9999.99),
    (0, class_validator_1.Min)(-9999.99),
    __metadata("design:type", Number)
], TicketLaboratoryUpdateBody.prototype, "discountPercent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: (0, typescript_helper_1.valuesEnum)(variable_1.DiscountType), example: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.DiscountType),
    __metadata("design:type", typeof (_c = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _c : Object)
], TicketLaboratoryUpdateBody.prototype, "discountType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketLaboratoryUpdateBody.prototype, "actualPrice", void 0);
class TicketRadiologyUpdateBody {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketRadiologyUpdateBody.prototype, "ticketRadiologyId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketRadiologyUpdateBody.prototype, "radiologyId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketRadiologyUpdateBody.prototype, "discountMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.Max)(9999.99),
    (0, class_validator_1.Min)(-9999.99),
    __metadata("design:type", Number)
], TicketRadiologyUpdateBody.prototype, "discountPercent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: (0, typescript_helper_1.valuesEnum)(variable_1.DiscountType), example: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.DiscountType),
    __metadata("design:type", typeof (_d = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _d : Object)
], TicketRadiologyUpdateBody.prototype, "discountType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketRadiologyUpdateBody.prototype, "actualPrice", void 0);
class TicketClinicUpdateItemsMoneyBody {
}
exports.TicketClinicUpdateItemsMoneyBody = TicketClinicUpdateItemsMoneyBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketClinicUpdateItemsMoneyBody.prototype, "itemsActualMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketClinicUpdateItemsMoneyBody.prototype, "discountMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketClinicUpdateItemsMoneyBody.prototype, "discountPercent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: variable_1.DiscountType, example: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.DiscountType),
    __metadata("design:type", typeof (_e = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _e : Object)
], TicketClinicUpdateItemsMoneyBody.prototype, "discountType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketProductUpdateBody, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketProductUpdateBody),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketClinicUpdateItemsMoneyBody.prototype, "ticketProductUpdateList", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketProcedureUpdateBody, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketProcedureUpdateBody),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketClinicUpdateItemsMoneyBody.prototype, "ticketProcedureUpdateList", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketLaboratoryUpdateBody, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketLaboratoryUpdateBody),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketClinicUpdateItemsMoneyBody.prototype, "ticketLaboratoryUpdateList", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketRadiologyUpdateBody, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketRadiologyUpdateBody),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketClinicUpdateItemsMoneyBody.prototype, "ticketRadiologyUpdateList", void 0);


/***/ }),
/* 441 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicUpdateTicketLaboratoryListBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const typescript_helper_1 = __webpack_require__(174);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
class TicketLaboratoryBody {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketLaboratoryBody.prototype, "laboratoryId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketLaboratoryBody.prototype, "expectedPrice", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketLaboratoryBody.prototype, "discountMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.Max)(9999.99),
    (0, class_validator_1.Min)(-9999.99),
    __metadata("design:type", Number)
], TicketLaboratoryBody.prototype, "discountPercent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: (0, typescript_helper_1.valuesEnum)(variable_1.DiscountType), example: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.DiscountType),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], TicketLaboratoryBody.prototype, "discountType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketLaboratoryBody.prototype, "actualPrice", void 0);
class TicketClinicUpdateTicketLaboratoryListBody {
}
exports.TicketClinicUpdateTicketLaboratoryListBody = TicketClinicUpdateTicketLaboratoryListBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketClinicUpdateTicketLaboratoryListBody.prototype, "customerId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketLaboratoryBody, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketLaboratoryBody),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketClinicUpdateTicketLaboratoryListBody.prototype, "ticketLaboratoryList", void 0);


/***/ }),
/* 442 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicUpdatePrescriptionBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const typescript_helper_1 = __webpack_require__(174);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
class TicketProductPrescriptionBody {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], TicketProductPrescriptionBody.prototype, "productId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductPrescriptionBody.prototype, "batchId", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 52 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductPrescriptionBody.prototype, "unitRate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 4 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketProductPrescriptionBody.prototype, "quantityPrescription", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 4 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketProductPrescriptionBody.prototype, "quantity", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 4 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductPrescriptionBody.prototype, "costAmount", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductPrescriptionBody.prototype, "expectedPrice", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductPrescriptionBody.prototype, "discountMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.Max)(9999.99),
    (0, class_validator_1.Min)(-9999.99),
    __metadata("design:type", Number)
], TicketProductPrescriptionBody.prototype, "discountPercent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: (0, typescript_helper_1.valuesEnum)(variable_1.DiscountType), example: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.DiscountType),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], TicketProductPrescriptionBody.prototype, "discountType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductPrescriptionBody.prototype, "actualPrice", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Uống 2 lần/ngày sáng 1 viên, chiều 1 viên' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], TicketProductPrescriptionBody.prototype, "hintUsage", void 0);
class TicketAttributeBody {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'advice' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.MaxLength)(100),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], TicketAttributeBody.prototype, "key", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Uống 2 lần/ngày sáng 1 viên, chiều 1 viên' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Allow)(),
    __metadata("design:type", String)
], TicketAttributeBody.prototype, "value", void 0);
class TicketClinicUpdatePrescriptionBody {
}
exports.TicketClinicUpdatePrescriptionBody = TicketClinicUpdatePrescriptionBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketProductPrescriptionBody, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketProductPrescriptionBody),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketClinicUpdatePrescriptionBody.prototype, "ticketProductPrescriptionList", void 0);
__decorate([
    (0, swagger_1.ApiProperty)(),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ArrayMinSize)(1),
    __metadata("design:type", Array)
], TicketClinicUpdatePrescriptionBody.prototype, "ticketAttributeKeyList", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketAttributeBody }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketAttributeBody),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketClinicUpdatePrescriptionBody.prototype, "ticketAttributeChangeList", void 0);


/***/ }),
/* 443 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicUpdateTicketProcedureListBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const typescript_helper_1 = __webpack_require__(174);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
class TicketProcedureBody {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketProcedureBody.prototype, "procedureId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 4 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketProcedureBody.prototype, "quantity", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketProcedureBody.prototype, "expectedPrice", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketProcedureBody.prototype, "discountMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.Max)(9999.99),
    (0, class_validator_1.Min)(-9999.99),
    __metadata("design:type", Number)
], TicketProcedureBody.prototype, "discountPercent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: (0, typescript_helper_1.valuesEnum)(variable_1.DiscountType), example: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.DiscountType),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], TicketProcedureBody.prototype, "discountType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketProcedureBody.prototype, "actualPrice", void 0);
class TicketClinicUpdateTicketProcedureListBody {
}
exports.TicketClinicUpdateTicketProcedureListBody = TicketClinicUpdateTicketProcedureListBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketClinicUpdateTicketProcedureListBody.prototype, "customerId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketProcedureBody, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketProcedureBody),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketClinicUpdateTicketProcedureListBody.prototype, "ticketProcedureList", void 0);


/***/ }),
/* 444 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicUpdateTicketRadiologyListBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const typescript_helper_1 = __webpack_require__(174);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
class TicketRadiologyBody {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketRadiologyBody.prototype, "radiologyId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketRadiologyBody.prototype, "expectedPrice", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketRadiologyBody.prototype, "discountMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.Max)(9999.99),
    (0, class_validator_1.Min)(-9999.99),
    __metadata("design:type", Number)
], TicketRadiologyBody.prototype, "discountPercent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: (0, typescript_helper_1.valuesEnum)(variable_1.DiscountType), example: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.DiscountType),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], TicketRadiologyBody.prototype, "discountType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketRadiologyBody.prototype, "actualPrice", void 0);
class TicketClinicUpdateTicketRadiologyListBody {
}
exports.TicketClinicUpdateTicketRadiologyListBody = TicketClinicUpdateTicketRadiologyListBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketClinicUpdateTicketRadiologyListBody.prototype, "customerId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketRadiologyBody, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketRadiologyBody),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketClinicUpdateTicketRadiologyListBody.prototype, "ticketRadiologyList", void 0);


/***/ }),
/* 445 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketClinicUpdateDiagnosisBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const file_1 = __webpack_require__(305);
class TicketAttributeBody {
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.MaxLength)(100),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], TicketAttributeBody.prototype, "key", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Allow)(),
    __metadata("design:type", String)
], TicketAttributeBody.prototype, "value", void 0);
class ImagesChangeBody {
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.IsNumber)({}, { each: true }),
    __metadata("design:type", Array)
], ImagesChangeBody.prototype, "imageIdsKeep", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.IsNumber)({}, { each: true }),
    __metadata("design:type", Array)
], ImagesChangeBody.prototype, "filesPosition", void 0);
class CustomerChangeBody {
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], CustomerChangeBody.prototype, "customerId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomerChangeBody.prototype, "healthHistory", void 0);
class TicketClinicUpdateDiagnosisBody extends file_1.MultipleFileUpload {
}
exports.TicketClinicUpdateDiagnosisBody = TicketClinicUpdateDiagnosisBody;
__decorate([
    (0, swagger_1.ApiProperty)({
        type: 'string',
        example: JSON.stringify([{ key: 'REASON', value: 'Đau bụng' }]),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (value === undefined)
            return undefined;
        try {
            const err = [];
            const result = JSON.parse(value).map((i) => {
                const instance = Object.assign(new TicketAttributeBody(), i);
                const validate = (0, class_validator_1.validateSync)(instance, {
                    whitelist: true,
                    forbidNonWhitelisted: true,
                    skipMissingProperties: true,
                });
                if (validate.length)
                    err.push(...validate);
                return instance;
            });
            if (err.length)
                return JSON.stringify(err);
            else
                return result;
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsArray)({
        message: ({ value }) => `Validate ticketAttributeList failed. Value = ${JSON.stringify(value)}. Example: `
            + JSON.stringify([{ key: 'REASON', value: 'Đau bụng' }]),
    }),
    __metadata("design:type", Array)
], TicketClinicUpdateDiagnosisBody.prototype, "ticketAttributeChangeList", void 0);
__decorate([
    (0, swagger_1.ApiProperty)(),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            const err = [];
            const result = JSON.parse(value);
            result.forEach((i) => {
                if (!i || typeof i !== 'string')
                    err.push(i);
            });
            if (err.length)
                return JSON.stringify(err);
            else
                return result;
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ArrayMinSize)(1),
    __metadata("design:type", Array)
], TicketClinicUpdateDiagnosisBody.prototype, "ticketAttributeKeyList", void 0);
__decorate([
    (0, swagger_1.ApiProperty)(),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (value === undefined)
            return undefined;
        try {
            const instance = Object.assign(new ImagesChangeBody(), JSON.parse(value));
            const validate = (0, class_validator_1.validateSync)(instance, {
                whitelist: true,
                forbidNonWhitelisted: true,
                skipMissingProperties: true,
            });
            if (validate.length)
                return JSON.stringify(validate);
            return instance;
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({
        message: ({ value }) => `Validate imagesChange failed. Value = ${JSON.stringify(value)}. Example: `
            + JSON.stringify({ imageIdsKeep: [102, 103, 104], filesPosition: [2, 3] }),
    }),
    __metadata("design:type", ImagesChangeBody)
], TicketClinicUpdateDiagnosisBody.prototype, "imagesChange", void 0);
__decorate([
    (0, swagger_1.ApiProperty)(),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (value === undefined)
            return undefined;
        try {
            const instance = Object.assign(new CustomerChangeBody(), JSON.parse(value));
            const validate = (0, class_validator_1.validateSync)(instance, {
                whitelist: true,
                forbidNonWhitelisted: true,
                skipMissingProperties: true,
            });
            if (validate.length)
                return JSON.stringify(validate);
            return instance;
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({
        message: ({ value }) => `Validate customerChange failed. Value = ${JSON.stringify(value)}. Example: `
            + JSON.stringify({ healthHistory: 'Đau bụng' }),
    }),
    __metadata("design:type", CustomerChangeBody)
], TicketClinicUpdateDiagnosisBody.prototype, "customerChange", void 0);


/***/ }),
/* 446 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketLaboratoryModule = void 0;
const common_1 = __webpack_require__(3);
const api_ticket_laboratory_controller_1 = __webpack_require__(447);
const api_ticket_laboratory_service_1 = __webpack_require__(448);
let ApiTicketLaboratoryModule = class ApiTicketLaboratoryModule {
};
exports.ApiTicketLaboratoryModule = ApiTicketLaboratoryModule;
exports.ApiTicketLaboratoryModule = ApiTicketLaboratoryModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_ticket_laboratory_controller_1.ApiTicketLaboratoryController],
        providers: [api_ticket_laboratory_service_1.ApiTicketLaboratoryService],
    })
], ApiTicketLaboratoryModule);


/***/ }),
/* 447 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketLaboratoryController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const dto_1 = __webpack_require__(195);
const permission_guard_1 = __webpack_require__(87);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_ticket_laboratory_service_1 = __webpack_require__(448);
const request_1 = __webpack_require__(449);
let ApiTicketLaboratoryController = class ApiTicketLaboratoryController {
    constructor(apiTicketLaboratoryService) {
        this.apiTicketLaboratoryService = apiTicketLaboratoryService;
    }
    async pagination({ oid }, query) {
        return await this.apiTicketLaboratoryService.pagination(oid, query);
    }
    async detail({ oid }, { id }, query) {
        return await this.apiTicketLaboratoryService.getOne(oid, id, query);
    }
    async updateResult({ oid }, body) {
        return await this.apiTicketLaboratoryService.updateResult({
            oid,
            body,
        });
    }
    async cancelResult({ oid }, { id }) {
        return await this.apiTicketLaboratoryService.cancelResult(oid, id);
    }
};
exports.ApiTicketLaboratoryController = ApiTicketLaboratoryController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.TicketLaboratoryPaginationQuery !== "undefined" && request_1.TicketLaboratoryPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketLaboratoryController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _e : Object, typeof (_f = typeof request_1.TicketLaboratoryGetOneQuery !== "undefined" && request_1.TicketLaboratoryGetOneQuery) === "function" ? _f : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketLaboratoryController.prototype, "detail", null);
__decorate([
    (0, common_1.Post)('update-result'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_LABORATORY_RESULT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_g = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _g : Object, typeof (_h = typeof request_1.TicketLaboratoryUpdateResultBody !== "undefined" && request_1.TicketLaboratoryUpdateResultBody) === "function" ? _h : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketLaboratoryController.prototype, "updateResult", null);
__decorate([
    (0, common_1.Post)(':id/cancel-result'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_LABORATORY_RESULT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_j = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _j : Object, typeof (_k = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _k : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketLaboratoryController.prototype, "cancelResult", null);
exports.ApiTicketLaboratoryController = ApiTicketLaboratoryController = __decorate([
    (0, swagger_1.ApiTags)('TicketLaboratory'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('ticket-laboratory'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_ticket_laboratory_service_1.ApiTicketLaboratoryService !== "undefined" && api_ticket_laboratory_service_1.ApiTicketLaboratoryService) === "function" ? _a : Object])
], ApiTicketLaboratoryController);


/***/ }),
/* 448 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketLaboratoryService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const ticket_laboratory_entity_1 = __webpack_require__(54);
const laboratory_repository_1 = __webpack_require__(106);
const ticket_laboratory_repository_1 = __webpack_require__(128);
const ticket_repository_1 = __webpack_require__(138);
const user_repository_1 = __webpack_require__(84);
const socket_emit_service_1 = __webpack_require__(204);
let ApiTicketLaboratoryService = class ApiTicketLaboratoryService {
    constructor(socketEmitService, ticketLaboratoryRepository, laboratoryRepository, userRepository, ticketRepository) {
        this.socketEmitService = socketEmitService;
        this.ticketLaboratoryRepository = ticketLaboratoryRepository;
        this.laboratoryRepository = laboratoryRepository;
        this.userRepository = userRepository;
        this.ticketRepository = ticketRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, relation, sort } = query;
        const { total, data } = await this.ticketLaboratoryRepository.pagination({
            relation: {
                customer: relation === null || relation === void 0 ? void 0 : relation.customer,
                ticket: relation === null || relation === void 0 ? void 0 : relation.ticket,
                laboratoryList: relation === null || relation === void 0 ? void 0 : relation.laboratoryList,
            },
            page,
            limit,
            condition: {
                oid,
                customerId: filter === null || filter === void 0 ? void 0 : filter.customerId,
                laboratoryId: filter === null || filter === void 0 ? void 0 : filter.laboratoryId,
                ticketId: filter === null || filter === void 0 ? void 0 : filter.ticketId,
            },
            sort,
        });
        return {
            data,
            meta: { page, limit, total },
        };
    }
    async getOne(oid, id, query) {
        const { relation } = query;
        const ticketLaboratory = await this.ticketLaboratoryRepository.findOne({
            relation: {
                customer: relation === null || relation === void 0 ? void 0 : relation.customer,
                ticket: relation === null || relation === void 0 ? void 0 : relation.ticket,
                laboratoryList: relation === null || relation === void 0 ? void 0 : relation.laboratoryList,
            },
            condition: { oid, id },
        });
        if (!ticketLaboratory) {
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        }
        return { data: { ticketLaboratory } };
    }
    async updateResult(options) {
        const { oid, body } = options;
        if (body.ticketLaboratoryUpdateList.length) {
            await this.ticketLaboratoryRepository.updateResultList({
                oid,
                ticketId: body.ticketId,
                startedAt: body.startedAt,
                ticketLaboratoryDtoList: body.ticketLaboratoryUpdateList,
            });
        }
        if (body.ticketLaboratoryCreateList.length) {
            const ticketLaboratoryDtoList = body.ticketLaboratoryCreateList.map((i) => {
                const insert = Object.assign(Object.assign({}, i), { oid, ticketId: body.ticketId, customerId: body.customerId, status: ticket_laboratory_entity_1.TicketLaboratoryStatus.Completed, startedAt: body.startedAt });
                return insert;
            });
            await this.ticketLaboratoryRepository.insertManyFullField(ticketLaboratoryDtoList);
        }
        const ticketLaboratoryList = await this.ticketLaboratoryRepository.findMany({
            condition: {
                oid,
                ticketId: body.ticketId,
            },
            sort: { id: 'ASC' },
        });
        if (body.ticketLaboratoryCreateList.length) {
            const laboratoryMoney = ticketLaboratoryList.reduce((acc, cur) => acc + cur.actualPrice, 0);
            const [ticket] = await this.ticketRepository.changeLaboratoryMoney({
                oid,
                ticketId: body.ticketId,
                laboratoryMoney,
            });
            this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic: ticket });
        }
        this.socketEmitService.ticketClinicUpdateTicketLaboratoryList(oid, {
            ticketId: body.ticketId,
            ticketLaboratoryList,
        });
        return { data: { ticketId: body.ticketId } };
    }
    async cancelResult(oid, id) {
        const [ticketLaboratory] = await this.ticketLaboratoryRepository.updateAndReturnEntity({ oid, id }, {
            startedAt: null,
            status: ticket_laboratory_entity_1.TicketLaboratoryStatus.Pending,
            result: JSON.stringify({}),
            attention: JSON.stringify({}),
        });
        this.socketEmitService.ticketClinicUpdateTicketLaboratoryResult(oid, {
            ticketId: ticketLaboratory.ticketId,
            ticketLaboratory,
        });
        return { data: { ticketId: ticketLaboratory.ticketId } };
    }
};
exports.ApiTicketLaboratoryService = ApiTicketLaboratoryService;
exports.ApiTicketLaboratoryService = ApiTicketLaboratoryService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _a : Object, typeof (_b = typeof ticket_laboratory_repository_1.TicketLaboratoryRepository !== "undefined" && ticket_laboratory_repository_1.TicketLaboratoryRepository) === "function" ? _b : Object, typeof (_c = typeof laboratory_repository_1.LaboratoryRepository !== "undefined" && laboratory_repository_1.LaboratoryRepository) === "function" ? _c : Object, typeof (_d = typeof user_repository_1.UserRepository !== "undefined" && user_repository_1.UserRepository) === "function" ? _d : Object, typeof (_e = typeof ticket_repository_1.TicketRepository !== "undefined" && ticket_repository_1.TicketRepository) === "function" ? _e : Object])
], ApiTicketLaboratoryService);


/***/ }),
/* 449 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(450), exports);
__exportStar(__webpack_require__(451), exports);
__exportStar(__webpack_require__(452), exports);


/***/ }),
/* 450 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketLaboratoryGetOneQuery = exports.TicketLaboratoryGetManyQuery = exports.TicketLaboratoryPaginationQuery = exports.TicketLaboratoryGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const ticket_laboratory_options_request_1 = __webpack_require__(451);
class TicketLaboratoryGetQuery {
}
exports.TicketLaboratoryGetQuery = TicketLaboratoryGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(ticket_laboratory_options_request_1.TicketLaboratoryRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof ticket_laboratory_options_request_1.TicketLaboratoryRelationQuery !== "undefined" && ticket_laboratory_options_request_1.TicketLaboratoryRelationQuery) === "function" ? _a : Object)
], TicketLaboratoryGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            customerId: 1,
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(ticket_laboratory_options_request_1.TicketLaboratoryFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof ticket_laboratory_options_request_1.TicketLaboratoryFilterQuery !== "undefined" && ticket_laboratory_options_request_1.TicketLaboratoryFilterQuery) === "function" ? _b : Object)
], TicketLaboratoryGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            id: 'ASC',
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(ticket_laboratory_options_request_1.TicketLaboratorySortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof ticket_laboratory_options_request_1.TicketLaboratorySortQuery !== "undefined" && ticket_laboratory_options_request_1.TicketLaboratorySortQuery) === "function" ? _c : Object)
], TicketLaboratoryGetQuery.prototype, "sort", void 0);
class TicketLaboratoryPaginationQuery extends (0, swagger_1.IntersectionType)(TicketLaboratoryGetQuery, query_1.PaginationQuery) {
}
exports.TicketLaboratoryPaginationQuery = TicketLaboratoryPaginationQuery;
class TicketLaboratoryGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(TicketLaboratoryGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.TicketLaboratoryGetManyQuery = TicketLaboratoryGetManyQuery;
class TicketLaboratoryGetOneQuery extends (0, swagger_1.PickType)(TicketLaboratoryGetQuery, ['relation']) {
}
exports.TicketLaboratoryGetOneQuery = TicketLaboratoryGetOneQuery;


/***/ }),
/* 451 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketLaboratorySortQuery = exports.TicketLaboratoryFilterQuery = exports.TicketLaboratoryRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
class TicketLaboratoryRelationQuery {
}
exports.TicketLaboratoryRelationQuery = TicketLaboratoryRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Boolean)
], TicketLaboratoryRelationQuery.prototype, "laboratoryList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketLaboratoryRelationQuery.prototype, "customer", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketLaboratoryRelationQuery.prototype, "ticketUserList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketLaboratoryRelationQuery.prototype, "ticket", void 0);
class TicketLaboratoryFilterQuery {
}
exports.TicketLaboratoryFilterQuery = TicketLaboratoryFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketLaboratoryFilterQuery.prototype, "laboratoryId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketLaboratoryFilterQuery.prototype, "customerId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketLaboratoryFilterQuery.prototype, "ticketId", void 0);
class TicketLaboratorySortQuery extends query_1.SortQuery {
}
exports.TicketLaboratorySortQuery = TicketLaboratorySortQuery;


/***/ }),
/* 452 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketLaboratoryUpdateResultBody = exports.TicketLaboratoryUpdate = exports.TicketLaboratoryCreate = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const DOMPurify = __webpack_require__(388);
const typescript_helper_1 = __webpack_require__(174);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
class TicketLaboratoryCreate {
}
exports.TicketLaboratoryCreate = TicketLaboratoryCreate;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value != null ? Number(value) : value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketLaboratoryCreate.prototype, "laboratoryId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value != null ? Number(value) : value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketLaboratoryCreate.prototype, "expectedPrice", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value != null ? Math.round(Number(value)) : value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketLaboratoryCreate.prototype, "discountMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value != null ? Number(value) : value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.Max)(9999.99),
    (0, class_validator_1.Min)(-9999.99),
    __metadata("design:type", Number)
], TicketLaboratoryCreate.prototype, "discountPercent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: (0, typescript_helper_1.valuesEnum)(variable_1.DiscountType), example: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.DiscountType),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], TicketLaboratoryCreate.prototype, "discountType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value != null ? Math.round(Number(value)) : value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketLaboratoryCreate.prototype, "actualPrice", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: JSON.stringify({ 1: true }) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => DOMPurify.sanitize(value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], TicketLaboratoryCreate.prototype, "attention", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: JSON.stringify({ 2: 'Âm tính' }) }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], TicketLaboratoryCreate.prototype, "result", void 0);
class TicketLaboratoryUpdate extends (0, swagger_1.PickType)(TicketLaboratoryCreate, ['attention', 'result']) {
}
exports.TicketLaboratoryUpdate = TicketLaboratoryUpdate;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketLaboratoryUpdate.prototype, "id", void 0);
class TicketLaboratoryUpdateResultBody {
}
exports.TicketLaboratoryUpdateResultBody = TicketLaboratoryUpdateResultBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketLaboratoryCreate, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketLaboratoryCreate),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketLaboratoryUpdateResultBody.prototype, "ticketLaboratoryCreateList", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketLaboratoryUpdate, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketLaboratoryUpdate),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketLaboratoryUpdateResultBody.prototype, "ticketLaboratoryUpdateList", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketLaboratoryUpdateResultBody.prototype, "ticketId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketLaboratoryUpdateResultBody.prototype, "customerId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: Date.now() }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketLaboratoryUpdateResultBody.prototype, "startedAt", void 0);


/***/ }),
/* 453 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketOrderModule = void 0;
const common_1 = __webpack_require__(3);
const api_ticket_order_controller_1 = __webpack_require__(454);
const api_ticket_order_service_1 = __webpack_require__(455);
let ApiTicketOrderModule = class ApiTicketOrderModule {
};
exports.ApiTicketOrderModule = ApiTicketOrderModule;
exports.ApiTicketOrderModule = ApiTicketOrderModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_ticket_order_controller_1.ApiTicketOrderController],
        providers: [api_ticket_order_service_1.ApiTicketOrderService],
    })
], ApiTicketOrderModule);


/***/ }),
/* 454 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketOrderController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const dto_1 = __webpack_require__(195);
const permission_guard_1 = __webpack_require__(87);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_ticket_order_service_1 = __webpack_require__(455);
const request_1 = __webpack_require__(456);
let ApiTicketOrderController = class ApiTicketOrderController {
    constructor(apiTicketOrderService) {
        this.apiTicketOrderService = apiTicketOrderService;
    }
    async createDraft({ oid, uid }, body) {
        return await this.apiTicketOrderService.createDraft({
            oid,
            userId: uid,
            body,
        });
    }
    async updateDraftApproved({ oid, uid }, { id }, body) {
        return await this.apiTicketOrderService.updateDraftApproved({
            oid,
            userId: uid,
            ticketId: id,
            body,
        });
    }
    async createDebtSuccess({ oid, uid }, body) {
        return await this.apiTicketOrderService.createDebtSuccess({
            oid,
            userId: uid,
            body,
        });
    }
    async updateDebtSuccess({ oid, uid }, { id }, body) {
        return await this.apiTicketOrderService.updateDebtSuccess({
            oid,
            userId: uid,
            ticketId: id,
            body,
        });
    }
    async prepayment({ oid }, { id }, body) {
        return await this.apiTicketOrderService.prepayment({ oid, ticketId: id, body });
    }
    async refundOverpaid({ oid }, { id }, body) {
        return await this.apiTicketOrderService.refundOverpaid({ oid, ticketId: id, body });
    }
    async sendProductAndPaymentAndClose({ oid }, { id }, body) {
        return await this.apiTicketOrderService.sendProductAndPaymentAndClose({
            oid,
            ticketId: id,
            money: body.money,
        });
    }
    async paymentAndClose({ oid }, { id }, body) {
        return await this.apiTicketOrderService.paymentAndClose({
            oid,
            ticketId: id,
            money: body.money,
        });
    }
    async sendProduct({ oid }, { id }) {
        return await this.apiTicketOrderService.sendProduct({
            oid,
            ticketId: id,
        });
    }
    async returnProduct({ oid }, { id }, body) {
        return await this.apiTicketOrderService.returnProduct({ oid, ticketId: id, body });
    }
    async payDebt({ oid }, { id }, body) {
        return await this.apiTicketOrderService.payDebt({ oid, ticketId: id, body });
    }
    async cancel({ oid }, { id }) {
        return await this.apiTicketOrderService.cancel({ oid, ticketId: id });
    }
    async destroy({ oid }, { id }) {
        return await this.apiTicketOrderService.destroy({
            oid,
            ticketId: id,
        });
    }
};
exports.ApiTicketOrderController = ApiTicketOrderController;
__decorate([
    (0, common_1.Post)('create-draft'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_ORDER_CREATE_DRAFT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.TicketOrderDraftInsertBody !== "undefined" && request_1.TicketOrderDraftInsertBody) === "function" ? _c : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketOrderController.prototype, "createDraft", null);
__decorate([
    (0, common_1.Patch)(':id/update-draft-approved'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_ORDER_UPDATE_DRAFT_APPROVED),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _e : Object, typeof (_f = typeof request_1.TicketOrderDraftApprovedUpdateBody !== "undefined" && request_1.TicketOrderDraftApprovedUpdateBody) === "function" ? _f : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketOrderController.prototype, "updateDraftApproved", null);
__decorate([
    (0, common_1.Post)('create-debt-success'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_ORDER_CREATE_DEBT_SUCCESS),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_g = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _g : Object, typeof (_h = typeof request_1.TicketOrderDebtSuccessInsertBody !== "undefined" && request_1.TicketOrderDebtSuccessInsertBody) === "function" ? _h : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketOrderController.prototype, "createDebtSuccess", null);
__decorate([
    (0, common_1.Patch)(':id/update-debt-success'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_ORDER_UPDATE_DEBT_SUCCESS),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_j = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _j : Object, typeof (_k = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _k : Object, typeof (_l = typeof request_1.TicketOrderDebtSuccessUpdateBody !== "undefined" && request_1.TicketOrderDebtSuccessUpdateBody) === "function" ? _l : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketOrderController.prototype, "updateDebtSuccess", null);
__decorate([
    (0, common_1.Post)(':id/prepayment'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_ORDER_PREPAYMENT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_m = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _m : Object, typeof (_o = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _o : Object, typeof (_p = typeof request_1.TicketOrderPaymentBody !== "undefined" && request_1.TicketOrderPaymentBody) === "function" ? _p : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketOrderController.prototype, "prepayment", null);
__decorate([
    (0, common_1.Post)(':id/refund-overpaid'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_ORDER_REFUND_OVERPAID),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_q = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _q : Object, typeof (_r = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _r : Object, typeof (_s = typeof request_1.TicketOrderPaymentBody !== "undefined" && request_1.TicketOrderPaymentBody) === "function" ? _s : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketOrderController.prototype, "refundOverpaid", null);
__decorate([
    (0, common_1.Post)(':id/send-product-and-payment-and-close'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_ORDER_SEND_PRODUCT, permission_entity_1.PermissionId.TICKET_ORDER_PAYMENT_AND_CLOSE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_t = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _t : Object, typeof (_u = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _u : Object, typeof (_v = typeof request_1.TicketOrderPaymentBody !== "undefined" && request_1.TicketOrderPaymentBody) === "function" ? _v : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketOrderController.prototype, "sendProductAndPaymentAndClose", null);
__decorate([
    (0, common_1.Post)(':id/payment-and-close'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_ORDER_SEND_PRODUCT, permission_entity_1.PermissionId.TICKET_ORDER_PAYMENT_AND_CLOSE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_w = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _w : Object, typeof (_x = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _x : Object, typeof (_y = typeof request_1.TicketOrderPaymentBody !== "undefined" && request_1.TicketOrderPaymentBody) === "function" ? _y : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketOrderController.prototype, "paymentAndClose", null);
__decorate([
    (0, common_1.Post)(':id/send-product'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_ORDER_SEND_PRODUCT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_z = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _z : Object, typeof (_0 = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _0 : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketOrderController.prototype, "sendProduct", null);
__decorate([
    (0, common_1.Post)(':id/return-product'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_ORDER_RETURN_PRODUCT, permission_entity_1.PermissionId.TICKET_ORDER_REOPEN),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_1 = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _1 : Object, typeof (_2 = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _2 : Object, typeof (_3 = typeof request_1.TicketOrderReturnProductListBody !== "undefined" && request_1.TicketOrderReturnProductListBody) === "function" ? _3 : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketOrderController.prototype, "returnProduct", null);
__decorate([
    (0, common_1.Post)(':id/pay-debt'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_ORDER_PAY_DEBT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_4 = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _4 : Object, typeof (_5 = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _5 : Object, typeof (_6 = typeof request_1.TicketOrderPaymentBody !== "undefined" && request_1.TicketOrderPaymentBody) === "function" ? _6 : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketOrderController.prototype, "payDebt", null);
__decorate([
    (0, common_1.Post)(':id/cancel'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_ORDER_CANCEL),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_7 = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _7 : Object, typeof (_8 = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _8 : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketOrderController.prototype, "cancel", null);
__decorate([
    (0, common_1.Delete)(':id/destroy'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_ORDER_DESTROY_DRAFT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_9 = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _9 : Object, typeof (_10 = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _10 : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketOrderController.prototype, "destroy", null);
exports.ApiTicketOrderController = ApiTicketOrderController = __decorate([
    (0, swagger_1.ApiTags)('TicketOrder'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('ticket-order'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_ticket_order_service_1.ApiTicketOrderService !== "undefined" && api_ticket_order_service_1.ApiTicketOrderService) === "function" ? _a : Object])
], ApiTicketOrderController);


/***/ }),
/* 455 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketOrderService = void 0;
const common_1 = __webpack_require__(3);
const cache_data_service_1 = __webpack_require__(30);
const ticket_product_repository_1 = __webpack_require__(130);
const ticket_pay_debt_1 = __webpack_require__(133);
const ticket_payment_and_close_1 = __webpack_require__(134);
const ticket_prepayment_1 = __webpack_require__(135);
const ticket_send_product_1 = __webpack_require__(136);
const ticket_repository_1 = __webpack_require__(138);
const ticket_order_cancel_1 = __webpack_require__(147);
const ticket_order_debt_success_update_1 = __webpack_require__(148);
const ticket_order_draft_approved_update_1 = __webpack_require__(149);
const ticket_order_refund_overpaid_1 = __webpack_require__(150);
const ticket_order_return_product_list_1 = __webpack_require__(151);
const ticket_order_draft_1 = __webpack_require__(152);
const socket_emit_service_1 = __webpack_require__(204);
let ApiTicketOrderService = class ApiTicketOrderService {
    constructor(socketEmitService, cacheDataService, ticketProductRepository, ticketOrderDraft, ticketOrderDraftApprovedUpdate, ticketOrderDebtSuccessUpdate, ticketPaymentAndClose, ticketSendProduct, ticketRepository, ticketPrepayment, ticketPayDebt, ticketOrderRefundOverpaid, ticketOrderCancel, ticketOrderReturnProductList) {
        this.socketEmitService = socketEmitService;
        this.cacheDataService = cacheDataService;
        this.ticketProductRepository = ticketProductRepository;
        this.ticketOrderDraft = ticketOrderDraft;
        this.ticketOrderDraftApprovedUpdate = ticketOrderDraftApprovedUpdate;
        this.ticketOrderDebtSuccessUpdate = ticketOrderDebtSuccessUpdate;
        this.ticketPaymentAndClose = ticketPaymentAndClose;
        this.ticketSendProduct = ticketSendProduct;
        this.ticketRepository = ticketRepository;
        this.ticketPrepayment = ticketPrepayment;
        this.ticketPayDebt = ticketPayDebt;
        this.ticketOrderRefundOverpaid = ticketOrderRefundOverpaid;
        this.ticketOrderCancel = ticketOrderCancel;
        this.ticketOrderReturnProductList = ticketOrderReturnProductList;
    }
    async createDraft(params) {
        const { oid, body, userId } = params;
        try {
            const { ticketBasic } = await this.ticketOrderDraft.create({
                oid,
                ticketOrderDraftInsert: Object.assign(Object.assign({}, body.ticketOrderDraftInsert), { customerSourceId: 0, laboratoryMoney: 0, radiologyMoney: 0, dailyIndex: 0, imageIds: JSON.stringify([]) }),
                ticketOrderProductDraftList: body.ticketOrderProductDraftList,
                ticketOrderProcedureDraftList: body.ticketOrderProcedureDraftList,
                ticketOrderSurchargeDraftList: body.ticketOrderSurchargeDraftList,
                ticketOrderExpenseDraftList: body.ticketOrderExpenseDraftList,
                ticketAttributeDraftList: body.ticketOrderAttributeDaftList,
            });
            return { data: { ticketBasic } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async updateDraftApproved(params) {
        const { oid, userId, ticketId, body } = params;
        try {
            const { ticketBasic } = await this.ticketOrderDraftApprovedUpdate.update({
                oid,
                ticketId,
                ticketOrderDraftApprovedUpdate: Object.assign(Object.assign({}, body.ticketOrderDraftApprovedUpdate), { customerSourceId: 0, laboratoryMoney: 0, radiologyMoney: 0, dailyIndex: 0, imageIds: JSON.stringify([]) }),
                ticketOrderProductDraftList: body.ticketOrderProductDraftList,
                ticketOrderProcedureDraftList: body.ticketOrderProcedureDraftList,
                ticketOrderSurchargeDraftList: body.ticketOrderSurchargeDraftList,
                ticketOrderExpenseDraftList: body.ticketOrderExpenseDraftList,
                ticketAttributeDraftList: body.ticketOrderAttributeDaftList,
            });
            return { data: { ticketBasic } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async createDebtSuccess(params) {
        const { oid, body, userId } = params;
        const _a = body.ticketOrderDebtSuccessInsert, { paid } = _a, ticketOrderDraftInsert = __rest(_a, ["paid"]);
        const time = ticketOrderDraftInsert.registeredAt;
        const createDraftResponse = await this.ticketOrderDraft.create({
            oid,
            ticketOrderDraftInsert: Object.assign(Object.assign({}, ticketOrderDraftInsert), { customerSourceId: 0, laboratoryMoney: 0, radiologyMoney: 0, dailyIndex: 0, imageIds: JSON.stringify([]) }),
            ticketOrderProductDraftList: body.ticketOrderProductDraftList,
            ticketOrderProcedureDraftList: body.ticketOrderProcedureDraftList,
            ticketOrderSurchargeDraftList: body.ticketOrderSurchargeDraftList,
            ticketOrderExpenseDraftList: body.ticketOrderExpenseDraftList,
            ticketAttributeDraftList: body.ticketOrderAttributeDaftList,
        });
        const ticketId = createDraftResponse.ticketBasic.id;
        if (body.ticketOrderProductDraftList.length) {
            const allowNegativeQuantity = await this.cacheDataService.getSettingAllowNegativeQuantity(oid);
            const sendProductResponse = await this.ticketSendProduct.sendProduct({
                oid,
                ticketId,
                time,
                allowNegativeQuantity,
            });
            this.socketEmitService.batchListUpdate(oid, {
                batchList: sendProductResponse.batchList,
            });
            this.socketEmitService.productListUpdate(oid, {
                productList: sendProductResponse.productList,
            });
        }
        const { ticketBasic, customer } = await this.ticketPaymentAndClose.paymentAndClose({
            oid,
            ticketId,
            money: paid,
            time,
        });
        if (customer) {
            this.socketEmitService.customerUpsert(oid, { customer });
        }
        return { data: { ticketBasic } };
    }
    async updateDebtSuccess(params) {
        const { oid, userId, ticketId, body } = params;
        try {
            const allowNegativeQuantity = await this.cacheDataService.getSettingAllowNegativeQuantity(oid);
            const { ticketBasic, batchList, productList } = await this.ticketOrderDebtSuccessUpdate.update({
                oid,
                ticketId,
                ticketOrderDebtSuccessUpdate: Object.assign(Object.assign({}, body.ticketOrderDebtSuccessUpdate), { customerSourceId: 0, laboratoryMoney: 0, radiologyMoney: 0, dailyIndex: 0, imageIds: JSON.stringify([]) }),
                ticketOrderProductDraftList: body.ticketOrderProductDraftList,
                ticketOrderProcedureDraftList: body.ticketOrderProcedureDraftList,
                ticketOrderSurchargeDraftList: body.ticketOrderSurchargeDraftList,
                ticketOrderExpenseDraftList: body.ticketOrderExpenseDraftList,
                description: 'Sửa đơn',
                allowNegativeQuantity,
            });
            this.socketEmitService.batchListUpdate(oid, { batchList });
            this.socketEmitService.productListUpdate(oid, { productList });
            return { data: { ticketBasic } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async prepayment(options) {
        const { oid, ticketId, body } = options;
        try {
            const { ticketBasic, customerPayment } = await this.ticketPrepayment.prepayment({
                oid,
                ticketId,
                time: Date.now(),
                money: body.money,
            });
            return { data: { ticketBasic, customerPayment } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async sendProductAndPaymentAndClose(params) {
        const { oid, ticketId, money } = params;
        const time = Date.now();
        try {
            const allowNegativeQuantity = await this.cacheDataService.getSettingAllowNegativeQuantity(oid);
            const { productList, batchList } = await this.ticketSendProduct.sendProduct({
                oid,
                ticketId,
                time,
                allowNegativeQuantity,
            });
            const { ticketBasic, customer, customerPayment } = await this.ticketPaymentAndClose.paymentAndClose({
                oid,
                ticketId,
                time,
                money,
            });
            this.socketEmitService.batchListUpdate(oid, { batchList });
            this.socketEmitService.productListUpdate(oid, { productList });
            if (customer) {
                this.socketEmitService.customerUpsert(oid, { customer });
            }
            const ticketProductList = await this.ticketProductRepository.findMany({
                relation: { product: true, batch: true },
                condition: {
                    oid,
                    ticketId,
                },
                sort: { id: 'ASC' },
            });
            return { data: { ticketBasic, ticketProductList, customerPayment } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async paymentAndClose(params) {
        const { oid, ticketId, money } = params;
        const time = Date.now();
        try {
            const { ticketBasic, customer, customerPayment } = await this.ticketPaymentAndClose.paymentAndClose({
                oid,
                ticketId,
                time,
                money,
            });
            if (customer) {
                this.socketEmitService.customerUpsert(oid, { customer });
            }
            return { data: { ticketBasic, customerPayment } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async refundOverpaid(options) {
        const { oid, ticketId, body } = options;
        try {
            const { ticketBasic, customerPayment } = await this.ticketOrderRefundOverpaid.refundOverpaid({
                oid,
                ticketId,
                time: Date.now(),
                money: body.money,
            });
            return { data: { ticketBasic, customerPayment } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async sendProduct(params) {
        const { oid, ticketId } = params;
        const time = Date.now();
        try {
            const allowNegativeQuantity = await this.cacheDataService.getSettingAllowNegativeQuantity(oid);
            const { ticketBasic, productList, batchList } = await this.ticketSendProduct.sendProduct({
                oid,
                ticketId,
                time,
                allowNegativeQuantity,
            });
            const ticketProductList = await this.ticketProductRepository.findMany({
                relation: { product: true, batch: true },
                condition: {
                    oid,
                    ticketId,
                },
                sort: { id: 'ASC' },
            });
            this.socketEmitService.batchListUpdate(oid, { batchList });
            this.socketEmitService.productListUpdate(oid, { productList });
            return { data: { ticketBasic, ticketProductList } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async returnProduct(params) {
        const { oid, ticketId, body } = params;
        try {
            const { ticketBasic, productList, batchList, customer, customerPayment } = await this.ticketOrderReturnProductList.returnProductList(Object.assign({ oid,
                ticketId, time: Date.now(), description: 'Trả hàng' }, body));
            this.socketEmitService.batchListUpdate(oid, { batchList });
            this.socketEmitService.productListUpdate(oid, { productList });
            if (customer) {
                this.socketEmitService.customerUpsert(oid, { customer });
            }
            return { data: { ticketBasic, customerPayment } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async payDebt(options) {
        const { oid, ticketId, body } = options;
        try {
            const { ticketBasic, customerPayment, customer } = await this.ticketPayDebt.payDebt({
                oid,
                ticketId,
                time: Date.now(),
                money: body.money,
            });
            if (customer) {
                this.socketEmitService.customerUpsert(oid, { customer });
            }
            return { data: { ticketBasic, customerPayment } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
    async cancel(options) {
        const { oid, ticketId } = options;
        const { ticketBasic, customerPayment } = await this.ticketOrderCancel.cancel({
            oid,
            ticketId,
            time: Date.now(),
            description: 'Hủy phiếu',
        });
        return { data: { ticketBasic, customerPayment } };
    }
    async destroy(params) {
        const { oid, ticketId } = params;
        try {
            await this.ticketRepository.destroy({ oid, ticketId });
            return { data: { ticketId } };
        }
        catch (error) {
            throw new common_1.HttpException(error.message, common_1.HttpStatus.BAD_REQUEST);
        }
    }
};
exports.ApiTicketOrderService = ApiTicketOrderService;
exports.ApiTicketOrderService = ApiTicketOrderService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _a : Object, typeof (_b = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _b : Object, typeof (_c = typeof ticket_product_repository_1.TicketProductRepository !== "undefined" && ticket_product_repository_1.TicketProductRepository) === "function" ? _c : Object, typeof (_d = typeof ticket_order_draft_1.TicketOrderDraft !== "undefined" && ticket_order_draft_1.TicketOrderDraft) === "function" ? _d : Object, typeof (_e = typeof ticket_order_draft_approved_update_1.TicketOrderDraftApprovedUpdate !== "undefined" && ticket_order_draft_approved_update_1.TicketOrderDraftApprovedUpdate) === "function" ? _e : Object, typeof (_f = typeof ticket_order_debt_success_update_1.TicketOrderDebtSuccessUpdate !== "undefined" && ticket_order_debt_success_update_1.TicketOrderDebtSuccessUpdate) === "function" ? _f : Object, typeof (_g = typeof ticket_payment_and_close_1.TicketPaymentAndClose !== "undefined" && ticket_payment_and_close_1.TicketPaymentAndClose) === "function" ? _g : Object, typeof (_h = typeof ticket_send_product_1.TicketSendProduct !== "undefined" && ticket_send_product_1.TicketSendProduct) === "function" ? _h : Object, typeof (_j = typeof ticket_repository_1.TicketRepository !== "undefined" && ticket_repository_1.TicketRepository) === "function" ? _j : Object, typeof (_k = typeof ticket_prepayment_1.TicketPrepayment !== "undefined" && ticket_prepayment_1.TicketPrepayment) === "function" ? _k : Object, typeof (_l = typeof ticket_pay_debt_1.TicketPayDebt !== "undefined" && ticket_pay_debt_1.TicketPayDebt) === "function" ? _l : Object, typeof (_m = typeof ticket_order_refund_overpaid_1.TicketOrderRefundOverpaid !== "undefined" && ticket_order_refund_overpaid_1.TicketOrderRefundOverpaid) === "function" ? _m : Object, typeof (_o = typeof ticket_order_cancel_1.TicketOrderCancel !== "undefined" && ticket_order_cancel_1.TicketOrderCancel) === "function" ? _o : Object, typeof (_p = typeof ticket_order_return_product_list_1.TicketOrderReturnProductList !== "undefined" && ticket_order_return_product_list_1.TicketOrderReturnProductList) === "function" ? _p : Object])
], ApiTicketOrderService);


/***/ }),
/* 456 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(457), exports);
__exportStar(__webpack_require__(458), exports);
__exportStar(__webpack_require__(459), exports);
__exportStar(__webpack_require__(460), exports);
__exportStar(__webpack_require__(461), exports);
__exportStar(__webpack_require__(462), exports);
__exportStar(__webpack_require__(463), exports);


/***/ }),
/* 457 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketOrderExpenseDraft = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
class TicketOrderExpenseDraft {
}
exports.TicketOrderExpenseDraft = TicketOrderExpenseDraft;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], TicketOrderExpenseDraft.prototype, "key", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], TicketOrderExpenseDraft.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], TicketOrderExpenseDraft.prototype, "money", void 0);


/***/ }),
/* 458 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketOrderPaymentBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class TicketOrderPaymentBody {
}
exports.TicketOrderPaymentBody = TicketOrderPaymentBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1200000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderPaymentBody.prototype, "money", void 0);


/***/ }),
/* 459 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketOrderProcedureDraft = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const typescript_helper_1 = __webpack_require__(174);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
class TicketOrderProcedureDraft {
}
exports.TicketOrderProcedureDraft = TicketOrderProcedureDraft;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 12 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketOrderProcedureDraft.prototype, "procedureId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 4 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], TicketOrderProcedureDraft.prototype, "quantity", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketOrderProcedureDraft.prototype, "expectedPrice", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketOrderProcedureDraft.prototype, "discountMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketOrderProcedureDraft.prototype, "discountPercent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: (0, typescript_helper_1.valuesEnum)(variable_1.DiscountType), example: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.DiscountType),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], TicketOrderProcedureDraft.prototype, "discountType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketOrderProcedureDraft.prototype, "actualPrice", void 0);


/***/ }),
/* 460 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketOrderProductDraft = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const typescript_helper_1 = __webpack_require__(174);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
class TicketOrderProductDraft {
}
exports.TicketOrderProductDraft = TicketOrderProductDraft;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 12 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketOrderProductDraft.prototype, "productId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 12 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketOrderProductDraft.prototype, "batchId", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketOrderProductDraft.prototype, "unitRate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 4 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], TicketOrderProductDraft.prototype, "quantity", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 12000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketOrderProductDraft.prototype, "costAmount", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketOrderProductDraft.prototype, "expectedPrice", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketOrderProductDraft.prototype, "discountMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketOrderProductDraft.prototype, "discountPercent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: (0, typescript_helper_1.valuesEnum)(variable_1.DiscountType), example: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.DiscountType),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], TicketOrderProductDraft.prototype, "discountType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => Math.round(value || 0)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketOrderProductDraft.prototype, "actualPrice", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 'Uống 2 lần/ngày sáng 1 viên, chiều 1 viên' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], TicketOrderProductDraft.prototype, "hintUsage", void 0);


/***/ }),
/* 461 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketOrderReturnProductListBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
class TicketProductReturn {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], TicketProductReturn.prototype, "ticketProductId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 3 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], TicketProductReturn.prototype, "quantityReturn", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 600000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductReturn.prototype, "costAmountReturn", void 0);
class TicketProcedureReturn {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], TicketProcedureReturn.prototype, "ticketProcedureId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 3 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], TicketProcedureReturn.prototype, "quantityReturn", void 0);
class TicketOrderReturnProductListBody {
}
exports.TicketOrderReturnProductListBody = TicketOrderReturnProductListBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketProductReturn, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketProductReturn),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketOrderReturnProductListBody.prototype, "ticketProductReturnList", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketProcedureReturn, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketProcedureReturn),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketOrderReturnProductListBody.prototype, "ticketProcedureReturnList", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 300000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderReturnProductListBody.prototype, "totalCostAmountUpdate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 300000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderReturnProductListBody.prototype, "productMoneyUpdate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 300000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderReturnProductListBody.prototype, "procedureMoneyUpdate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 300000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderReturnProductListBody.prototype, "itemsActualMoneyUpdate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 300000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderReturnProductListBody.prototype, "itemsDiscountUpdate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 300000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderReturnProductListBody.prototype, "discountMoneyUpdate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 300000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderReturnProductListBody.prototype, "discountPercentUpdate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 300000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderReturnProductListBody.prototype, "surchargeUpdate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 300000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderReturnProductListBody.prototype, "expenseUpdate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 300000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderReturnProductListBody.prototype, "totalMoneyUpdate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 300000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderReturnProductListBody.prototype, "profitUpdate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 300000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderReturnProductListBody.prototype, "paidUpdate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 300000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderReturnProductListBody.prototype, "debtUpdate", void 0);


/***/ }),
/* 462 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketOrderSurchargeDraft = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
class TicketOrderSurchargeDraft {
}
exports.TicketOrderSurchargeDraft = TicketOrderSurchargeDraft;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], TicketOrderSurchargeDraft.prototype, "key", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], TicketOrderSurchargeDraft.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_custom_1.IsNumberGreaterThan)(0),
    __metadata("design:type", Number)
], TicketOrderSurchargeDraft.prototype, "money", void 0);


/***/ }),
/* 463 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketOrderDebtSuccessUpdateBody = exports.TicketOrderDebtSuccessInsertBody = exports.TicketOrderDraftApprovedUpdateBody = exports.TicketOrderDraftInsertBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
const ticket_order_expense_draft_1 = __webpack_require__(457);
const ticket_order_procedure_draft_1 = __webpack_require__(459);
const ticket_order_product_draft_1 = __webpack_require__(460);
const ticket_order_surcharge_draft_1 = __webpack_require__(462);
class TicketOrderBasic {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 45 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsPositive)(),
    __metadata("design:type", Number)
], TicketOrderBasic.prototype, "customerId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 750000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderBasic.prototype, "totalCostAmount", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 750000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderBasic.prototype, "procedureMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 750000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderBasic.prototype, "productMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderBasic.prototype, "itemsActualMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderBasic.prototype, "itemsDiscount", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderBasic.prototype, "discountMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketOrderBasic.prototype, "discountPercent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: variable_1.DiscountType, example: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.DiscountType),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], TicketOrderBasic.prototype, "discountType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 12000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderBasic.prototype, "surcharge", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1250000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderBasic.prototype, "totalMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1250000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderBasic.prototype, "paid", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1250000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderBasic.prototype, "debt", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 20000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderBasic.prototype, "expense", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 20000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketOrderBasic.prototype, "profit", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: Date.now() }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], TicketOrderBasic.prototype, "registeredAt", void 0);
class TicketOrderBasicDebtSuccessInsert extends (0, swagger_1.OmitType)(TicketOrderBasic, ['debt']) {
}
class TicketOrderBasicDebtSuccessUpdate extends (0, swagger_1.OmitType)(TicketOrderBasic, ['customerId', 'debt']) {
}
class TicketOrderBasicDraftInsert extends (0, swagger_1.OmitType)(TicketOrderBasic, ['paid', 'debt']) {
}
class TicketOrderBasicDraftApprovedUpdate extends (0, swagger_1.OmitType)(TicketOrderBasic, ['customerId', 'paid', 'debt']) {
}
class TicketOrderAttributeBody {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Diagnosis' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.MaxLength)(100),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], TicketOrderAttributeBody.prototype, "key", void 0);
__decorate([
    (0, swagger_1.ApiProperty)(),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Allow)(),
    __metadata("design:type", String)
], TicketOrderAttributeBody.prototype, "value", void 0);
class TicketOrderRelation {
}
__decorate([
    (0, swagger_1.ApiProperty)({ type: ticket_order_product_draft_1.TicketOrderProductDraft, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => ticket_order_product_draft_1.TicketOrderProductDraft),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketOrderRelation.prototype, "ticketOrderProductDraftList", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ type: ticket_order_procedure_draft_1.TicketOrderProcedureDraft, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => ticket_order_procedure_draft_1.TicketOrderProcedureDraft),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketOrderRelation.prototype, "ticketOrderProcedureDraftList", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: ticket_order_surcharge_draft_1.TicketOrderSurchargeDraft,
        isArray: true,
        example: [
            { key: 'xx', name: 'Hoa hồng', money: 10000 },
            { key: 'xxe', name: 'Ship', money: 200000 },
        ],
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_transformer_1.Type)(() => ticket_order_surcharge_draft_1.TicketOrderSurchargeDraft),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketOrderRelation.prototype, "ticketOrderSurchargeDraftList", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: ticket_order_expense_draft_1.TicketOrderExpenseDraft,
        isArray: true,
        example: [
            { key: 'xx', name: 'Vật tư', money: 10000 },
            { key: 'xxe', name: 'Ship', money: 200000 },
        ],
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_transformer_1.Type)(() => ticket_order_expense_draft_1.TicketOrderExpenseDraft),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketOrderRelation.prototype, "ticketOrderExpenseDraftList", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketOrderAttributeBody, isArray: true }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketOrderAttributeBody),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], TicketOrderRelation.prototype, "ticketOrderAttributeDaftList", void 0);
class TicketOrderDraftInsertBody extends TicketOrderRelation {
}
exports.TicketOrderDraftInsertBody = TicketOrderDraftInsertBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketOrderBasicDraftInsert }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketOrderBasicDraftInsert),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", TicketOrderBasicDraftInsert)
], TicketOrderDraftInsertBody.prototype, "ticketOrderDraftInsert", void 0);
class TicketOrderDraftApprovedUpdateBody extends TicketOrderRelation {
}
exports.TicketOrderDraftApprovedUpdateBody = TicketOrderDraftApprovedUpdateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketOrderBasicDraftApprovedUpdate }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketOrderBasicDraftApprovedUpdate),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", TicketOrderBasicDraftApprovedUpdate)
], TicketOrderDraftApprovedUpdateBody.prototype, "ticketOrderDraftApprovedUpdate", void 0);
class TicketOrderDebtSuccessInsertBody extends TicketOrderRelation {
}
exports.TicketOrderDebtSuccessInsertBody = TicketOrderDebtSuccessInsertBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketOrderBasicDebtSuccessInsert }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketOrderBasicDebtSuccessInsert),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", TicketOrderBasicDebtSuccessInsert)
], TicketOrderDebtSuccessInsertBody.prototype, "ticketOrderDebtSuccessInsert", void 0);
class TicketOrderDebtSuccessUpdateBody extends TicketOrderRelation {
}
exports.TicketOrderDebtSuccessUpdateBody = TicketOrderDebtSuccessUpdateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ type: TicketOrderBasicDebtSuccessUpdate }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => TicketOrderBasicDebtSuccessUpdate),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", TicketOrderBasicDebtSuccessUpdate)
], TicketOrderDebtSuccessUpdateBody.prototype, "ticketOrderDebtSuccessUpdate", void 0);


/***/ }),
/* 464 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketProcedureModule = void 0;
const common_1 = __webpack_require__(3);
const api_ticket_procedure_controller_1 = __webpack_require__(465);
const api_ticket_procedure_service_1 = __webpack_require__(466);
let ApiTicketProcedureModule = class ApiTicketProcedureModule {
};
exports.ApiTicketProcedureModule = ApiTicketProcedureModule;
exports.ApiTicketProcedureModule = ApiTicketProcedureModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_ticket_procedure_controller_1.ApiTicketProcedureController],
        providers: [api_ticket_procedure_service_1.ApiTicketProcedureService],
    })
], ApiTicketProcedureModule);


/***/ }),
/* 465 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketProcedureController = void 0;
const common_1 = __webpack_require__(3);
const route_params_decorator_1 = __webpack_require__(391);
const swagger_1 = __webpack_require__(6);
const dto_1 = __webpack_require__(195);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const api_ticket_procedure_service_1 = __webpack_require__(466);
const request_1 = __webpack_require__(467);
let ApiTicketProcedureController = class ApiTicketProcedureController {
    constructor(apiTicketProcedureService) {
        this.apiTicketProcedureService = apiTicketProcedureService;
    }
    async pagination({ oid }, query) {
        return await this.apiTicketProcedureService.pagination(oid, query);
    }
    async detail({ oid }, { id }, query) {
        return await this.apiTicketProcedureService.getOne(oid, id, query);
    }
};
exports.ApiTicketProcedureController = ApiTicketProcedureController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, route_params_decorator_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.TicketProcedurePaginationQuery !== "undefined" && request_1.TicketProcedurePaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketProcedureController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, route_params_decorator_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _e : Object, typeof (_f = typeof request_1.TicketProcedureGetOneQuery !== "undefined" && request_1.TicketProcedureGetOneQuery) === "function" ? _f : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketProcedureController.prototype, "detail", null);
exports.ApiTicketProcedureController = ApiTicketProcedureController = __decorate([
    (0, swagger_1.ApiTags)('TicketProcedure'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('ticket-procedure'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_ticket_procedure_service_1.ApiTicketProcedureService !== "undefined" && api_ticket_procedure_service_1.ApiTicketProcedureService) === "function" ? _a : Object])
], ApiTicketProcedureController);


/***/ }),
/* 466 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketProcedureService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const object_helper_1 = __webpack_require__(85);
const ticket_user_entity_1 = __webpack_require__(66);
const image_repository_1 = __webpack_require__(103);
const ticket_procedure_repository_1 = __webpack_require__(129);
const ticket_user_repository_1 = __webpack_require__(132);
let ApiTicketProcedureService = class ApiTicketProcedureService {
    constructor(ticketProcedureRepository, ticketUserRepository, imageRepository) {
        this.ticketProcedureRepository = ticketProcedureRepository;
        this.ticketUserRepository = ticketUserRepository;
        this.imageRepository = imageRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, relation, sort } = query;
        const { imageList, ticketUser } = relation, relationEntity = __rest(relation, ["imageList", "ticketUser"]);
        const { total, data } = await this.ticketProcedureRepository.pagination({
            relation: relationEntity,
            page,
            limit,
            condition: {
                oid,
                customerId: filter === null || filter === void 0 ? void 0 : filter.customerId,
                procedureId: filter === null || filter === void 0 ? void 0 : filter.procedureId,
                ticketId: filter === null || filter === void 0 ? void 0 : filter.ticketId,
            },
            sort,
        });
        return {
            data,
            meta: { page, limit, total },
        };
    }
    async getOne(oid, id, query) {
        const _a = query.relation, { imageList, ticketUser } = _a, relationEntity = __rest(_a, ["imageList", "ticketUser"]);
        const ticketProcedure = await this.ticketProcedureRepository.findOne({
            relation: relationEntity,
            condition: { oid, id },
        });
        if (!ticketProcedure) {
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        }
        if (imageList) {
            ticketProcedure.imageList = [];
            const imageIds = JSON.parse(ticketProcedure.imageIds);
            let imageMap = {};
            if (imageIds.length > 0) {
                const imageList = await this.imageRepository.findManyByIds(imageIds);
                imageMap = (0, object_helper_1.arrayToKeyValue)(imageList, 'id');
            }
            imageIds.forEach((i) => {
                ticketProcedure.imageList.push(imageMap[i]);
            });
        }
        if (ticketUser) {
            ticketProcedure.ticketUserList = await this.ticketUserRepository.findManyBy({
                oid,
                ticketId: ticketProcedure.ticketId,
                referenceType: ticket_user_entity_1.TicketUserReferenceType.TicketProcedure,
                referenceId: ticketProcedure.id,
            });
        }
        return { data: { ticketProcedure } };
    }
};
exports.ApiTicketProcedureService = ApiTicketProcedureService;
exports.ApiTicketProcedureService = ApiTicketProcedureService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof ticket_procedure_repository_1.TicketProcedureRepository !== "undefined" && ticket_procedure_repository_1.TicketProcedureRepository) === "function" ? _a : Object, typeof (_b = typeof ticket_user_repository_1.TicketUserRepository !== "undefined" && ticket_user_repository_1.TicketUserRepository) === "function" ? _b : Object, typeof (_c = typeof image_repository_1.ImageRepository !== "undefined" && image_repository_1.ImageRepository) === "function" ? _c : Object])
], ApiTicketProcedureService);


/***/ }),
/* 467 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(468), exports);
__exportStar(__webpack_require__(469), exports);


/***/ }),
/* 468 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketProcedureGetOneQuery = exports.TicketProcedureGetManyQuery = exports.TicketProcedurePaginationQuery = exports.TicketProcedureGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const ticket_procedure_options_request_1 = __webpack_require__(469);
class TicketProcedureGetQuery {
}
exports.TicketProcedureGetQuery = TicketProcedureGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(ticket_procedure_options_request_1.TicketProcedureRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof ticket_procedure_options_request_1.TicketProcedureRelationQuery !== "undefined" && ticket_procedure_options_request_1.TicketProcedureRelationQuery) === "function" ? _a : Object)
], TicketProcedureGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            customerId: 1,
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(ticket_procedure_options_request_1.TicketProcedureFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof ticket_procedure_options_request_1.TicketProcedureFilterQuery !== "undefined" && ticket_procedure_options_request_1.TicketProcedureFilterQuery) === "function" ? _b : Object)
], TicketProcedureGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            id: 'ASC',
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(ticket_procedure_options_request_1.TicketProcedureSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof ticket_procedure_options_request_1.TicketProcedureSortQuery !== "undefined" && ticket_procedure_options_request_1.TicketProcedureSortQuery) === "function" ? _c : Object)
], TicketProcedureGetQuery.prototype, "sort", void 0);
class TicketProcedurePaginationQuery extends (0, swagger_1.IntersectionType)(TicketProcedureGetQuery, query_1.PaginationQuery) {
}
exports.TicketProcedurePaginationQuery = TicketProcedurePaginationQuery;
class TicketProcedureGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(TicketProcedureGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.TicketProcedureGetManyQuery = TicketProcedureGetManyQuery;
class TicketProcedureGetOneQuery extends (0, swagger_1.PickType)(TicketProcedureGetQuery, ['relation']) {
}
exports.TicketProcedureGetOneQuery = TicketProcedureGetOneQuery;


/***/ }),
/* 469 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketProcedureSortQuery = exports.TicketProcedureFilterQuery = exports.TicketProcedureRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
class TicketProcedureRelationQuery {
}
exports.TicketProcedureRelationQuery = TicketProcedureRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketProcedureRelationQuery.prototype, "procedure", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketProcedureRelationQuery.prototype, "customer", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketProcedureRelationQuery.prototype, "ticket", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketProcedureRelationQuery.prototype, "imageList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketProcedureRelationQuery.prototype, "ticketUser", void 0);
class TicketProcedureFilterQuery {
}
exports.TicketProcedureFilterQuery = TicketProcedureFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProcedureFilterQuery.prototype, "procedureId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProcedureFilterQuery.prototype, "customerId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProcedureFilterQuery.prototype, "ticketId", void 0);
class TicketProcedureSortQuery extends query_1.SortQuery {
}
exports.TicketProcedureSortQuery = TicketProcedureSortQuery;


/***/ }),
/* 470 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketProductModule = void 0;
const common_1 = __webpack_require__(3);
const api_ticket_product_controller_1 = __webpack_require__(471);
const api_ticket_product_service_1 = __webpack_require__(472);
let ApiTicketProductModule = class ApiTicketProductModule {
};
exports.ApiTicketProductModule = ApiTicketProductModule;
exports.ApiTicketProductModule = ApiTicketProductModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_ticket_product_controller_1.ApiTicketProductController],
        providers: [api_ticket_product_service_1.ApiTicketProductService],
    })
], ApiTicketProductModule);


/***/ }),
/* 471 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketProductController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const dto_1 = __webpack_require__(195);
const permission_guard_1 = __webpack_require__(87);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_ticket_product_service_1 = __webpack_require__(472);
const request_1 = __webpack_require__(473);
let ApiTicketProductController = class ApiTicketProductController {
    constructor(apiTicketProductService) {
        this.apiTicketProductService = apiTicketProductService;
    }
    async pagination({ oid }, query) {
        return await this.apiTicketProductService.pagination(oid, query);
    }
    async destroyZero({ oid }, { id }) {
        return await this.apiTicketProductService.destroyZero(oid, id);
    }
};
exports.ApiTicketProductController = ApiTicketProductController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.PRODUCT_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.TicketProductPaginationQuery !== "undefined" && request_1.TicketProductPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketProductController.prototype, "pagination", null);
__decorate([
    (0, common_1.Delete)('destroy-zero/:id'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _e : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketProductController.prototype, "destroyZero", null);
exports.ApiTicketProductController = ApiTicketProductController = __decorate([
    (0, swagger_1.ApiTags)('TicketProduct'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('ticket-product'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_ticket_product_service_1.ApiTicketProductService !== "undefined" && api_ticket_product_service_1.ApiTicketProductService) === "function" ? _a : Object])
], ApiTicketProductController);


/***/ }),
/* 472 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketProductService = void 0;
const common_1 = __webpack_require__(3);
const ticket_product_repository_1 = __webpack_require__(130);
let ApiTicketProductService = class ApiTicketProductService {
    constructor(ticketProductRepository) {
        this.ticketProductRepository = ticketProductRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, relation, sort } = query;
        const { total, data } = await this.ticketProductRepository.pagination({
            relation,
            page,
            limit,
            condition: {
                oid,
                customerId: filter === null || filter === void 0 ? void 0 : filter.customerId,
                productId: filter === null || filter === void 0 ? void 0 : filter.productId,
                batchId: filter === null || filter === void 0 ? void 0 : filter.batchId,
                ticketId: filter === null || filter === void 0 ? void 0 : filter.ticketId,
                deliveryStatus: filter === null || filter === void 0 ? void 0 : filter.deliveryStatus,
            },
            sort,
        });
        return {
            data,
            meta: { page, limit, total },
        };
    }
    async destroyZero(oid, ticketProductId) {
        await this.ticketProductRepository.delete({
            oid,
            id: ticketProductId,
            quantity: 0,
        });
        return { data: { ticketProductId } };
    }
};
exports.ApiTicketProductService = ApiTicketProductService;
exports.ApiTicketProductService = ApiTicketProductService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof ticket_product_repository_1.TicketProductRepository !== "undefined" && ticket_product_repository_1.TicketProductRepository) === "function" ? _a : Object])
], ApiTicketProductService);


/***/ }),
/* 473 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(474), exports);
__exportStar(__webpack_require__(475), exports);


/***/ }),
/* 474 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketProductGetOneQuery = exports.TicketProductGetManyQuery = exports.TicketProductPaginationQuery = exports.TicketProductGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const ticket_product_options_request_1 = __webpack_require__(475);
class TicketProductGetQuery {
}
exports.TicketProductGetQuery = TicketProductGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(ticket_product_options_request_1.TicketProductRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof ticket_product_options_request_1.TicketProductRelationQuery !== "undefined" && ticket_product_options_request_1.TicketProductRelationQuery) === "function" ? _a : Object)
], TicketProductGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            customerId: 1,
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(ticket_product_options_request_1.TicketProductFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof ticket_product_options_request_1.TicketProductFilterQuery !== "undefined" && ticket_product_options_request_1.TicketProductFilterQuery) === "function" ? _b : Object)
], TicketProductGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            id: 'ASC',
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(ticket_product_options_request_1.TicketProductSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof ticket_product_options_request_1.TicketProductSortQuery !== "undefined" && ticket_product_options_request_1.TicketProductSortQuery) === "function" ? _c : Object)
], TicketProductGetQuery.prototype, "sort", void 0);
class TicketProductPaginationQuery extends (0, swagger_1.IntersectionType)(TicketProductGetQuery, query_1.PaginationQuery) {
}
exports.TicketProductPaginationQuery = TicketProductPaginationQuery;
class TicketProductGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(TicketProductGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.TicketProductGetManyQuery = TicketProductGetManyQuery;
class TicketProductGetOneQuery extends (0, swagger_1.PickType)(TicketProductGetQuery, ['relation']) {
}
exports.TicketProductGetOneQuery = TicketProductGetOneQuery;


/***/ }),
/* 475 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketProductSortQuery = exports.TicketProductFilterQuery = exports.TicketProductRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const dto_1 = __webpack_require__(195);
const query_1 = __webpack_require__(185);
const variable_1 = __webpack_require__(41);
class TicketProductRelationQuery {
}
exports.TicketProductRelationQuery = TicketProductRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketProductRelationQuery.prototype, "batch", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketProductRelationQuery.prototype, "product", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketProductRelationQuery.prototype, "ticket", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketProductRelationQuery.prototype, "customer", void 0);
const ConditionEnumDeliveryStatus = (0, dto_1.createConditionEnum)(variable_1.DeliveryStatus);
class TicketProductFilterQuery {
}
exports.TicketProductFilterQuery = TicketProductFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductFilterQuery.prototype, "productId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductFilterQuery.prototype, "batchId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductFilterQuery.prototype, "customerId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketProductFilterQuery.prototype, "ticketId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)((params) => (0, dto_1.transformConditionEnum)(params, variable_1.DeliveryStatus)),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], TicketProductFilterQuery.prototype, "deliveryStatus", void 0);
class TicketProductSortQuery extends query_1.SortQuery {
}
exports.TicketProductSortQuery = TicketProductSortQuery;


/***/ }),
/* 476 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketRadiologyModule = void 0;
const common_1 = __webpack_require__(3);
const api_ticket_radiology_controller_1 = __webpack_require__(477);
const api_ticket_radiology_service_1 = __webpack_require__(478);
let ApiTicketRadiologyModule = class ApiTicketRadiologyModule {
};
exports.ApiTicketRadiologyModule = ApiTicketRadiologyModule;
exports.ApiTicketRadiologyModule = ApiTicketRadiologyModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_ticket_radiology_controller_1.ApiTicketRadiologyController],
        providers: [api_ticket_radiology_service_1.ApiTicketRadiologyService],
    })
], ApiTicketRadiologyModule);


/***/ }),
/* 477 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketRadiologyController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const dto_1 = __webpack_require__(195);
const permission_guard_1 = __webpack_require__(87);
const user_guard_1 = __webpack_require__(15);
const interceptor_1 = __webpack_require__(306);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_ticket_radiology_service_1 = __webpack_require__(478);
const request_1 = __webpack_require__(479);
let ApiTicketRadiologyController = class ApiTicketRadiologyController {
    constructor(apiTicketRadiologyService) {
        this.apiTicketRadiologyService = apiTicketRadiologyService;
    }
    async pagination({ oid }, query) {
        return await this.apiTicketRadiologyService.pagination(oid, query);
    }
    async detail({ oid }, { id }, query) {
        return await this.apiTicketRadiologyService.getOne(oid, id, query);
    }
    async createTicketRadiologyCompleted({ oid }, files, body) {
        return await this.apiTicketRadiologyService.createCompleted({
            oid,
            body,
            files,
        });
    }
    async updateResult({ oid }, files, { id }, body) {
        return await this.apiTicketRadiologyService.updateResult({
            oid,
            ticketRadiologyId: id,
            body,
            files,
        });
    }
    async cancelResult({ oid }, { id }) {
        return await this.apiTicketRadiologyService.cancelResult(oid, id);
    }
};
exports.ApiTicketRadiologyController = ApiTicketRadiologyController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.TicketRadiologyPaginationQuery !== "undefined" && request_1.TicketRadiologyPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketRadiologyController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _e : Object, typeof (_f = typeof request_1.TicketRadiologyGetOneQuery !== "undefined" && request_1.TicketRadiologyGetOneQuery) === "function" ? _f : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketRadiologyController.prototype, "detail", null);
__decorate([
    (0, common_1.Post)('create-completed'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_RADIOLOGY_RESULT),
    (0, swagger_1.ApiConsumes)('multipart/form-data'),
    (0, common_1.UseInterceptors)((0, interceptor_1.FastifyFilesInterceptor)('files', 10, {})),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.UploadedFiles)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_g = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _g : Object, Array, typeof (_h = typeof request_1.TicketRadiologyCreateBody !== "undefined" && request_1.TicketRadiologyCreateBody) === "function" ? _h : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketRadiologyController.prototype, "createTicketRadiologyCompleted", null);
__decorate([
    (0, common_1.Post)(':id/update-result'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_RADIOLOGY_RESULT),
    (0, swagger_1.ApiConsumes)('multipart/form-data'),
    (0, common_1.UseInterceptors)((0, interceptor_1.FastifyFilesInterceptor)('files', 10, {})),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.UploadedFiles)()),
    __param(2, (0, common_1.Param)()),
    __param(3, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_j = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _j : Object, Array, typeof (_k = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _k : Object, typeof (_l = typeof request_1.TicketRadiologyUpdateBody !== "undefined" && request_1.TicketRadiologyUpdateBody) === "function" ? _l : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketRadiologyController.prototype, "updateResult", null);
__decorate([
    (0, common_1.Post)(':id/cancel-result'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.TICKET_LABORATORY_RESULT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_m = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _m : Object, typeof (_o = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _o : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketRadiologyController.prototype, "cancelResult", null);
exports.ApiTicketRadiologyController = ApiTicketRadiologyController = __decorate([
    (0, swagger_1.ApiTags)('TicketRadiology'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('ticket-radiology'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_ticket_radiology_service_1.ApiTicketRadiologyService !== "undefined" && api_ticket_radiology_service_1.ApiTicketRadiologyService) === "function" ? _a : Object])
], ApiTicketRadiologyController);


/***/ }),
/* 478 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var _a, _b, _c, _d, _e, _f, _g;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketRadiologyService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const object_helper_1 = __webpack_require__(85);
const ticket_radiology_entity_1 = __webpack_require__(62);
const image_repository_1 = __webpack_require__(103);
const radiology_repository_1 = __webpack_require__(115);
const ticket_radiology_repository_1 = __webpack_require__(131);
const ticket_repository_1 = __webpack_require__(138);
const user_repository_1 = __webpack_require__(84);
const image_manager_service_1 = __webpack_require__(311);
const socket_emit_service_1 = __webpack_require__(204);
let ApiTicketRadiologyService = class ApiTicketRadiologyService {
    constructor(socketEmitService, imageManagerService, ticketRadiologyRepository, imageRepository, radiologyRepository, userRepository, ticketRepository) {
        this.socketEmitService = socketEmitService;
        this.imageManagerService = imageManagerService;
        this.ticketRadiologyRepository = ticketRadiologyRepository;
        this.imageRepository = imageRepository;
        this.radiologyRepository = radiologyRepository;
        this.userRepository = userRepository;
        this.ticketRepository = ticketRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, relation, sort } = query;
        const { imageList } = relation, relationEntity = __rest(relation, ["imageList"]);
        const { total, data } = await this.ticketRadiologyRepository.pagination({
            relation: relationEntity,
            page,
            limit,
            condition: {
                oid,
                customerId: filter === null || filter === void 0 ? void 0 : filter.customerId,
                radiologyId: filter === null || filter === void 0 ? void 0 : filter.radiologyId,
                ticketId: filter === null || filter === void 0 ? void 0 : filter.ticketId,
            },
            sort,
        });
        return {
            data,
            meta: { page, limit, total },
        };
    }
    async getOne(oid, id, query) {
        const _a = query.relation, { imageList } = _a, relationEntity = __rest(_a, ["imageList"]);
        const ticketRadiology = await this.ticketRadiologyRepository.findOne({
            relation: relationEntity,
            condition: { oid, id },
        });
        if (!ticketRadiology) {
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        }
        if (imageList) {
            ticketRadiology.imageList = [];
            const imageIds = JSON.parse(ticketRadiology.imageIds);
            let imageMap = {};
            if (imageIds.length > 0) {
                const imageList = await this.imageRepository.findManyByIds(imageIds);
                imageMap = (0, object_helper_1.arrayToKeyValue)(imageList, 'id');
            }
            imageIds.forEach((i) => {
                ticketRadiology.imageList.push(imageMap[i]);
            });
        }
        return { data: { ticketRadiology } };
    }
    async createCompleted(options) {
        const { oid, body, files } = options;
        const imageIdsUpdate = await this.imageManagerService.changeImageList({
            oid,
            customerId: body.customerId,
            files,
            filesPosition: Array.from({ length: files.length }, (_, i) => i),
            imageIdsKeep: [],
            imageIdsOld: [],
        });
        const ticketRadiology = await this.ticketRadiologyRepository.insertOneFullFieldAndReturnEntity(Object.assign(Object.assign({}, body), { oid, ticketId: body.ticketId, imageIds: JSON.stringify(imageIdsUpdate), status: ticket_radiology_entity_1.TicketRadiologyStatus.Completed, startedAt: body.startedAt }));
        if (!ticketRadiology)
            throw new exception_filter_1.BusinessException('error.Database.InsertFailed');
        const [radiology, imageList] = await Promise.all([
            this.radiologyRepository.findOneById(ticketRadiology.radiologyId),
            this.imageRepository.findMany({
                condition: {
                    id: { IN: JSON.parse(ticketRadiology.imageIds) },
                },
                sort: { id: 'ASC' },
            }),
        ]);
        ticketRadiology.radiology = radiology;
        ticketRadiology.imageList = imageList;
        const [ticket] = await this.ticketRepository.refreshRadiologyMoney({
            oid,
            ticketId: body.ticketId,
        });
        this.socketEmitService.ticketClinicUpdate(oid, { ticketBasic: ticket });
        this.socketEmitService.ticketClinicUpdateTicketRadiologyResult(oid, {
            ticketId: ticketRadiology.ticketId,
            ticketRadiology,
        });
        return { data: { ticketRadiologyId: ticketRadiology.id } };
    }
    async updateResult(options) {
        const { oid, body, files, ticketRadiologyId } = options;
        const { imageIdsKeep, filesPosition } = body, object = __rest(body, ["imageIdsKeep", "filesPosition"]);
        const oldTicketRadiology = await this.ticketRadiologyRepository.findOneBy({
            oid,
            id: ticketRadiologyId,
        });
        const imageIdsUpdate = await this.imageManagerService.changeImageList({
            oid,
            customerId: oldTicketRadiology.customerId,
            files,
            filesPosition,
            imageIdsKeep,
            imageIdsOld: JSON.parse(oldTicketRadiology.imageIds),
        });
        const [ticketRadiology] = await this.ticketRadiologyRepository.updateAndReturnEntity({ oid, id: ticketRadiologyId }, Object.assign(Object.assign({}, object), { imageIds: JSON.stringify(imageIdsUpdate), status: ticket_radiology_entity_1.TicketRadiologyStatus.Completed }));
        if (!ticketRadiology)
            throw new exception_filter_1.BusinessException('error.Database.UpdateFailed');
        ticketRadiology.imageList = [];
        const imageIds = JSON.parse(ticketRadiology.imageIds);
        const [radiology, imageList] = await Promise.all([
            this.radiologyRepository.findOneById(ticketRadiology.radiologyId),
            this.imageRepository.findManyByIds(imageIds),
        ]);
        const imageMap = (0, object_helper_1.arrayToKeyValue)(imageList, 'id');
        imageIds.forEach((i) => {
            ticketRadiology.imageList.push(imageMap[i]);
        });
        ticketRadiology.radiology = radiology;
        this.socketEmitService.ticketClinicUpdateTicketRadiologyResult(oid, {
            ticketId: ticketRadiology.ticketId,
            ticketRadiology,
        });
        return { data: { ticketRadiologyId: ticketRadiology.id } };
    }
    async cancelResult(oid, id) {
        const ticketRadiologyOrigin = await this.ticketRadiologyRepository.findOneBy({
            oid,
            id,
        });
        const imageIdsUpdate = await this.imageManagerService.changeImageList({
            oid,
            customerId: ticketRadiologyOrigin.customerId,
            files: [],
            filesPosition: [],
            imageIdsKeep: [],
            imageIdsOld: JSON.parse(ticketRadiologyOrigin.imageIds),
        });
        const [ticketRadiology] = await this.ticketRadiologyRepository.updateAndReturnEntity({ oid, id }, {
            startedAt: null,
            status: ticket_radiology_entity_1.TicketRadiologyStatus.Pending,
            result: '',
            description: '',
            imageIds: JSON.stringify(imageIdsUpdate),
        });
        ticketRadiology.imageList = [];
        this.socketEmitService.ticketClinicUpdateTicketRadiologyResult(oid, {
            ticketId: ticketRadiology.ticketId,
            ticketRadiology,
        });
        return { data: { ticketId: ticketRadiology.ticketId } };
    }
};
exports.ApiTicketRadiologyService = ApiTicketRadiologyService;
exports.ApiTicketRadiologyService = ApiTicketRadiologyService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _a : Object, typeof (_b = typeof image_manager_service_1.ImageManagerService !== "undefined" && image_manager_service_1.ImageManagerService) === "function" ? _b : Object, typeof (_c = typeof ticket_radiology_repository_1.TicketRadiologyRepository !== "undefined" && ticket_radiology_repository_1.TicketRadiologyRepository) === "function" ? _c : Object, typeof (_d = typeof image_repository_1.ImageRepository !== "undefined" && image_repository_1.ImageRepository) === "function" ? _d : Object, typeof (_e = typeof radiology_repository_1.RadiologyRepository !== "undefined" && radiology_repository_1.RadiologyRepository) === "function" ? _e : Object, typeof (_f = typeof user_repository_1.UserRepository !== "undefined" && user_repository_1.UserRepository) === "function" ? _f : Object, typeof (_g = typeof ticket_repository_1.TicketRepository !== "undefined" && ticket_repository_1.TicketRepository) === "function" ? _g : Object])
], ApiTicketRadiologyService);


/***/ }),
/* 479 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(480), exports);
__exportStar(__webpack_require__(481), exports);
__exportStar(__webpack_require__(482), exports);


/***/ }),
/* 480 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketRadiologyGetOneQuery = exports.TicketRadiologyGetManyQuery = exports.TicketRadiologyPaginationQuery = exports.TicketRadiologyGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const ticket_radiology_options_request_1 = __webpack_require__(481);
class TicketRadiologyGetQuery {
}
exports.TicketRadiologyGetQuery = TicketRadiologyGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(ticket_radiology_options_request_1.TicketRadiologyRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof ticket_radiology_options_request_1.TicketRadiologyRelationQuery !== "undefined" && ticket_radiology_options_request_1.TicketRadiologyRelationQuery) === "function" ? _a : Object)
], TicketRadiologyGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            customerId: 1,
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(ticket_radiology_options_request_1.TicketRadiologyFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof ticket_radiology_options_request_1.TicketRadiologyFilterQuery !== "undefined" && ticket_radiology_options_request_1.TicketRadiologyFilterQuery) === "function" ? _b : Object)
], TicketRadiologyGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            id: 'ASC',
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(ticket_radiology_options_request_1.TicketRadiologySortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof ticket_radiology_options_request_1.TicketRadiologySortQuery !== "undefined" && ticket_radiology_options_request_1.TicketRadiologySortQuery) === "function" ? _c : Object)
], TicketRadiologyGetQuery.prototype, "sort", void 0);
class TicketRadiologyPaginationQuery extends (0, swagger_1.IntersectionType)(TicketRadiologyGetQuery, query_1.PaginationQuery) {
}
exports.TicketRadiologyPaginationQuery = TicketRadiologyPaginationQuery;
class TicketRadiologyGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(TicketRadiologyGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.TicketRadiologyGetManyQuery = TicketRadiologyGetManyQuery;
class TicketRadiologyGetOneQuery extends (0, swagger_1.PickType)(TicketRadiologyGetQuery, ['relation']) {
}
exports.TicketRadiologyGetOneQuery = TicketRadiologyGetOneQuery;


/***/ }),
/* 481 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketRadiologySortQuery = exports.TicketRadiologyFilterQuery = exports.TicketRadiologyRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
class TicketRadiologyRelationQuery {
}
exports.TicketRadiologyRelationQuery = TicketRadiologyRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], TicketRadiologyRelationQuery.prototype, "radiology", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketRadiologyRelationQuery.prototype, "customer", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketRadiologyRelationQuery.prototype, "ticketUserList", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketRadiologyRelationQuery.prototype, "ticket", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketRadiologyRelationQuery.prototype, "imageList", void 0);
class TicketRadiologyFilterQuery {
}
exports.TicketRadiologyFilterQuery = TicketRadiologyFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketRadiologyFilterQuery.prototype, "radiologyId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketRadiologyFilterQuery.prototype, "customerId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketRadiologyFilterQuery.prototype, "ticketId", void 0);
class TicketRadiologySortQuery extends query_1.SortQuery {
}
exports.TicketRadiologySortQuery = TicketRadiologySortQuery;


/***/ }),
/* 482 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TicketRadiologyUpdateBody = exports.TicketRadiologyCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const DOMPurify = __webpack_require__(388);
const file_1 = __webpack_require__(305);
const typescript_helper_1 = __webpack_require__(174);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
class TicketRadiologyCreateBody extends file_1.MultipleFileUpload {
}
exports.TicketRadiologyCreateBody = TicketRadiologyCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value != null ? Number(value) : value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketRadiologyCreateBody.prototype, "ticketId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value != null ? Number(value) : value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketRadiologyCreateBody.prototype, "customerId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 56 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value != null ? Number(value) : value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketRadiologyCreateBody.prototype, "radiologyId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 25000 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value != null ? Number(value) : value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketRadiologyCreateBody.prototype, "expectedPrice", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value != null ? Math.round(Number(value)) : value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketRadiologyCreateBody.prototype, "discountMoney", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value != null ? Number(value) : value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.Max)(9999.99),
    (0, class_validator_1.Min)(-9999.99),
    __metadata("design:type", Number)
], TicketRadiologyCreateBody.prototype, "discountPercent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ enum: (0, typescript_helper_1.valuesEnum)(variable_1.DiscountType), example: variable_1.DiscountType.VND }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_custom_1.IsEnumValue)(variable_1.DiscountType),
    __metadata("design:type", typeof (_a = typeof variable_1.DiscountType !== "undefined" && variable_1.DiscountType) === "function" ? _a : Object)
], TicketRadiologyCreateBody.prototype, "discountType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 22500 }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value != null ? Math.round(Number(value)) : value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketRadiologyCreateBody.prototype, "actualPrice", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Mổ viêm ruột thừa 2002' }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => DOMPurify.sanitize(value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], TicketRadiologyCreateBody.prototype, "description", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Trước khi vào khám 5 ngày, bla...bla...' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], TicketRadiologyCreateBody.prototype, "result", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: Date.now() }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value != null ? Number(value) : value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], TicketRadiologyCreateBody.prototype, "startedAt", void 0);
class TicketRadiologyUpdateBody extends (0, swagger_1.PickType)(TicketRadiologyCreateBody, ['files', 'description', 'result', 'startedAt']) {
}
exports.TicketRadiologyUpdateBody = TicketRadiologyUpdateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: [3, 4] }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        return value != null ? JSON.parse(value) : value;
    }),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.IsNumber)({}, { each: true }),
    __metadata("design:type", Array)
], TicketRadiologyUpdateBody.prototype, "imageIdsKeep", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: [3, 4] }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => (value != null ? JSON.parse(value) : value)),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.IsNumber)({}, { each: true }),
    __metadata("design:type", Array)
], TicketRadiologyUpdateBody.prototype, "filesPosition", void 0);


/***/ }),
/* 483 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketModule = void 0;
const common_1 = __webpack_require__(3);
const api_ticket_controller_1 = __webpack_require__(484);
const api_ticket_service_1 = __webpack_require__(485);
let ApiTicketModule = class ApiTicketModule {
};
exports.ApiTicketModule = ApiTicketModule;
exports.ApiTicketModule = ApiTicketModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_ticket_controller_1.ApiTicketController],
        providers: [api_ticket_service_1.ApiTicketService],
    })
], ApiTicketModule);


/***/ }),
/* 484 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const dto_1 = __webpack_require__(195);
const permission_guard_1 = __webpack_require__(87);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_ticket_service_1 = __webpack_require__(485);
const request_1 = __webpack_require__(425);
let ApiTicketController = class ApiTicketController {
    constructor(apiTicketService) {
        this.apiTicketService = apiTicketService;
    }
    async pagination({ oid }, query) {
        return await this.apiTicketService.pagination(oid, query);
    }
    async list({ oid }, query) {
        return await this.apiTicketService.getMany(oid, query);
    }
    async detail({ oid }, { id }, query) {
        return await this.apiTicketService.getOne(oid, id, query);
    }
};
exports.ApiTicketController = ApiTicketController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, permission_guard_1.HasPermissionOr)(permission_entity_1.PermissionId.TICKET_ORDER_READ, permission_entity_1.PermissionId.TICKET_CLINIC_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.TicketPaginationQuery !== "undefined" && request_1.TicketPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, permission_guard_1.HasPermissionOr)(permission_entity_1.PermissionId.TICKET_ORDER_READ, permission_entity_1.PermissionId.TICKET_CLINIC_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.TicketGetManyQuery !== "undefined" && request_1.TicketGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, permission_guard_1.HasPermissionOr)(permission_entity_1.PermissionId.TICKET_ORDER_READ, permission_entity_1.PermissionId.TICKET_CLINIC_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof dto_1.IdParam !== "undefined" && dto_1.IdParam) === "function" ? _g : Object, typeof (_h = typeof request_1.TicketGetOneQuery !== "undefined" && request_1.TicketGetOneQuery) === "function" ? _h : Object]),
    __metadata("design:returntype", Promise)
], ApiTicketController.prototype, "detail", null);
exports.ApiTicketController = ApiTicketController = __decorate([
    (0, swagger_1.ApiTags)('Ticket'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('ticket'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_ticket_service_1.ApiTicketService !== "undefined" && api_ticket_service_1.ApiTicketService) === "function" ? _a : Object])
], ApiTicketController);


/***/ }),
/* 485 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTicketService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const object_helper_1 = __webpack_require__(85);
const image_repository_1 = __webpack_require__(103);
const ticket_repository_1 = __webpack_require__(138);
let ApiTicketService = class ApiTicketService {
    constructor(ticketRepository, imageRepository) {
        this.ticketRepository = ticketRepository;
        this.imageRepository = imageRepository;
    }
    async pagination(oid, query) {
        const { page, limit, sort, relation, filter } = query;
        const { data, total } = await this.ticketRepository.pagination({
            page,
            limit,
            relation: {
                customer: relation === null || relation === void 0 ? void 0 : relation.customer,
                ticketUserList: relation === null || relation === void 0 ? void 0 : relation.ticketUserList,
                ticketAttributeList: relation === null || relation === void 0 ? void 0 : relation.ticketAttributeList,
                ticketProductList: relation === null || relation === void 0 ? void 0 : relation.ticketProductList,
                ticketProcedureList: relation === null || relation === void 0 ? void 0 : relation.ticketProcedureList,
            },
            condition: {
                oid,
                ticketStatus: filter === null || filter === void 0 ? void 0 : filter.ticketStatus,
                ticketType: filter.ticketType,
                customerId: filter === null || filter === void 0 ? void 0 : filter.customerId,
                registeredAt: filter === null || filter === void 0 ? void 0 : filter.registeredAt,
                startedAt: filter === null || filter === void 0 ? void 0 : filter.startedAt,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            sort,
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getMany(oid, query) {
        const { relation, limit, sort, filter } = query;
        const data = await this.ticketRepository.findMany({
            condition: {
                oid,
                ticketStatus: filter === null || filter === void 0 ? void 0 : filter.ticketStatus,
                ticketType: filter === null || filter === void 0 ? void 0 : filter.ticketType,
                customerId: filter === null || filter === void 0 ? void 0 : filter.customerId,
                registeredAt: filter === null || filter === void 0 ? void 0 : filter.registeredAt,
                startedAt: filter === null || filter === void 0 ? void 0 : filter.startedAt,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            relation: { customer: relation === null || relation === void 0 ? void 0 : relation.customer },
            limit,
            sort,
        });
        return { data };
    }
    async getOne(oid, id, { relation }) {
        const ticket = await this.ticketRepository.queryOne({
            condition: { oid, id },
            relation: {
                customer: !!(relation === null || relation === void 0 ? void 0 : relation.customer),
                customerPaymentList: !!(relation === null || relation === void 0 ? void 0 : relation.customerPaymentList),
                ticketSurchargeList: !!(relation === null || relation === void 0 ? void 0 : relation.ticketSurchargeList),
                ticketExpenseList: !!(relation === null || relation === void 0 ? void 0 : relation.ticketExpenseList),
                ticketAttributeList: !!(relation === null || relation === void 0 ? void 0 : relation.ticketAttributeList),
                toAppointment: !!(relation === null || relation === void 0 ? void 0 : relation.toAppointment),
                ticketProductList: relation === null || relation === void 0 ? void 0 : relation.ticketProductList,
                ticketProductConsumableList: relation === null || relation === void 0 ? void 0 : relation.ticketProductConsumableList,
                ticketProductPrescriptionList: relation === null || relation === void 0 ? void 0 : relation.ticketProductPrescriptionList,
                ticketProcedureList: relation === null || relation === void 0 ? void 0 : relation.ticketProcedureList,
                ticketLaboratoryList: relation === null || relation === void 0 ? void 0 : relation.ticketLaboratoryList,
                ticketRadiologyList: relation === null || relation === void 0 ? void 0 : relation.ticketRadiologyList,
                ticketUserList: relation === null || relation === void 0 ? void 0 : relation.ticketUserList,
            },
        });
        if (!ticket) {
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        }
        if (ticket.ticketRadiologyList || ticket.imageList) {
            ticket.ticketRadiologyList = ticket.ticketRadiologyList || [];
            ticket.imageList = [];
            const ticketImageIds = JSON.parse(ticket.imageIds || '[]');
            const ticketRadiologyImageIds = ticket.ticketRadiologyList
                .map((i) => JSON.parse(i.imageIds))
                .flat();
            const imageIds = [...ticketImageIds, ...ticketRadiologyImageIds];
            let imageMap = {};
            if (imageIds.length > 0) {
                const imageList = await this.imageRepository.findMany({
                    condition: { id: { IN: imageIds } },
                    sort: { id: 'ASC' },
                });
                imageMap = (0, object_helper_1.arrayToKeyValue)(imageList, 'id');
            }
            ticketImageIds.forEach((i) => ticket.imageList.push(imageMap[i]));
            ticket.ticketRadiologyList.forEach((ticketRadiology) => {
                const ticketDiagnosisImageIds = JSON.parse(ticketRadiology.imageIds);
                ticketRadiology.imageList = [];
                ticketDiagnosisImageIds.forEach((i) => {
                    ticketRadiology.imageList.push(imageMap[i]);
                });
            });
        }
        return { data: { ticket } };
    }
};
exports.ApiTicketService = ApiTicketService;
exports.ApiTicketService = ApiTicketService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof ticket_repository_1.TicketRepository !== "undefined" && ticket_repository_1.TicketRepository) === "function" ? _a : Object, typeof (_b = typeof image_repository_1.ImageRepository !== "undefined" && image_repository_1.ImageRepository) === "function" ? _b : Object])
], ApiTicketService);


/***/ }),
/* 486 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiUserModule = void 0;
const common_1 = __webpack_require__(3);
const api_user_controller_1 = __webpack_require__(487);
const api_user_service_1 = __webpack_require__(488);
let ApiUserModule = class ApiUserModule {
};
exports.ApiUserModule = ApiUserModule;
exports.ApiUserModule = ApiUserModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_user_controller_1.ApiUserController],
        providers: [api_user_service_1.ApiUserService],
    })
], ApiUserModule);


/***/ }),
/* 487 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiUserController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_user_service_1 = __webpack_require__(488);
const request_1 = __webpack_require__(489);
const device_logout_query_1 = __webpack_require__(493);
const new_password_body_1 = __webpack_require__(494);
let ApiUserController = class ApiUserController {
    constructor(apiUserService) {
        this.apiUserService = apiUserService;
    }
    pagination({ oid }, query) {
        return this.apiUserService.pagination({ oid, query });
    }
    list({ oid }, query) {
        return this.apiUserService.getMany(oid, query);
    }
    async detail({ oid }, { id }, query) {
        return await this.apiUserService.getOne(oid, id, query);
    }
    async createOne({ oid }, body) {
        return await this.apiUserService.createOne(oid, body);
    }
    async updateOne({ oid }, { id }, body) {
        return await this.apiUserService.updateOne(oid, +id, body);
    }
    async newPassword({ oid }, { id }, { password }) {
        return await this.apiUserService.newPassword(oid, +id, password);
    }
    async deleteOne({ oid }, { id }) {
        return await this.apiUserService.deleteOne(oid, id);
    }
    deviceLogout({ oid }, { id }, body) {
        return this.apiUserService.deviceLogout({
            oid,
            userId: +id,
            refreshExp: body.refreshExp,
        });
    }
};
exports.ApiUserController = ApiUserController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.USER_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.UserPaginationQuery !== "undefined" && request_1.UserPaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiUserController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.USER_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.UserGetManyQuery !== "undefined" && request_1.UserGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", void 0)
], ApiUserController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.USER_READ),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object, typeof (_h = typeof request_1.UserGetOneQuery !== "undefined" && request_1.UserGetOneQuery) === "function" ? _h : Object]),
    __metadata("design:returntype", Promise)
], ApiUserController.prototype, "detail", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.USER_CREATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_j = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _j : Object, typeof (_k = typeof request_1.UserCreateBody !== "undefined" && request_1.UserCreateBody) === "function" ? _k : Object]),
    __metadata("design:returntype", Promise)
], ApiUserController.prototype, "createOne", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.USER_UPDATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_l = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _l : Object, typeof (_m = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _m : Object, typeof (_o = typeof request_1.UserUpdateBody !== "undefined" && request_1.UserUpdateBody) === "function" ? _o : Object]),
    __metadata("design:returntype", Promise)
], ApiUserController.prototype, "updateOne", null);
__decorate([
    (0, common_1.Patch)('new-password/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.USER_UPDATE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_p = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _p : Object, typeof (_q = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _q : Object, typeof (_r = typeof new_password_body_1.NewPasswordBody !== "undefined" && new_password_body_1.NewPasswordBody) === "function" ? _r : Object]),
    __metadata("design:returntype", Promise)
], ApiUserController.prototype, "newPassword", null);
__decorate([
    (0, common_1.Delete)('delete/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.USER_DELETE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_s = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _s : Object, typeof (_t = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _t : Object]),
    __metadata("design:returntype", Promise)
], ApiUserController.prototype, "deleteOne", null);
__decorate([
    (0, common_1.Post)('device-logout/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.USER_DEVICE_LOGOUT),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_u = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _u : Object, typeof (_v = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _v : Object, typeof (_w = typeof device_logout_query_1.DeviceLogoutBody !== "undefined" && device_logout_query_1.DeviceLogoutBody) === "function" ? _w : Object]),
    __metadata("design:returntype", void 0)
], ApiUserController.prototype, "deviceLogout", null);
exports.ApiUserController = ApiUserController = __decorate([
    (0, swagger_1.ApiTags)('User'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('user'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_user_service_1.ApiUserService !== "undefined" && api_user_service_1.ApiUserService) === "function" ? _a : Object])
], ApiUserController);


/***/ }),
/* 488 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var _a, _b, _c, _d, _e, _f;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiUserService = void 0;
const common_1 = __webpack_require__(3);
const bcrypt = __webpack_require__(169);
const cache_data_service_1 = __webpack_require__(30);
const cache_token_service_1 = __webpack_require__(86);
const exception_filter_1 = __webpack_require__(9);
const string_helper_1 = __webpack_require__(98);
const device_1 = __webpack_require__(214);
const role_repository_1 = __webpack_require__(81);
const user_role_repository_1 = __webpack_require__(83);
const user_repository_1 = __webpack_require__(84);
const socket_emit_service_1 = __webpack_require__(204);
let ApiUserService = class ApiUserService {
    constructor(socketEmitService, userRepository, userRoleRepository, roleRepository, cacheTokenService, cacheDataService) {
        this.socketEmitService = socketEmitService;
        this.userRepository = userRepository;
        this.userRoleRepository = userRoleRepository;
        this.roleRepository = roleRepository;
        this.cacheTokenService = cacheTokenService;
        this.cacheDataService = cacheDataService;
    }
    async pagination(options) {
        const { oid, query } = options;
        const { page, limit, filter, sort, relation } = query;
        const { data, total } = await this.userRepository.pagination({
            page,
            limit,
            relation: {
                organization: !!relation.organization,
                userRoleList: relation.userRoleList ? ({ role: true }) : false,
            },
            condition: {
                oid,
                isAdmin: filter === null || filter === void 0 ? void 0 : filter.isAdmin,
                isActive: filter === null || filter === void 0 ? void 0 : filter.isActive,
                $OR: (filter === null || filter === void 0 ? void 0 : filter.searchText)
                    ? [{ username: { LIKE: filter.searchText } }, { phone: { LIKE: filter.searchText } }]
                    : undefined,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            sort,
        });
        for (let i = 0; i < data.length; i++) {
            const user = data[i];
            const tokenData = await this.cacheTokenService.getTokenList({
                oid,
                uid: user.id,
            });
            user.devices = tokenData.map((j) => {
                const device = new device_1.default();
                device.refreshExp = j.refreshExp;
                device.ip = j.ip;
                device.os = j.os;
                device.browser = j.browser;
                device.mobile = j.mobile;
                device.online =
                    (this.socketEmitService.connections[user.id] || []).some((k) => {
                        return k.refreshExp === j.refreshExp;
                    }) || j.online;
                return device;
            });
        }
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getMany(oid, query) {
        const { limit, filter } = query;
        const data = await this.userRepository.findMany({
            condition: {
                oid,
                isAdmin: filter === null || filter === void 0 ? void 0 : filter.isAdmin,
                isActive: filter === null || filter === void 0 ? void 0 : filter.isActive,
                $OR: (filter === null || filter === void 0 ? void 0 : filter.searchText)
                    ? [{ fullName: { LIKE: filter.searchText } }, { phone: { LIKE: filter.searchText } }]
                    : undefined,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            limit,
        });
        return { data };
    }
    async getOne(oid, id, query) {
        const user = await this.userRepository.findOne({
            relation: query.relation,
            condition: { id, oid },
        });
        if (!user)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        return { data: { user } };
    }
    async createOne(oid, body) {
        const { username, password, roleIdList } = body, other = __rest(body, ["username", "password", "roleIdList"]);
        const existUser = await this.userRepository.findOneBy({
            oid,
            username,
        });
        if (existUser) {
            throw new exception_filter_1.BusinessException('error.Register.ExistUsername');
        }
        const roleList = await this.roleRepository.findManyBy({
            oid,
            id: { IN: roleIdList },
        });
        if (roleList.length !== roleIdList.length) {
            throw new exception_filter_1.BusinessException('error.User.WrongRole');
        }
        const hashPassword = await bcrypt.hash(password, 5);
        const secret = (0, string_helper_1.encrypt)(password, username);
        const user = await this.userRepository.insertOneFullFieldAndReturnEntity(Object.assign(Object.assign({}, other), { oid,
            username, isAdmin: 0, secret,
            hashPassword }));
        user.userRoleList = await this.userRoleRepository.insertManyFullFieldAndReturnEntity(roleIdList.map((i) => ({
            oid,
            roleId: i,
            userId: user.id,
        })));
        this.cacheDataService.clearUserAndRole(user.oid);
        return { data: { user } };
    }
    async updateOne(oid, userId, body) {
        const { roleIdList } = body, other = __rest(body, ["roleIdList"]);
        const roleList = await this.roleRepository.findManyBy({
            oid,
            id: { IN: roleIdList },
        });
        if (roleList.length !== roleIdList.length) {
            throw new exception_filter_1.BusinessException('error.User.WrongRole');
        }
        const [user] = await this.userRepository.updateAndReturnEntity({ oid, id: userId }, other);
        if (!user) {
            throw new exception_filter_1.BusinessException('error.Database.UpdateFailed');
        }
        await this.userRoleRepository.delete({ oid, userId });
        user.userRoleList = await this.userRoleRepository.insertManyFullFieldAndReturnEntity(roleIdList.map((i) => ({
            oid,
            roleId: i,
            userId: user.id,
        })));
        this.cacheDataService.clearUserAndRole(user.oid);
        return { data: { user } };
    }
    async newPassword(oid, id, password) {
        const user = await this.userRepository.findOneBy({ oid, id });
        const hashPassword = await bcrypt.hash(password, 5);
        const secret = (0, string_helper_1.encrypt)(password, user.username);
        const affected = await this.userRepository.update({ oid, id }, { hashPassword, secret });
        if (affected === 0) {
            throw new exception_filter_1.BusinessException('error.Database.UpdateFailed');
        }
        return { data: true };
    }
    async deleteOne(oid, id) {
        const [user] = await this.userRepository.updateAndReturnEntity({ oid, id }, { deletedAt: Date.now() });
        if (!user) {
            throw new exception_filter_1.BusinessException('error.Database.DeleteFailed');
        }
        this.cacheDataService.clearUserAndRole(user.oid);
        return { data: { userId: id } };
    }
    async deviceLogout(options) {
        const { oid, userId, refreshExp } = options;
        const result = this.cacheTokenService.removeRefreshToken({
            oid,
            uid: userId,
            refreshExp,
        });
        return { data: true };
    }
};
exports.ApiUserService = ApiUserService;
exports.ApiUserService = ApiUserService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _a : Object, typeof (_b = typeof user_repository_1.UserRepository !== "undefined" && user_repository_1.UserRepository) === "function" ? _b : Object, typeof (_c = typeof user_role_repository_1.UserRoleRepository !== "undefined" && user_role_repository_1.UserRoleRepository) === "function" ? _c : Object, typeof (_d = typeof role_repository_1.RoleRepository !== "undefined" && role_repository_1.RoleRepository) === "function" ? _d : Object, typeof (_e = typeof cache_token_service_1.CacheTokenService !== "undefined" && cache_token_service_1.CacheTokenService) === "function" ? _e : Object, typeof (_f = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _f : Object])
], ApiUserService);


/***/ }),
/* 489 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(490), exports);
__exportStar(__webpack_require__(491), exports);
__exportStar(__webpack_require__(492), exports);


/***/ }),
/* 490 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UserGetOneQuery = exports.UserGetManyQuery = exports.UserPaginationQuery = exports.UserGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const user_options_request_1 = __webpack_require__(491);
class UserGetQuery {
}
exports.UserGetQuery = UserGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ userRoleList: true }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(user_options_request_1.UserRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof user_options_request_1.UserRelationQuery !== "undefined" && user_options_request_1.UserRelationQuery) === "function" ? _a : Object)
], UserGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            searchText: 'a',
            isActive: 1,
            isAdmin: 1,
            updatedAt: { LT: 1000 },
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(user_options_request_1.UserFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof user_options_request_1.UserFilterQuery !== "undefined" && user_options_request_1.UserFilterQuery) === "function" ? _b : Object)
], UserGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({
            phone: 'ASC',
            id: 'DESC',
            username: 'ASC',
        }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(user_options_request_1.UserSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof user_options_request_1.UserSortQuery !== "undefined" && user_options_request_1.UserSortQuery) === "function" ? _c : Object)
], UserGetQuery.prototype, "sort", void 0);
class UserPaginationQuery extends (0, swagger_1.IntersectionType)(UserGetQuery, query_1.PaginationQuery) {
}
exports.UserPaginationQuery = UserPaginationQuery;
class UserGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(UserGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.UserGetManyQuery = UserGetManyQuery;
class UserGetOneQuery extends (0, swagger_1.PickType)(UserGetQuery, ['relation']) {
}
exports.UserGetOneQuery = UserGetOneQuery;


/***/ }),
/* 491 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UserSortQuery = exports.UserFilterQuery = exports.UserRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const condition_timestamp_1 = __webpack_require__(201);
const query_1 = __webpack_require__(185);
class UserRelationQuery {
}
exports.UserRelationQuery = UserRelationQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], UserRelationQuery.prototype, "organization", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], UserRelationQuery.prototype, "userRoleList", void 0);
class UserFilterQuery {
}
exports.UserFilterQuery = UserFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], UserFilterQuery.prototype, "searchText", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], UserFilterQuery.prototype, "isAdmin", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], UserFilterQuery.prototype, "isActive", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => condition_timestamp_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof condition_timestamp_1.ConditionTimestamp !== "undefined" && condition_timestamp_1.ConditionTimestamp) === "function" ? _a : Object)
], UserFilterQuery.prototype, "updatedAt", void 0);
class UserSortQuery extends query_1.SortQuery {
}
exports.UserSortQuery = UserSortQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], UserSortQuery.prototype, "phone", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)(['ASC', 'DESC']),
    __metadata("design:type", String)
], UserSortQuery.prototype, "username", void 0);


/***/ }),
/* 492 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UserUpdateBody = exports.UserCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const class_validator_custom_1 = __webpack_require__(173);
const variable_1 = __webpack_require__(41);
class UserCreateBody {
}
exports.UserCreateBody = UserCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: '0376123456' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Validate)(class_validator_custom_1.IsPhone),
    __metadata("design:type", String)
], UserCreateBody.prototype, "phone", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'admin' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.MinLength)(4),
    __metadata("design:type", String)
], UserCreateBody.prototype, "username", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Abc@123456' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.MinLength)(6),
    __metadata("design:type", String)
], UserCreateBody.prototype, "password", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Phạm Hoàng Mai' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], UserCreateBody.prototype, "fullName", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1678890707005 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], UserCreateBody.prototype, "birthday", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ enum: [0, 1], example: variable_1.EGender.Female }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", typeof (_a = typeof variable_1.EGender !== "undefined" && variable_1.EGender) === "function" ? _a : Object)
], UserCreateBody.prototype, "gender", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ example: 1 }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsIn)([0, 1]),
    __metadata("design:type", Number)
], UserCreateBody.prototype, "isActive", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: [2, 3, 4] }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsArray)(),
    __metadata("design:type", Array)
], UserCreateBody.prototype, "roleIdList", void 0);
class UserUpdateBody extends (0, swagger_1.OmitType)(UserCreateBody, ['username', 'password']) {
}
exports.UserUpdateBody = UserUpdateBody;


/***/ }),
/* 493 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeviceLogoutBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class DeviceLogoutBody {
}
exports.DeviceLogoutBody = DeviceLogoutBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: Date.now() }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], DeviceLogoutBody.prototype, "refreshExp", void 0);


/***/ }),
/* 494 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NewPasswordBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class NewPasswordBody {
}
exports.NewPasswordBody = NewPasswordBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Abc@123456' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.MinLength)(6),
    __metadata("design:type", String)
], NewPasswordBody.prototype, "password", void 0);


/***/ }),
/* 495 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiWarehouseModule = void 0;
const common_1 = __webpack_require__(3);
const api_warehouse_controller_1 = __webpack_require__(496);
const api_warehouse_service_1 = __webpack_require__(497);
let ApiWarehouseModule = class ApiWarehouseModule {
};
exports.ApiWarehouseModule = ApiWarehouseModule;
exports.ApiWarehouseModule = ApiWarehouseModule = __decorate([
    (0, common_1.Module)({
        imports: [],
        controllers: [api_warehouse_controller_1.ApiWarehouseController],
        providers: [api_warehouse_service_1.ApiWarehouseService],
    })
], ApiWarehouseModule);


/***/ }),
/* 496 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiWarehouseController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const param_1 = __webpack_require__(202);
const permission_guard_1 = __webpack_require__(87);
const user_guard_1 = __webpack_require__(15);
const external_request_1 = __webpack_require__(167);
const permission_entity_1 = __webpack_require__(73);
const api_warehouse_service_1 = __webpack_require__(497);
const request_1 = __webpack_require__(498);
let ApiWarehouseController = class ApiWarehouseController {
    constructor(apiWarehouseService) {
        this.apiWarehouseService = apiWarehouseService;
    }
    pagination({ oid }, query) {
        return this.apiWarehouseService.pagination(oid, query);
    }
    list({ oid }, query) {
        return this.apiWarehouseService.getMany(oid, query);
    }
    findOne({ oid }, { id }) {
        return this.apiWarehouseService.getOne(oid, id);
    }
    async createOne({ oid }, body) {
        return await this.apiWarehouseService.createOne(oid, body);
    }
    async updateOne({ oid }, { id }, body) {
        return await this.apiWarehouseService.updateOne(oid, id, body);
    }
    async deleteOne({ oid }, { id }) {
        return await this.apiWarehouseService.deleteOne(oid, id);
    }
};
exports.ApiWarehouseController = ApiWarehouseController;
__decorate([
    (0, common_1.Get)('pagination'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object, typeof (_c = typeof request_1.WarehousePaginationQuery !== "undefined" && request_1.WarehousePaginationQuery) === "function" ? _c : Object]),
    __metadata("design:returntype", void 0)
], ApiWarehouseController.prototype, "pagination", null);
__decorate([
    (0, common_1.Get)('list'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _d : Object, typeof (_e = typeof request_1.WarehouseGetManyQuery !== "undefined" && request_1.WarehouseGetManyQuery) === "function" ? _e : Object]),
    __metadata("design:returntype", void 0)
], ApiWarehouseController.prototype, "list", null);
__decorate([
    (0, common_1.Get)('detail/:id'),
    (0, user_guard_1.IsUser)(),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_f = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _f : Object, typeof (_g = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _g : Object]),
    __metadata("design:returntype", void 0)
], ApiWarehouseController.prototype, "findOne", null);
__decorate([
    (0, common_1.Post)('create'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_WAREHOUSE),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_h = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _h : Object, typeof (_j = typeof request_1.WarehouseCreateBody !== "undefined" && request_1.WarehouseCreateBody) === "function" ? _j : Object]),
    __metadata("design:returntype", Promise)
], ApiWarehouseController.prototype, "createOne", null);
__decorate([
    (0, common_1.Patch)('update/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_WAREHOUSE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __param(2, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_k = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _k : Object, typeof (_l = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _l : Object, typeof (_m = typeof request_1.WarehouseUpdateBody !== "undefined" && request_1.WarehouseUpdateBody) === "function" ? _m : Object]),
    __metadata("design:returntype", Promise)
], ApiWarehouseController.prototype, "updateOne", null);
__decorate([
    (0, common_1.Delete)('delete/:id'),
    (0, permission_guard_1.HasPermission)(permission_entity_1.PermissionId.MASTER_DATA_WAREHOUSE),
    (0, swagger_1.ApiParam)({ name: 'id', example: 1 }),
    __param(0, (0, external_request_1.External)()),
    __param(1, (0, common_1.Param)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_o = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _o : Object, typeof (_p = typeof param_1.IdParam !== "undefined" && param_1.IdParam) === "function" ? _p : Object]),
    __metadata("design:returntype", Promise)
], ApiWarehouseController.prototype, "deleteOne", null);
exports.ApiWarehouseController = ApiWarehouseController = __decorate([
    (0, swagger_1.ApiTags)('Warehouse'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    (0, common_1.Controller)('warehouse'),
    __metadata("design:paramtypes", [typeof (_a = typeof api_warehouse_service_1.ApiWarehouseService !== "undefined" && api_warehouse_service_1.ApiWarehouseService) === "function" ? _a : Object])
], ApiWarehouseController);


/***/ }),
/* 497 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiWarehouseService = void 0;
const common_1 = __webpack_require__(3);
const exception_filter_1 = __webpack_require__(9);
const warehouse_repository_1 = __webpack_require__(153);
let ApiWarehouseService = class ApiWarehouseService {
    constructor(warehouseRepository) {
        this.warehouseRepository = warehouseRepository;
    }
    async pagination(oid, query) {
        const { page, limit, filter, sort, relation } = query;
        const { data, total } = await this.warehouseRepository.pagination({
            page,
            limit,
            relation,
            condition: {
                oid,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            sort,
        });
        return {
            data,
            meta: { total, page, limit },
        };
    }
    async getMany(oid, query) {
        const { limit, filter, relation } = query;
        const data = await this.warehouseRepository.findMany({
            relation,
            condition: {
                oid,
                updatedAt: filter === null || filter === void 0 ? void 0 : filter.updatedAt,
            },
            limit,
        });
        return { data };
    }
    async getOne(oid, id) {
        const data = await this.warehouseRepository.findOneBy({ oid, id });
        if (!data)
            throw new exception_filter_1.BusinessException('error.Database.NotFound');
        return { data };
    }
    async createOne(oid, body) {
        const id = await this.warehouseRepository.insertOne(Object.assign({ oid }, body));
        const data = await this.warehouseRepository.findOneById(id);
        return { data };
    }
    async updateOne(oid, id, body) {
        const affected = await this.warehouseRepository.update({ id, oid }, body);
        const data = await this.warehouseRepository.findOneBy({ oid, id });
        return { data };
    }
    async deleteOne(oid, id) {
        const affected = await this.warehouseRepository.update({ oid, id }, { deletedAt: Date.now() });
        if (affected === 0) {
            throw new exception_filter_1.BusinessException('error.Database.DeleteFailed');
        }
        const data = await this.warehouseRepository.findOneById(id);
        return { data };
    }
};
exports.ApiWarehouseService = ApiWarehouseService;
exports.ApiWarehouseService = ApiWarehouseService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof warehouse_repository_1.WarehouseRepository !== "undefined" && warehouse_repository_1.WarehouseRepository) === "function" ? _a : Object])
], ApiWarehouseService);


/***/ }),
/* 498 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(499), exports);
__exportStar(__webpack_require__(500), exports);
__exportStar(__webpack_require__(501), exports);


/***/ }),
/* 499 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WarehouseGetOneQuery = exports.WarehouseGetManyQuery = exports.WarehousePaginationQuery = exports.WarehouseGetQuery = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const query_1 = __webpack_require__(185);
const warehouse_options_request_1 = __webpack_require__(500);
class WarehouseGetQuery {
}
exports.WarehouseGetQuery = WarehouseGetQuery;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: String, example: JSON.stringify({}) }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(warehouse_options_request_1.WarehouseRelationQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof warehouse_options_request_1.WarehouseRelationQuery !== "undefined" && warehouse_options_request_1.WarehouseRelationQuery) === "function" ? _a : Object)
], WarehouseGetQuery.prototype, "relation", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ updatedAt: { GT: Date.now() } }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(warehouse_options_request_1.WarehouseFilterQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_b = typeof warehouse_options_request_1.WarehouseFilterQuery !== "undefined" && warehouse_options_request_1.WarehouseFilterQuery) === "function" ? _b : Object)
], WarehouseGetQuery.prototype, "filter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: String,
        example: JSON.stringify({ id: 'ASC' }),
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => {
        try {
            if (!value)
                return undefined;
            const plain = JSON.parse(value);
            return (0, class_transformer_1.plainToInstance)(warehouse_options_request_1.WarehouseSortQuery, plain, {
                exposeUnsetFields: false,
                excludeExtraneousValues: false,
            });
        }
        catch (error) {
            return error.message;
        }
    }),
    (0, class_validator_1.IsObject)({ message: ({ value }) => value }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_c = typeof warehouse_options_request_1.WarehouseSortQuery !== "undefined" && warehouse_options_request_1.WarehouseSortQuery) === "function" ? _c : Object)
], WarehouseGetQuery.prototype, "sort", void 0);
class WarehousePaginationQuery extends (0, swagger_1.IntersectionType)(WarehouseGetQuery, query_1.PaginationQuery) {
}
exports.WarehousePaginationQuery = WarehousePaginationQuery;
class WarehouseGetManyQuery extends (0, swagger_1.IntersectionType)((0, swagger_1.PickType)(WarehouseGetQuery, ['filter', 'relation', 'sort']), query_1.LimitQuery) {
}
exports.WarehouseGetManyQuery = WarehouseGetManyQuery;
class WarehouseGetOneQuery extends (0, swagger_1.PickType)(WarehouseGetQuery, ['relation']) {
}
exports.WarehouseGetOneQuery = WarehouseGetOneQuery;


/***/ }),
/* 500 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WarehouseSortQuery = exports.WarehouseFilterQuery = exports.WarehouseRelationQuery = void 0;
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
const condition_timestamp_1 = __webpack_require__(201);
const query_1 = __webpack_require__(185);
class WarehouseRelationQuery {
}
exports.WarehouseRelationQuery = WarehouseRelationQuery;
class WarehouseFilterQuery {
}
exports.WarehouseFilterQuery = WarehouseFilterQuery;
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => condition_timestamp_1.ConditionTimestamp),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", typeof (_a = typeof condition_timestamp_1.ConditionTimestamp !== "undefined" && condition_timestamp_1.ConditionTimestamp) === "function" ? _a : Object)
], WarehouseFilterQuery.prototype, "updatedAt", void 0);
class WarehouseSortQuery extends query_1.SortQuery {
}
exports.WarehouseSortQuery = WarehouseSortQuery;


/***/ }),
/* 501 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WarehouseUpdateBody = exports.WarehouseCreateBody = void 0;
const swagger_1 = __webpack_require__(6);
const class_transformer_1 = __webpack_require__(32);
const class_validator_1 = __webpack_require__(172);
class WarehouseCreateBody {
}
exports.WarehouseCreateBody = WarehouseCreateBody;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Ngô Nhật Dương' }),
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsDefined)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], WarehouseCreateBody.prototype, "name", void 0);
class WarehouseUpdateBody extends (0, swagger_1.PartialType)(WarehouseCreateBody) {
}
exports.WarehouseUpdateBody = WarehouseUpdateBody;


/***/ }),
/* 502 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AppController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const app_service_1 = __webpack_require__(503);
let AppController = class AppController {
    constructor(appService) {
        this.appService = appService;
    }
    getHello(req) {
        return this.appService.getHello();
    }
};
exports.AppController = AppController;
__decorate([
    (0, common_1.Get)(),
    __param(0, (0, common_1.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", String)
], AppController.prototype, "getHello", null);
exports.AppController = AppController = __decorate([
    (0, swagger_1.ApiTags)('Home'),
    (0, common_1.Controller)(),
    __metadata("design:paramtypes", [typeof (_a = typeof app_service_1.AppService !== "undefined" && app_service_1.AppService) === "function" ? _a : Object])
], AppController);


/***/ }),
/* 503 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var AppService_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AppService = void 0;
const common_1 = __webpack_require__(3);
let AppService = AppService_1 = class AppService {
    constructor() {
        this.logger = new common_1.Logger(AppService_1.name);
    }
    async onModuleInit() {
    }
    getHello() {
        return 'MEA-NestJS: Hello World!';
    }
};
exports.AppService = AppService;
exports.AppService = AppService = AppService_1 = __decorate([
    (0, common_1.Injectable)()
], AppService);


/***/ }),
/* 504 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HealthModule = void 0;
const axios_1 = __webpack_require__(505);
const common_1 = __webpack_require__(3);
const terminus_1 = __webpack_require__(506);
const health_controller_1 = __webpack_require__(507);
let HealthModule = class HealthModule {
};
exports.HealthModule = HealthModule;
exports.HealthModule = HealthModule = __decorate([
    (0, common_1.Module)({
        imports: [terminus_1.TerminusModule.forRoot(), axios_1.HttpModule],
        controllers: [health_controller_1.HealthController],
    })
], HealthModule);


/***/ }),
/* 505 */
/***/ ((module) => {

module.exports = require("@nestjs/axios");

/***/ }),
/* 506 */
/***/ ((module) => {

module.exports = require("@nestjs/terminus");

/***/ }),
/* 507 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HealthController = void 0;
const common_1 = __webpack_require__(3);
const schedule_1 = __webpack_require__(508);
const swagger_1 = __webpack_require__(6);
const terminus_1 = __webpack_require__(506);
let HealthController = class HealthController {
    constructor(health, http, db, disk, memory) {
        this.health = health;
        this.http = http;
        this.db = db;
        this.disk = disk;
        this.memory = memory;
    }
    check() {
        const pathStorage = process.platform === 'win32' ? 'C:\\' : '/';
        const thresholdPercent = process.platform === 'win32' ? 0.99 : 0.5;
        return this.health.check([
            () => this.db.pingCheck('database'),
        ]);
    }
};
exports.HealthController = HealthController;
__decorate([
    (0, common_1.Get)(),
    (0, terminus_1.HealthCheck)(),
    (0, schedule_1.Cron)(schedule_1.CronExpression.EVERY_MINUTE),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], HealthController.prototype, "check", null);
exports.HealthController = HealthController = __decorate([
    (0, swagger_1.ApiTags)('Health'),
    (0, common_1.Controller)('health'),
    __metadata("design:paramtypes", [typeof (_a = typeof terminus_1.HealthCheckService !== "undefined" && terminus_1.HealthCheckService) === "function" ? _a : Object, typeof (_b = typeof terminus_1.HttpHealthIndicator !== "undefined" && terminus_1.HttpHealthIndicator) === "function" ? _b : Object, typeof (_c = typeof terminus_1.TypeOrmHealthIndicator !== "undefined" && terminus_1.TypeOrmHealthIndicator) === "function" ? _c : Object, typeof (_d = typeof terminus_1.DiskHealthIndicator !== "undefined" && terminus_1.DiskHealthIndicator) === "function" ? _d : Object, typeof (_e = typeof terminus_1.MemoryHealthIndicator !== "undefined" && terminus_1.MemoryHealthIndicator) === "function" ? _e : Object])
], HealthController);


/***/ }),
/* 508 */
/***/ ((module) => {

module.exports = require("@nestjs/schedule");

/***/ }),
/* 509 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ImageManagerModule = void 0;
const common_1 = __webpack_require__(3);
const google_driver_module_1 = __webpack_require__(156);
const image_manager_service_1 = __webpack_require__(311);
let ImageManagerModule = class ImageManagerModule {
};
exports.ImageManagerModule = ImageManagerModule;
exports.ImageManagerModule = ImageManagerModule = __decorate([
    (0, common_1.Global)(),
    (0, common_1.Module)({
        imports: [google_driver_module_1.GoogleDriverModule],
        providers: [image_manager_service_1.ImageManagerService],
        exports: [image_manager_service_1.ImageManagerService],
    })
], ImageManagerModule);


/***/ }),
/* 510 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EventListenerModule = void 0;
const common_1 = __webpack_require__(3);
const event_emitter_1 = __webpack_require__(511);
const visit_event_emit_1 = __webpack_require__(512);
const visit_event_listener_1 = __webpack_require__(514);
let EventListenerModule = class EventListenerModule {
};
exports.EventListenerModule = EventListenerModule;
exports.EventListenerModule = EventListenerModule = __decorate([
    (0, common_1.Global)(),
    (0, common_1.Module)({
        imports: [event_emitter_1.EventEmitterModule.forRoot()],
        controllers: [],
        providers: [visit_event_emit_1.VisitEventEmit, visit_event_listener_1.VisitEventListener],
        exports: [visit_event_emit_1.VisitEventEmit],
    })
], EventListenerModule);


/***/ }),
/* 511 */
/***/ ((module) => {

module.exports = require("@nestjs/event-emitter");

/***/ }),
/* 512 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VisitEventEmit = void 0;
const common_1 = __webpack_require__(3);
const event_emitter_1 = __webpack_require__(511);
const visit_event_constants_1 = __webpack_require__(513);
let VisitEventEmit = class VisitEventEmit {
    constructor(eventEmitter) {
        this.eventEmitter = eventEmitter;
    }
    async emitSendProductList(payload) {
        this.eventEmitter.emit(visit_event_constants_1.VISIT_EVENT.SEND_VISIT_PRODUCT_LIST, payload);
    }
    async emitRefundProductList(payload) {
        this.eventEmitter.emit(visit_event_constants_1.VISIT_EVENT.REFUND_VISIT_PRODUCT_LIST, payload);
    }
};
exports.VisitEventEmit = VisitEventEmit;
exports.VisitEventEmit = VisitEventEmit = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof event_emitter_1.EventEmitter2 !== "undefined" && event_emitter_1.EventEmitter2) === "function" ? _a : Object])
], VisitEventEmit);


/***/ }),
/* 513 */
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VISIT_EVENT = void 0;
exports.VISIT_EVENT = {
    SEND_VISIT_PRODUCT_LIST: 'SEND_VISIT_PRODUCT_LIST',
    REFUND_VISIT_PRODUCT_LIST: 'REFUND_VISIT_PRODUCT_LIST',
};


/***/ }),
/* 514 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var VisitEventListener_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VisitEventListener = void 0;
const common_1 = __webpack_require__(3);
const event_emitter_1 = __webpack_require__(511);
const visit_event_constants_1 = __webpack_require__(513);
let VisitEventListener = VisitEventListener_1 = class VisitEventListener {
    constructor() {
        this.logger = new common_1.Logger(VisitEventListener_1.name);
    }
    async listenSendProductList(payload) {
    }
    async listenRefundProductList(payload) {
    }
};
exports.VisitEventListener = VisitEventListener;
__decorate([
    (0, event_emitter_1.OnEvent)(visit_event_constants_1.VISIT_EVENT.SEND_VISIT_PRODUCT_LIST),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], VisitEventListener.prototype, "listenSendProductList", null);
__decorate([
    (0, event_emitter_1.OnEvent)(visit_event_constants_1.VISIT_EVENT.REFUND_VISIT_PRODUCT_LIST),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], VisitEventListener.prototype, "listenRefundProductList", null);
exports.VisitEventListener = VisitEventListener = VisitEventListener_1 = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [])
], VisitEventListener);


/***/ }),
/* 515 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SocketModule = void 0;
const common_1 = __webpack_require__(3);
const jwt_extend_module_1 = __webpack_require__(88);
const socket_emit_service_1 = __webpack_require__(204);
const socket_controller_1 = __webpack_require__(516);
const socket_gateway_1 = __webpack_require__(517);
let SocketModule = class SocketModule {
};
exports.SocketModule = SocketModule;
exports.SocketModule = SocketModule = __decorate([
    (0, common_1.Global)(),
    (0, common_1.Module)({
        imports: [jwt_extend_module_1.JwtExtendModule],
        controllers: [socket_controller_1.SocketController],
        providers: [socket_gateway_1.SocketGateway, socket_emit_service_1.SocketEmitService],
        exports: [socket_emit_service_1.SocketEmitService],
    })
], SocketModule);


/***/ }),
/* 516 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SocketController = void 0;
const common_1 = __webpack_require__(3);
const swagger_1 = __webpack_require__(6);
const external_request_1 = __webpack_require__(167);
const socket_emit_service_1 = __webpack_require__(204);
let SocketController = class SocketController {
    constructor(socketEmitService) {
        this.socketEmitService = socketEmitService;
    }
    async serverEmitDemo({ oid }) {
        this.socketEmitService.demo(oid);
    }
};
exports.SocketController = SocketController;
__decorate([
    (0, common_1.Get)('server-emit-demo'),
    __param(0, (0, external_request_1.External)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof external_request_1.TExternal !== "undefined" && external_request_1.TExternal) === "function" ? _b : Object]),
    __metadata("design:returntype", Promise)
], SocketController.prototype, "serverEmitDemo", null);
exports.SocketController = SocketController = __decorate([
    (0, common_1.Controller)('socket'),
    (0, swagger_1.ApiTags)('Socket'),
    (0, swagger_1.ApiBearerAuth)('access-token'),
    __metadata("design:paramtypes", [typeof (_a = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _a : Object])
], SocketController);


/***/ }),
/* 517 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var SocketGateway_1;
var _a, _b, _c, _d, _e, _f;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SocketGateway = void 0;
const common_1 = __webpack_require__(3);
const websockets_1 = __webpack_require__(518);
const request_ip_1 = __webpack_require__(8);
const socket_io_1 = __webpack_require__(519);
const cache_data_service_1 = __webpack_require__(30);
const jwt_extend_service_1 = __webpack_require__(90);
const socket_emit_service_1 = __webpack_require__(204);
const socket_variable_1 = __webpack_require__(205);
let SocketGateway = SocketGateway_1 = class SocketGateway {
    constructor(socketEmitService, jwtExtendService, cacheDataService) {
        this.socketEmitService = socketEmitService;
        this.jwtExtendService = jwtExtendService;
        this.cacheDataService = cacheDataService;
        this.logger = new common_1.Logger(SocketGateway_1.name);
        this.connections = {};
    }
    afterInit(io) {
        this.socketEmitService.io = io;
        this.socketEmitService.connections = this.connections;
        this.logger.debug('🚀 ===== [SOCKET] SocketGateway Init =====');
    }
    async handleConnection(socket, ...args) {
        var _a;
        const { token } = socket.handshake.auth;
        const ip = (0, request_ip_1.getClientIp)(socket.client.request);
        try {
            if (!token) {
                throw new Error('error.Token.Empty');
            }
            const jwtPayloadRefresh = this.jwtExtendService.verifyRefreshToken(token, ip);
            const { uid, oid } = jwtPayloadRefresh.data;
            socket.data.user = await this.cacheDataService.getUser(oid, uid);
            socket.join(oid.toString());
            (_a = this.connections)[uid] || (_a[uid] = []);
            this.connections[uid].push({
                socketId: socket.id,
                refreshExp: jwtPayloadRefresh.exp,
            });
            this.logger.debug(`[OID=${oid}] UserId ${uid} with IP ${ip}, `
                + `socketId ${socket.id} connected, join room ${oid}`);
        }
        catch (error) {
            this.logger.warn(`IP ${ip} with SocketId ${socket.id} has invalid token. ERROR: ${error.message}`);
            socket.disconnect();
        }
    }
    async handleDisconnect(socket) {
        var _a, _b, _c;
        const oid = (_a = socket.data.user) === null || _a === void 0 ? void 0 : _a.oid;
        const uid = (_b = socket.data.user) === null || _b === void 0 ? void 0 : _b.id;
        this.connections[uid] = (_c = this.connections[uid]) === null || _c === void 0 ? void 0 : _c.filter((i) => i.socketId !== socket.id);
        this.logger.debug(`[OID=${oid}] UserId ${uid} with socketId ${socket.id} disconnected`);
    }
    async clientEmitVisitCreate(socket, data) {
        this.io
            .in(socket.data.user.oid.toString())
            .emit(socket_variable_1.SOCKET_EVENT.SERVER_EMIT_TICKET_CREATE, `${data}, ${new Date().toISOString()}`);
        return new Date().toISOString();
    }
};
exports.SocketGateway = SocketGateway;
__decorate([
    (0, websockets_1.WebSocketServer)(),
    __metadata("design:type", typeof (_d = typeof socket_io_1.Server !== "undefined" && socket_io_1.Server) === "function" ? _d : Object)
], SocketGateway.prototype, "io", void 0);
__decorate([
    (0, websockets_1.SubscribeMessage)(socket_variable_1.SOCKET_EVENT.CLIENT_EMIT_TICKET_CREATE),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_e = typeof socket_io_1.Socket !== "undefined" && socket_io_1.Socket) === "function" ? _e : Object, Object]),
    __metadata("design:returntype", typeof (_f = typeof Promise !== "undefined" && Promise) === "function" ? _f : Object)
], SocketGateway.prototype, "clientEmitVisitCreate", null);
exports.SocketGateway = SocketGateway = SocketGateway_1 = __decorate([
    (0, websockets_1.WebSocketGateway)({ cors: { origin: '*' }, transports: ['websocket'] }),
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof socket_emit_service_1.SocketEmitService !== "undefined" && socket_emit_service_1.SocketEmitService) === "function" ? _a : Object, typeof (_b = typeof jwt_extend_service_1.JwtExtendService !== "undefined" && jwt_extend_service_1.JwtExtendService) === "function" ? _b : Object, typeof (_c = typeof cache_data_service_1.CacheDataService !== "undefined" && cache_data_service_1.CacheDataService) === "function" ? _c : Object])
], SocketGateway);


/***/ }),
/* 518 */
/***/ ((module) => {

module.exports = require("@nestjs/websockets");

/***/ }),
/* 519 */
/***/ ((module) => {

module.exports = require("socket.io");

/***/ })
/******/ 	]);
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
var exports = __webpack_exports__;

Object.defineProperty(exports, "__esModule", ({ value: true }));
const cors_1 = __webpack_require__(1);
const helmet_1 = __webpack_require__(2);
const common_1 = __webpack_require__(3);
const core_1 = __webpack_require__(4);
const platform_fastify_1 = __webpack_require__(5);
const swagger_1 = __webpack_require__(6);
const fastify_multer_1 = __webpack_require__(7);
const requestIp = __webpack_require__(8);
const exception_filter_1 = __webpack_require__(9);
const root_guard_1 = __webpack_require__(14);
const user_guard_1 = __webpack_require__(15);
const access_log_interceptor_1 = __webpack_require__(16);
const timeout_interceptor_1 = __webpack_require__(18);
const transform_response_interceptor_1 = __webpack_require__(19);
const environments_1 = __webpack_require__(20);
const app_module_1 = __webpack_require__(22);
async function bootstrap() {
    const logger = new common_1.Logger('bootstrap');
    const fastifyAdapter = new platform_fastify_1.FastifyAdapter();
    const app = await core_1.NestFactory.create(app_module_1.AppModule, fastifyAdapter, {
        logger: ['error', 'warn', 'log', 'debug'],
    });
    app.register(cors_1.default, { origin: '*' });
    app.register(fastify_multer_1.contentParser);
    await app.register(helmet_1.default, {
        contentSecurityPolicy: false,
    });
    app.use(requestIp.mw());
    app.useGlobalInterceptors(new access_log_interceptor_1.AccessLogInterceptor(), new timeout_interceptor_1.TimeoutInterceptor(), new transform_response_interceptor_1.TransformResponseInterceptor(), new common_1.ClassSerializerInterceptor(app.get(core_1.Reflector), {
        excludeExtraneousValues: true,
        exposeUnsetFields: false,
    }));
    app.useGlobalFilters(new exception_filter_1.ServerExceptionFilter());
    app.useGlobalGuards(new user_guard_1.UserGuard(app.get(core_1.Reflector)), new root_guard_1.RootGuard(app.get(core_1.Reflector)));
    app.useGlobalPipes(new common_1.ValidationPipe({
        validationError: { target: false, value: false },
        skipMissingProperties: true,
        whitelist: true,
        forbidNonWhitelisted: true,
        transform: true,
        transformOptions: {
            excludeExtraneousValues: false,
            exposeUnsetFields: false,
        },
        exceptionFactory: (errors = []) => new exception_filter_1.ValidationException(errors),
    }));
    const { NODE_VERSION, NODE_ENV, API_PUBLIC_HOST, API_PUBLIC_PORT, SQL_TYPE, SQL_HOST, SQL_PORT, SQL_DATABASE, } = (0, environments_1.GlobalConfig)();
    if (NODE_ENV !== 'production') {
        const config = new swagger_1.DocumentBuilder()
            .setTitle('Simple API')
            .setDescription('MEA API use Swagger')
            .setVersion('1.0')
            .addBearerAuth({ type: 'http', description: 'Access token' }, 'access-token')
            .build();
        const document = swagger_1.SwaggerModule.createDocument(app, config);
        swagger_1.SwaggerModule.setup('documents', app, document, {
            swaggerOptions: { persistAuthorization: true },
        });
    }
    await app.listen(API_PUBLIC_PORT, '0.0.0.0', () => {
        logger.debug(`🚀 ===== [API] Server document: http://${API_PUBLIC_HOST}:${API_PUBLIC_PORT}/documents/ =====`);
        logger.debug(`🚀 ===== [SQL] Database: jdbc:${SQL_TYPE}://${SQL_HOST}:${SQL_PORT}/${SQL_DATABASE} =====`);
        logger.debug(`🚀 ===== [TIME] Timezone: offset ${new Date().getTimezoneOffset()} =====`);
        logger.debug(`🚀 ===== [NODE] NodeJS version: ${NODE_VERSION} =====`);
    });
}
bootstrap();

})();

/******/ })()
;