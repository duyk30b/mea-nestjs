networks:
  mn_network:
    driver: bridge

volumes:
  mv_api_public:
  mv_pgadmin4:
  mv_postgres:
  mv_redis:

services:
  api_public_local:
    container_name: mc_api_public_local
    image: mi_local:1.0.0
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      - mn_network
    depends_on:
      - mongo
    build:
      dockerfile: Dockerfile
      context: './'
      target: local
    volumes:
      - ./:/app/
      - mv_api_public:/app/node_modules/
    command: ['sh', '-c', 'npm run debug api-public']
    ports:
      - '${API_PUBLIC_PORT:-20000}:${API_PUBLIC_PORT:-20000}'
      - 29229:29229

  postgres_local:
    container_name: mc_postgres_local
    image: postgres:16.1-alpine
    restart: unless-stopped
    networks:
      - mn_network
    volumes:
      - mv_postgres:/var/lib/postgresql/data
      - ./data/backup:/backup
      - ./data/restore:/restore
    environment:
      POSTGRES_DB: ${SQL_DATABASE:-mea_sql}
      POSTGRES_USER: ${SQL_USERNAME:-mea}
      POSTGRES_PASSWORD: ${SQL_PASSWORD:-Abc12345}
    ports:
      - 25432:5432

  redis_local:
    container_name: mc_redis_local
    image: redis:7.4.0-alpine
    restart: unless-stopped
    networks:
      - mn_network
    command:
      [
        'redis-server',
        '--requirepass',
        '${REDIS_PASSWORD:-Abc12345}',
        '--save',
        '60',
        '1',
        '--dir',
        '/data',
      ]
    volumes:
      - mv_redis:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-Abc12345}
      - REDIS_USERNAME=${REDIS_USERNAME:-mea}
    ports:
      - '26379:6379'

  adminer_local:
    container_name: mc_adminer_local
    image: adminer:4.8.1
    restart: unless-stopped
    networks:
      - mn_network
    depends_on:
      - postgres_local
    ports:
      - ${ADMINER_PORT:-23080}:8080

  pgadmin_local:
    container_name: mc_pgadmin_local
    image: dpage/pgadmin4:9.2.0
    restart: unless-stopped
    networks:
      - mn_network
    volumes:
      - mv_pgadmin4:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '25050:80'

  redis_insight_local:
    container_name: mc_redis_insight_local
    image: redis/redisinsight:2.52
    restart: unless-stopped
    networks:
      - mn_network
    depends_on:
      - redis_local
    volumes:
      - ./data/redis-insight:/db
    ports:
      - '${REDIS_INSIGHT_PORT:-25540}:5540'

  portainer_local:
    container_name: mc_portainer_local
    image: portainer/portainer-ce:2.20.3-alpine
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/portainer:/data
    ports:
      - 29000:9000

  mongo:
    image: mongo:8.0.15-noble
    container_name: mc_mongo
    restart: unless-stopped
    networks:
      - mn_network
    # volumes:
    #   - ./data/mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: mea_mongodb
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express:1.0.2-20
    container_name: mc_mongo_express
    restart: unless-stopped
    depends_on:
      - mongo
    networks:
      - mn_network
    ports:
      - 28081:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH_ENABLED: true
      ME_CONFIG_BASICAUTH_USERNAME: mongoexpressuser
      ME_CONFIG_BASICAUTH_PASSWORD: mongoexpresspass
