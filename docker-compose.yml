networks:
  mn_network:
    driver: bridge

volumes:
  mv_api_public:
  mv_file_service:


services:
  api_public:
    container_name: mc_api_public_local
    image: mi_local:1.0.0
    restart: unless-stopped
    networks:
      - mn_network
    build:
      dockerfile: Dockerfile
      context: './'
      target: local
    volumes:
      - ./:/app/
      - mv_api_public:/app/node_modules/
    command: [ 'sh', '-c', 'npm run debug api-public' ]
    ports:
      - '${API_PUBLIC_PORT:-20000}:${API_PUBLIC_PORT:-20000}'
      - 29229:29229

  postgres:
    container_name: mc_postgres
    image: postgres:16.1-alpine
    restart: unless-stopped
    networks:
      - mn_network
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./data/backup:/backup
      - ./data/restore:/restore
    environment:
      POSTGRES_DB: ${SQL_DATABASE:-mea_sql}
      POSTGRES_USER: ${SQL_USERNAME:-mea}
      POSTGRES_PASSWORD: ${SQL_PASSWORD:-Abc12345}
    ports:
      - 25432:5432

  redis:
    container_name: mc_redis
    image: redis:7.4.0-alpine
    restart: unless-stopped
    networks:
      - mn_network
    command:
      [
        'redis-server',
        '--requirepass',
        '${REDIS_PASSWORD:-Abc12345}',
        '--save',
        '60',
        '1',
        '--dir',
        '/data'
      ]
    volumes:
      - ./data/redis:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-Abc12345}
      - REDIS_USERNAME=${REDIS_USERNAME:-mea}
    ports:
      - '26379:6379'

  adminer:
    container_name: mc_adminer
    image: adminer:4.8.1
    restart: unless-stopped
    networks:
      - mn_network
    depends_on:
      - postgres
    ports:
      - ${ADMINER_PORT:-23080}:8080

  pgadmin:
    container_name: mc_pgadmin
    image: dpage/pgadmin4:8.14.0
    restart: unless-stopped
    networks:
      - mn_network
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "25050:80"

  redis-insight:
    container_name: mc_redis-insight
    image: redis/redisinsight:2.52
    restart: unless-stopped
    networks:
      - mn_network
    depends_on:
      - redis
    volumes:
      - ./data/redis-insight:/db
    ports:
      - '${REDIS_INSIGHT_PORT:-25540}:5540'

  portainer:
    container_name: mc_portainer
    image: portainer/portainer-ce:2.20.3-alpine
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/portainer:/data
    ports:
      - 29000:9000
